

Microchip MPLAB XC8 Assembler V2.30 build 20200825195618 
                                                                                               Wed Dec 02 12:18:33 2020

Microchip MPLAB XC8 C Compiler v2.30 (Free license) build 20200825195618 Og1 
     1                           	processor	18F4520
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    10                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    11                           	psect	text0,global,reloc=2,class=CODE,delta=1
    12                           	psect	text1,global,reloc=2,class=CODE,delta=1
    13                           	psect	text2,global,reloc=2,class=CODE,delta=1
    14                           	psect	text3,global,reloc=2,class=CODE,delta=1
    15                           	psect	text4,global,reloc=2,class=CODE,delta=1
    16                           	psect	text5,global,reloc=2,class=CODE,delta=1
    17                           	psect	text6,global,reloc=2,class=CODE,delta=1
    18                           	psect	text7,global,reloc=2,class=CODE,delta=1
    19                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=1
    20                           	psect	text9,global,reloc=2,class=CODE,delta=1,group=1
    21                           	psect	text10,global,reloc=2,class=CODE,delta=1
    22                           	psect	text11,global,reloc=2,class=CODE,delta=1
    23                           	psect	text12,global,reloc=2,class=CODE,delta=1
    24                           	psect	text13,global,reloc=2,class=CODE,delta=1
    25                           	psect	text14,global,reloc=2,class=CODE,delta=1
    26                           	psect	text15,global,reloc=2,class=CODE,delta=1
    27                           	psect	text16,global,reloc=2,class=CODE,delta=1
    28                           	psect	text17,global,reloc=2,class=CODE,delta=1
    29                           	psect	text18,global,reloc=2,class=CODE,delta=1
    30                           	psect	text19,global,reloc=2,class=CODE,delta=1,group=1
    31                           	psect	text20,global,reloc=2,class=CODE,delta=1,group=1
    32                           	psect	text21,global,reloc=2,class=CODE,delta=1
    33                           	psect	text22,global,reloc=2,class=CODE,delta=1,group=1
    34                           	psect	text23,global,reloc=2,class=CODE,delta=1,group=1
    35                           	psect	text24,global,reloc=2,class=CODE,delta=1,group=1
    36                           	psect	text25,global,reloc=2,class=CODE,delta=1
    37                           	psect	text26,global,reloc=2,class=CODE,delta=1
    38                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    39                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    40                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    41                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    42  0000                     
    43                           ; Version 2.20
    44                           ; Generated 12/02/2020 GMT
    45                           ; 
    46                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    47                           ; All rights reserved.
    48                           ; 
    49                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    50                           ; 
    51                           ; Redistribution and use in source and binary forms, with or without modification, are
    52                           ; permitted provided that the following conditions are met:
    53                           ; 
    54                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    55                           ;        conditions and the following disclaimer.
    56                           ; 
    57                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    58                           ;        of conditions and the following disclaimer in the documentation and/or other
    59                           ;        materials provided with the distribution.
    60                           ; 
    61                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    62                           ;        software without specific prior written permission.
    63                           ; 
    64                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    65                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    66                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    67                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    68                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    69                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    70                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    71                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    72                           ; 
    73                           ; 
    74                           ; Code-generator required, PIC18F4520 Definitions
    75                           ; 
    76                           ; SFR Addresses
    77  0000                     
    78                           	psect	idataCOMRAM
    79  001D74                     __pidataCOMRAM:
    80                           	callstack 0
    81                           
    82                           ;initializer for _menuNum
    83  001D74  0001               	dw	1
    84                           
    85                           ;initializer for _grau
    86  001D76  DF                 	db	223
    87  0000                     _ADRESL	set	4035
    88  0000                     _ADRESH	set	4036
    89  0000                     _ADCON2	set	4032
    90  0000                     _ADCON0	set	4034
    91  0000                     _TRISE	set	3990
    92  0000                     _TRISD	set	3989
    93  0000                     _TRISC	set	3988
    94  0000                     _TRISB	set	3987
    95  0000                     _TRISA	set	3986
    96  0000                     _PORTE	set	3972
    97  0000                     _PORTD	set	3971
    98  0000                     _PORTC	set	3970
    99  0000                     _PORTA	set	3968
   100  0000                     _PORTB	set	3969
   101                           
   102                           	psect	smallconst
   103  000600                     __psmallconst:
   104                           	callstack 0
   105  000600  00                 	db	0
   106  000601                     STR_7:
   107  000601  3C                 	db	60	;'<'
   108  000602  20                 	db	32
   109  000603  20                 	db	32
   110  000604  20                 	db	32
   111  000605  20                 	db	32
   112  000606  4B                 	db	75	;'K'
   113  000607  65                 	db	101	;'e'
   114  000608  6C                 	db	108	;'l'
   115  000609  76                 	db	118	;'v'
   116  00060A  69                 	db	105	;'i'
   117  00060B  6E                 	db	110	;'n'
   118  00060C  20                 	db	32
   119  00060D  20                 	db	32
   120  00060E  20                 	db	32
   121  00060F  20                 	db	32
   122  000610  20                 	db	32
   123  000611  00                 	db	0
   124  000612                     STR_1:
   125  000612  20                 	db	32
   126  000613  20                 	db	32
   127  000614  20                 	db	32
   128  000615  20                 	db	32
   129  000616  20                 	db	32
   130  000617  43                 	db	67	;'C'
   131  000618  65                 	db	101	;'e'
   132  000619  6C                 	db	108	;'l'
   133  00061A  73                 	db	115	;'s'
   134  00061B  69                 	db	105	;'i'
   135  00061C  75                 	db	117	;'u'
   136  00061D  73                 	db	115	;'s'
   137  00061E  20                 	db	32
   138  00061F  20                 	db	32
   139  000620  20                 	db	32
   140  000621  3E                 	db	62	;'>'
   141  000622  00                 	db	0
   142  000623                     STR_4:
   143  000623  3C                 	db	60	;'<'
   144  000624  20                 	db	32
   145  000625  20                 	db	32
   146  000626  46                 	db	70	;'F'
   147  000627  61                 	db	97	;'a'
   148  000628  68                 	db	104	;'h'
   149  000629  72                 	db	114	;'r'
   150  00062A  65                 	db	101	;'e'
   151  00062B  6E                 	db	110	;'n'
   152  00062C  68                 	db	104	;'h'
   153  00062D  65                 	db	101	;'e'
   154  00062E  69                 	db	105	;'i'
   155  00062F  74                 	db	116	;'t'
   156  000630  20                 	db	32
   157  000631  20                 	db	32
   158  000632  3E                 	db	62	;'>'
   159  000633  00                 	db	0
   160  000634                     STR_9:
   161  000634  4B                 	db	75	;'K'
   162  000635  20                 	db	32
   163  000636  20                 	db	32
   164  000637  20                 	db	32
   165  000638  00                 	db	0
   166  000639                     STR_3:
   167  000639  43                 	db	67	;'C'
   168  00063A  20                 	db	32
   169  00063B  20                 	db	32
   170  00063C  00                 	db	0
   171  00063D                     STR_6:
   172  00063D  46                 	db	70	;'F'
   173  00063E  20                 	db	32
   174  00063F  20                 	db	32
   175  000640  00                 	db	0
   176  000641  00                 	db	0	; dummy byte at the end
   177  0000                     
   178                           ; #config settings
   179                           
   180                           	psect	cinit
   181  001CA2                     __pcinit:
   182                           	callstack 0
   183  001CA2                     start_initialization:
   184                           	callstack 0
   185  001CA2                     __initialization:
   186                           	callstack 0
   187                           
   188                           ; Initialize objects allocated to COMRAM (3 bytes)
   189                           ; load TBLPTR registers with __pidataCOMRAM
   190  001CA2  0E74               	movlw	low __pidataCOMRAM
   191  001CA4  6EF6               	movwf	tblptrl,c
   192  001CA6  0E1D               	movlw	high __pidataCOMRAM
   193  001CA8  6EF7               	movwf	tblptrh,c
   194  001CAA  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   195  001CAC  6EF8               	movwf	tblptru,c
   196  001CAE  0009               	tblrd		*+	;fetch initializer
   197  001CB0  CFF5 F04E          	movff	tablat,__pdataCOMRAM
   198  001CB4  0009               	tblrd		*+	;fetch initializer
   199  001CB6  CFF5 F04F          	movff	tablat,__pdataCOMRAM+1
   200  001CBA  0009               	tblrd		*+	;fetch initializer
   201  001CBC  CFF5 F050          	movff	tablat,__pdataCOMRAM+2
   202                           
   203                           ; Clear objects allocated to COMRAM (14 bytes)
   204  001CC0  EE00  F040         	lfsr	0,__pbssCOMRAM
   205  001CC4  0E0E               	movlw	14
   206  001CC6                     clear_0:
   207  001CC6  6AEE               	clrf	postinc0,c
   208  001CC8  06E8               	decf	wreg,f,c
   209  001CCA  E1FD               	bnz	clear_0
   210  001CCC                     end_of_initialization:
   211                           	callstack 0
   212  001CCC                     __end_of__initialization:
   213                           	callstack 0
   214  001CCC  0E00               	movlw	low (__Lmediumconst shr (0+16))
   215  001CCE  6EF8               	movwf	tblptru,c
   216  001CD0  0100               	movlb	0
   217  001CD2  EFD5  F00C         	goto	_main	;jump to C main() function
   218                           
   219                           	psect	bssCOMRAM
   220  000040                     __pbssCOMRAM:
   221                           	callstack 0
   222  000040                     kpDebounce@valorAntigo:
   223                           	callstack 0
   224  000040                     	ds	2
   225  000042                     kpDebounce@valorNovo:
   226                           	callstack 0
   227  000042                     	ds	2
   228  000044                     _valor:
   229                           	callstack 0
   230  000044                     	ds	2
   231  000046                     kpDebounce@tempo:
   232                           	callstack 0
   233  000046                     	ds	1
   234  000047                     _tecla:
   235                           	callstack 0
   236  000047                     	ds	1
   237  000048                     _str:
   238                           	callstack 0
   239  000048                     	ds	6
   240                           
   241                           	psect	dataCOMRAM
   242  00004E                     __pdataCOMRAM:
   243                           	callstack 0
   244  00004E                     _menuNum:
   245                           	callstack 0
   246  00004E                     	ds	2
   247  000050                     _grau:
   248                           	callstack 0
   249  000050                     	ds	1
   250                           
   251                           	psect	cstackCOMRAM
   252  000001                     __pcstackCOMRAM:
   253                           	callstack 0
   254  000001                     ??_kpDebounce:
   255  000001                     ?_adcRead:
   256                           	callstack 0
   257  000001                     ?_kpRead:
   258                           	callstack 0
   259  000001                     ?___wmul:
   260                           	callstack 0
   261  000001                     ?___lwmod:
   262                           	callstack 0
   263  000001                     Delay40us@i:
   264                           	callstack 0
   265  000001                     digitalWrite@pin:
   266                           	callstack 0
   267  000001                     pinMode@pin:
   268                           	callstack 0
   269  000001                     adcRead@channel:
   270                           	callstack 0
   271  000001                     ___wmul@multiplier:
   272                           	callstack 0
   273  000001                     ___lwmod@dividend:
   274                           	callstack 0
   275                           
   276                           ; 2 bytes @ 0x0
   277  000001                     	ds	1
   278  000002                     Delay2ms@i:
   279                           	callstack 0
   280                           
   281                           ; 1 bytes @ 0x1
   282  000002                     	ds	1
   283  000003                     ??_readButton:
   284  000003                     digitalWrite@value:
   285                           	callstack 0
   286  000003                     pinMode@type:
   287                           	callstack 0
   288  000003                     adcRead@ADvalor:
   289                           	callstack 0
   290  000003                     ___wmul@multiplicand:
   291                           	callstack 0
   292  000003                     ___lwmod@divisor:
   293                           	callstack 0
   294                           
   295                           ; 2 bytes @ 0x2
   296  000003                     	ds	2
   297  000005                     ??_digitalWrite:
   298  000005                     ??_pinMode:
   299  000005                     ?___xxtofl:
   300                           	callstack 0
   301  000005                     ___lwmod@counter:
   302                           	callstack 0
   303  000005                     ___wmul@product:
   304                           	callstack 0
   305  000005                     ___xxtofl@val:
   306                           	callstack 0
   307                           
   308                           ; 4 bytes @ 0x4
   309  000005                     	ds	1
   310  000006                     ?___lwdiv:
   311                           	callstack 0
   312  000006                     kpDebounce@old_D:
   313                           	callstack 0
   314  000006                     ___lwdiv@dividend:
   315                           	callstack 0
   316                           
   317                           ; 2 bytes @ 0x5
   318  000006                     	ds	1
   319  000007                     ?___awdiv:
   320                           	callstack 0
   321  000007                     lcdCommand@old_D:
   322                           	callstack 0
   323  000007                     lcdData@valor:
   324                           	callstack 0
   325  000007                     kpDebounce@k:
   326                           	callstack 0
   327  000007                     ___awdiv@dividend:
   328                           	callstack 0
   329                           
   330                           ; 2 bytes @ 0x6
   331  000007                     	ds	1
   332  000008                     lcdCommand@cmd:
   333                           	callstack 0
   334  000008                     lcdData@old_D:
   335                           	callstack 0
   336  000008                     ___lwdiv@divisor:
   337                           	callstack 0
   338                           
   339                           ; 2 bytes @ 0x7
   340  000008                     	ds	1
   341  000009                     ??___xxtofl:
   342  000009                     kpDebounce@j:
   343                           	callstack 0
   344  000009                     lcdPrint@str:
   345                           	callstack 0
   346  000009                     lcdSetCursor@line:
   347                           	callstack 0
   348  000009                     ___awdiv@divisor:
   349                           	callstack 0
   350                           
   351                           ; 2 bytes @ 0x8
   352  000009                     	ds	1
   353  00000A                     kpDebounce@i:
   354                           	callstack 0
   355  00000A                     ___lwdiv@quotient:
   356                           	callstack 0
   357                           
   358                           ; 2 bytes @ 0x9
   359  00000A                     	ds	1
   360  00000B                     ??_lcdPrint:
   361  00000B                     ___awdiv@counter:
   362                           	callstack 0
   363  00000B                     lcdSetCursor@col:
   364                           	callstack 0
   365                           
   366                           ; 2 bytes @ 0xA
   367  00000B                     	ds	1
   368  00000C                     ___awdiv@sign:
   369                           	callstack 0
   370  00000C                     ___lwdiv@counter:
   371                           	callstack 0
   372                           
   373                           ; 1 bytes @ 0xB
   374  00000C                     	ds	1
   375  00000D                     lcdPrint@i:
   376                           	callstack 0
   377  00000D                     ___xxtofl@sign:
   378                           	callstack 0
   379  00000D                     itoa@val:
   380                           	callstack 0
   381  00000D                     ___awdiv@quotient:
   382                           	callstack 0
   383                           
   384                           ; 2 bytes @ 0xC
   385  00000D                     	ds	1
   386  00000E                     ___xxtofl@exp:
   387                           	callstack 0
   388                           
   389                           ; 1 bytes @ 0xD
   390  00000E                     	ds	1
   391  00000F                     itoa@str:
   392                           	callstack 0
   393  00000F                     ___xxtofl@arg:
   394                           	callstack 0
   395                           
   396                           ; 4 bytes @ 0xE
   397  00000F                     	ds	2
   398  000011                     
   399                           ; 1 bytes @ 0x10
   400  000011                     	ds	2
   401  000013                     ?___flmul:
   402                           	callstack 0
   403  000013                     ___flmul@b:
   404                           	callstack 0
   405                           
   406                           ; 4 bytes @ 0x12
   407  000013                     	ds	4
   408  000017                     ___flmul@a:
   409                           	callstack 0
   410                           
   411                           ; 4 bytes @ 0x16
   412  000017                     	ds	4
   413  00001B                     ??___flmul:
   414                           
   415                           ; 1 bytes @ 0x1A
   416  00001B                     	ds	4
   417  00001F                     ___flmul@sign:
   418                           	callstack 0
   419                           
   420                           ; 1 bytes @ 0x1E
   421  00001F                     	ds	1
   422  000020                     ___flmul@grs:
   423                           	callstack 0
   424                           
   425                           ; 4 bytes @ 0x1F
   426  000020                     	ds	4
   427  000024                     ___flmul@aexp:
   428                           	callstack 0
   429                           
   430                           ; 1 bytes @ 0x23
   431  000024                     	ds	1
   432  000025                     ___flmul@bexp:
   433                           	callstack 0
   434                           
   435                           ; 1 bytes @ 0x24
   436  000025                     	ds	1
   437  000026                     ___flmul@prod:
   438                           	callstack 0
   439                           
   440                           ; 4 bytes @ 0x25
   441  000026                     	ds	4
   442  00002A                     ___flmul@temp:
   443                           	callstack 0
   444                           
   445                           ; 2 bytes @ 0x29
   446  00002A                     	ds	2
   447  00002C                     ?___fltol:
   448                           	callstack 0
   449  00002C                     ___fltol@f1:
   450                           	callstack 0
   451                           
   452                           ; 4 bytes @ 0x2B
   453  00002C                     	ds	4
   454  000030                     ??___fltol:
   455                           
   456                           ; 1 bytes @ 0x2F
   457  000030                     	ds	4
   458  000034                     ___fltol@sign1:
   459                           	callstack 0
   460                           
   461                           ; 1 bytes @ 0x33
   462  000034                     	ds	1
   463  000035                     ___fltol@exp1:
   464                           	callstack 0
   465                           
   466                           ; 1 bytes @ 0x34
   467  000035                     	ds	1
   468  000036                     _celsius$899:
   469                           	callstack 0
   470  000036                     _fahr$900:
   471                           	callstack 0
   472  000036                     _kelvin$901:
   473                           	callstack 0
   474                           
   475                           ; 4 bytes @ 0x35
   476  000036                     	ds	4
   477  00003A                     celsius@tmp:
   478                           	callstack 0
   479  00003A                     fahr@tmp:
   480                           	callstack 0
   481  00003A                     kelvin@tmp:
   482                           	callstack 0
   483                           
   484                           ; 2 bytes @ 0x39
   485  00003A                     	ds	2
   486  00003C                     fahr@tmpFahr:
   487                           	callstack 0
   488  00003C                     kelvin@tmpKel:
   489                           	callstack 0
   490                           
   491                           ; 2 bytes @ 0x3B
   492  00003C                     	ds	2
   493  00003E                     ??_main:
   494                           
   495                           ; 1 bytes @ 0x3D
   496  00003E                     	ds	2
   497                           
   498 ;;
   499 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   500 ;;
   501 ;; *************** function _main *****************
   502 ;; Defined at:
   503 ;;		line 30 in file "main.c"
   504 ;; Parameters:    Size  Location     Type
   505 ;;		None
   506 ;; Auto vars:     Size  Location     Type
   507 ;;		None
   508 ;; Return value:  Size  Location     Type
   509 ;;                  1    wreg      void 
   510 ;; Registers used:
   511 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   512 ;; Tracked objects:
   513 ;;		On entry : 0/0
   514 ;;		On exit  : 0/0
   515 ;;		Unchanged: 0/0
   516 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   517 ;;      Params:         0       0       0       0       0       0       0
   518 ;;      Locals:         0       0       0       0       0       0       0
   519 ;;      Temps:          2       0       0       0       0       0       0
   520 ;;      Totals:         2       0       0       0       0       0       0
   521 ;;Total ram usage:        2 bytes
   522 ;; Hardware stack levels required when called:    5
   523 ;; This function calls:
   524 ;;		_adcInit
   525 ;;		_celsius
   526 ;;		_fahr
   527 ;;		_kelvin
   528 ;;		_kpDebounce
   529 ;;		_kpInit
   530 ;;		_lcdInit
   531 ;;		_readButton
   532 ;; This function is called by:
   533 ;;		Startup code after reset
   534 ;; This function uses a non-reentrant model
   535 ;;
   536                           
   537                           	psect	text0
   538  0019AA                     __ptext0:
   539                           	callstack 0
   540  0019AA                     _main:
   541                           	callstack 26
   542  0019AA                     
   543                           ;main.c: 31:     kpInit();
   544  0019AA  ECB5  F00E         	call	_kpInit	;wreg free
   545                           
   546                           ;main.c: 32:     adcInit();
   547  0019AE  EC6B  F00E         	call	_adcInit	;wreg free
   548                           
   549                           ;main.c: 33:     lcdInit();
   550  0019B2  EC12  F00D         	call	_lcdInit	;wreg free
   551  0019B6                     l2337:
   552                           
   553                           ;main.c: 36:         kpDebounce();
   554  0019B6  EC5E  F008         	call	_kpDebounce	;wreg free
   555  0019BA                     
   556                           ;main.c: 37:         readButton();
   557  0019BA  EC4E  F00C         	call	_readButton	;wreg free
   558                           
   559                           ;main.c: 39:         switch (menuNum) {
   560  0019BE  EFF6  F00C         	goto	l2355
   561  0019C2                     l2341:
   562                           
   563                           ;main.c: 41:                 ((PORTB) |= (1<<(5)));
   564  0019C2  8A81               	bsf	129,5,c	;volatile
   565                           
   566                           ;main.c: 42:                 ((PORTB) &= ~(1<<(6)));
   567  0019C4  9C81               	bcf	129,6,c	;volatile
   568                           
   569                           ;main.c: 43:                 ((PORTB) &= ~(1<<(7)));
   570  0019C6  9E81               	bcf	129,7,c	;volatile
   571  0019C8                     
   572                           ;main.c: 45:                 celsius();
   573  0019C8  EC56  F00A         	call	_celsius	;wreg free
   574                           
   575                           ;main.c: 46:                 break;
   576  0019CC  EFDB  F00C         	goto	l2337
   577  0019D0                     l2345:
   578                           
   579                           ;main.c: 48:                 ((PORTB) &= ~(1<<(5)));
   580  0019D0  9A81               	bcf	129,5,c	;volatile
   581                           
   582                           ;main.c: 49:                 ((PORTB) |= (1<<(6)));
   583  0019D2  8C81               	bsf	129,6,c	;volatile
   584                           
   585                           ;main.c: 50:                 ((PORTB) &= ~(1<<(7)));
   586  0019D4  9E81               	bcf	129,7,c	;volatile
   587  0019D6                     
   588                           ;main.c: 51:                 fahr();
   589  0019D6  EC1B  F009         	call	_fahr	;wreg free
   590                           
   591                           ;main.c: 52:                 break;
   592  0019DA  EFDB  F00C         	goto	l2337
   593  0019DE                     l2349:
   594                           
   595                           ;main.c: 54:                 ((PORTB) &= ~(1<<(5)));
   596  0019DE  9A81               	bcf	129,5,c	;volatile
   597                           
   598                           ;main.c: 55:                 ((PORTB) &= ~(1<<(6)));
   599  0019E0  9C81               	bcf	129,6,c	;volatile
   600                           
   601                           ;main.c: 56:                 ((PORTB) |= (1<<(7)));
   602  0019E2  8E81               	bsf	129,7,c	;volatile
   603  0019E4                     
   604                           ;main.c: 57:                 kelvin();
   605  0019E4  ECC4  F009         	call	_kelvin	;wreg free
   606                           
   607                           ;main.c: 58:                 break;
   608  0019E8  EFDB  F00C         	goto	l2337
   609  0019EC                     l2355:
   610  0019EC  C04E  F03E         	movff	_menuNum,??_main
   611  0019F0  C04F  F03F         	movff	_menuNum+1,??_main+1
   612                           
   613                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
   614                           ; Switch size 1, requested type "simple"
   615                           ; Number of cases is 1, Range of values is 0 to 0
   616                           ; switch strategies available:
   617                           ; Name         Instructions Cycles
   618                           ; simple_byte            4     3 (average)
   619                           ;	Chosen strategy is simple_byte
   620  0019F4  503F               	movf	(??_main+1)^0,w,c
   621  0019F6  0A00               	xorlw	0	; case 0
   622  0019F8  B4D8               	btfsc	status,2,c
   623  0019FA  EF01  F00D         	goto	l2367
   624  0019FE  EFDB  F00C         	goto	l2337
   625  001A02                     l2367:
   626                           
   627                           ; Switch size 1, requested type "simple"
   628                           ; Number of cases is 3, Range of values is 1 to 3
   629                           ; switch strategies available:
   630                           ; Name         Instructions Cycles
   631                           ; simple_byte           10     6 (average)
   632                           ;	Chosen strategy is simple_byte
   633  001A02  503E               	movf	??_main^0,w,c
   634  001A04  0A01               	xorlw	1	; case 1
   635  001A06  B4D8               	btfsc	status,2,c
   636  001A08  EFE1  F00C         	goto	l2341
   637  001A0C  0A03               	xorlw	3	; case 2
   638  001A0E  B4D8               	btfsc	status,2,c
   639  001A10  EFE8  F00C         	goto	l2345
   640  001A14  0A01               	xorlw	1	; case 3
   641  001A16  B4D8               	btfsc	status,2,c
   642  001A18  EFEF  F00C         	goto	l2349
   643  001A1C  EFDB  F00C         	goto	l2337
   644  001A20  EF00  F000         	goto	start
   645  001A24                     __end_of_main:
   646                           	callstack 0
   647                           
   648 ;; *************** function _readButton *****************
   649 ;; Defined at:
   650 ;;		line 130 in file "main.c"
   651 ;; Parameters:    Size  Location     Type
   652 ;;		None
   653 ;; Auto vars:     Size  Location     Type
   654 ;;		None
   655 ;; Return value:  Size  Location     Type
   656 ;;                  1    wreg      void 
   657 ;; Registers used:
   658 ;;		wreg, status,2, status,0, cstack
   659 ;; Tracked objects:
   660 ;;		On entry : 0/0
   661 ;;		On exit  : 0/0
   662 ;;		Unchanged: 0/0
   663 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   664 ;;      Params:         0       0       0       0       0       0       0
   665 ;;      Locals:         0       0       0       0       0       0       0
   666 ;;      Temps:          2       0       0       0       0       0       0
   667 ;;      Totals:         2       0       0       0       0       0       0
   668 ;;Total ram usage:        2 bytes
   669 ;; Hardware stack levels used:    1
   670 ;; Hardware stack levels required when called:    1
   671 ;; This function calls:
   672 ;;		_kpRead
   673 ;; This function is called by:
   674 ;;		_main
   675 ;; This function uses a non-reentrant model
   676 ;;
   677                           
   678                           	psect	text1
   679  00189C                     __ptext1:
   680                           	callstack 0
   681  00189C                     _readButton:
   682                           	callstack 29
   683  00189C                     
   684                           ;main.c: 131:     if (kpRead() != tecla) {
   685  00189C  5047               	movf	_tecla^0,w,c
   686  00189E  6E03               	movwf	??_readButton^0,c
   687  0018A0  6A04               	clrf	(??_readButton+1)^0,c
   688  0018A2  ECB0  F00E         	call	_kpRead	;wreg free
   689  0018A6  5003               	movf	??_readButton^0,w,c
   690  0018A8  1801               	xorwf	?_kpRead^0,w,c
   691  0018AA  E109               	bnz	u2230
   692  0018AC  5004               	movf	(??_readButton+1)^0,w,c
   693  0018AE  1802               	xorwf	(?_kpRead+1)^0,w,c
   694  0018B0  B4D8               	btfsc	status,2,c
   695  0018B2  EF5D  F00C         	goto	u2231
   696  0018B6  EF5F  F00C         	goto	u2230
   697  0018BA                     u2231:
   698  0018BA  EF95  F00C         	goto	l72
   699  0018BE                     u2230:
   700  0018BE                     
   701                           ;main.c: 132:         tecla = kpRead();
   702  0018BE  ECB0  F00E         	call	_kpRead	;wreg free
   703  0018C2  5001               	movf	?_kpRead^0,w,c
   704  0018C4  6E47               	movwf	_tecla^0,c
   705  0018C6                     
   706                           ;main.c: 134:         if (((tecla) & (1<<(0)))) {
   707  0018C6  A047               	btfss	_tecla^0,0,c
   708  0018C8  EF68  F00C         	goto	u2241
   709  0018CC  EF6A  F00C         	goto	u2240
   710  0018D0                     u2241:
   711  0018D0  EF7C  F00C         	goto	l67
   712  0018D4                     u2240:
   713  0018D4                     
   714                           ;main.c: 135:             if (menuNum <= 3) menuNum++;
   715  0018D4  BE4F               	btfsc	(_menuNum+1)^0,7,c
   716  0018D6  EF78  F00C         	goto	u2250
   717  0018DA  504F               	movf	(_menuNum+1)^0,w,c
   718  0018DC  E107               	bnz	u2251
   719  0018DE  0E04               	movlw	4
   720  0018E0  5C4E               	subwf	_menuNum^0,w,c
   721  0018E2  B0D8               	btfsc	status,0,c
   722  0018E4  EF76  F00C         	goto	u2251
   723  0018E8  EF78  F00C         	goto	u2250
   724  0018EC                     u2251:
   725  0018EC  EF95  F00C         	goto	l72
   726  0018F0                     u2250:
   727  0018F0  4A4E               	infsnz	_menuNum^0,f,c
   728  0018F2  2A4F               	incf	(_menuNum+1)^0,f,c
   729  0018F4  EF95  F00C         	goto	l72
   730  0018F8                     l67:
   731  0018F8  A647               	btfss	_tecla^0,3,c
   732  0018FA  EF81  F00C         	goto	u2261
   733  0018FE  EF83  F00C         	goto	u2260
   734  001902                     u2261:
   735  001902  EF95  F00C         	goto	l72
   736  001906                     u2260:
   737  001906                     
   738                           ;main.c: 137:             if (menuNum > 0) menuNum--;
   739  001906  BE4F               	btfsc	(_menuNum+1)^0,7,c
   740  001908  EF8E  F00C         	goto	u2271
   741  00190C  504F               	movf	(_menuNum+1)^0,w,c
   742  00190E  E108               	bnz	u2270
   743  001910  044E               	decf	_menuNum^0,w,c
   744  001912  A0D8               	btfss	status,0,c
   745  001914  EF8E  F00C         	goto	u2271
   746  001918  EF90  F00C         	goto	u2270
   747  00191C                     u2271:
   748  00191C  EF95  F00C         	goto	l69
   749  001920                     u2270:
   750  001920  064E               	decf	_menuNum^0,f,c
   751  001922  A0D8               	btfss	status,0,c
   752  001924  064F               	decf	(_menuNum+1)^0,f,c
   753  001926  EF95  F00C         	goto	l72
   754  00192A                     l69:
   755  00192A                     l72:
   756  00192A  0012               	return		;funcret
   757  00192C                     __end_of_readButton:
   758                           	callstack 0
   759                           
   760 ;; *************** function _kpRead *****************
   761 ;; Defined at:
   762 ;;		line 35 in file "keypad.c"
   763 ;; Parameters:    Size  Location     Type
   764 ;;		None
   765 ;; Auto vars:     Size  Location     Type
   766 ;;		None
   767 ;; Return value:  Size  Location     Type
   768 ;;                  2    0[COMRAM] unsigned int 
   769 ;; Registers used:
   770 ;;		None
   771 ;; Tracked objects:
   772 ;;		On entry : 0/0
   773 ;;		On exit  : 0/0
   774 ;;		Unchanged: 0/0
   775 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   776 ;;      Params:         2       0       0       0       0       0       0
   777 ;;      Locals:         0       0       0       0       0       0       0
   778 ;;      Temps:          0       0       0       0       0       0       0
   779 ;;      Totals:         2       0       0       0       0       0       0
   780 ;;Total ram usage:        2 bytes
   781 ;; Hardware stack levels used:    1
   782 ;; This function calls:
   783 ;;		Nothing
   784 ;; This function is called by:
   785 ;;		_readButton
   786 ;; This function uses a non-reentrant model
   787 ;;
   788                           
   789                           	psect	text2
   790  001D60                     __ptext2:
   791                           	callstack 0
   792  001D60                     _kpRead:
   793                           	callstack 29
   794  001D60                     
   795                           ;keypad.c: 36:     return valor;
   796  001D60  C044  F001         	movff	_valor,?_kpRead
   797  001D64  C045  F002         	movff	_valor+1,?_kpRead+1
   798  001D68  0012               	return		;funcret
   799  001D6A                     __end_of_kpRead:
   800                           	callstack 0
   801                           
   802 ;; *************** function _lcdInit *****************
   803 ;; Defined at:
   804 ;;		line 109 in file "lcd.c"
   805 ;; Parameters:    Size  Location     Type
   806 ;;		None
   807 ;; Auto vars:     Size  Location     Type
   808 ;;		None
   809 ;; Return value:  Size  Location     Type
   810 ;;                  1    wreg      void 
   811 ;; Registers used:
   812 ;;		wreg, status,2, status,0, cstack
   813 ;; Tracked objects:
   814 ;;		On entry : 0/0
   815 ;;		On exit  : 0/0
   816 ;;		Unchanged: 0/0
   817 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   818 ;;      Params:         0       0       0       0       0       0       0
   819 ;;      Locals:         0       0       0       0       0       0       0
   820 ;;      Temps:          0       0       0       0       0       0       0
   821 ;;      Totals:         0       0       0       0       0       0       0
   822 ;;Total ram usage:        0 bytes
   823 ;; Hardware stack levels used:    1
   824 ;; Hardware stack levels required when called:    3
   825 ;; This function calls:
   826 ;;		_Delay2ms
   827 ;;		_lcdCommand
   828 ;;		_pinMode
   829 ;; This function is called by:
   830 ;;		_main
   831 ;; This function uses a non-reentrant model
   832 ;;
   833                           
   834                           	psect	text3
   835  001A24                     __ptext3:
   836                           	callstack 0
   837  001A24                     _lcdInit:
   838                           	callstack 27
   839  001A24                     
   840                           ;lcd.c: 111:     pinMode(PIN_E2, 0);
   841  001A24  0E00               	movlw	0
   842  001A26  6E02               	movwf	(pinMode@pin+1)^0,c
   843  001A28  0E22               	movlw	34
   844  001A2A  6E01               	movwf	pinMode@pin^0,c
   845  001A2C  0E00               	movlw	0
   846  001A2E  6E04               	movwf	(pinMode@type+1)^0,c
   847  001A30  0E00               	movlw	0
   848  001A32  6E03               	movwf	pinMode@type^0,c
   849  001A34  EC5D  F006         	call	_pinMode	;wreg free
   850                           
   851                           ;lcd.c: 112:     pinMode(PIN_E1, 0);
   852  001A38  0E00               	movlw	0
   853  001A3A  6E02               	movwf	(pinMode@pin+1)^0,c
   854  001A3C  0E21               	movlw	33
   855  001A3E  6E01               	movwf	pinMode@pin^0,c
   856  001A40  0E00               	movlw	0
   857  001A42  6E04               	movwf	(pinMode@type+1)^0,c
   858  001A44  0E00               	movlw	0
   859  001A46  6E03               	movwf	pinMode@type^0,c
   860  001A48  EC5D  F006         	call	_pinMode	;wreg free
   861  001A4C                     
   862                           ;lcd.c: 113:     TRISD = 0x00;
   863  001A4C  0E00               	movlw	0
   864  001A4E  6E95               	movwf	149,c	;volatile
   865  001A50                     
   866                           ;lcd.c: 116:     Delay2ms();
   867  001A50  EC96  F00E         	call	_Delay2ms	;wreg free
   868  001A54                     
   869                           ;lcd.c: 117:     Delay2ms();
   870  001A54  EC96  F00E         	call	_Delay2ms	;wreg free
   871  001A58                     
   872                           ;lcd.c: 118:     Delay2ms();
   873  001A58  EC96  F00E         	call	_Delay2ms	;wreg free
   874  001A5C                     
   875                           ;lcd.c: 119:     Delay2ms();
   876  001A5C  EC96  F00E         	call	_Delay2ms	;wreg free
   877  001A60                     
   878                           ;lcd.c: 120:     Delay2ms();
   879  001A60  EC96  F00E         	call	_Delay2ms	;wreg free
   880  001A64                     
   881                           ;lcd.c: 122:     lcdCommand(0x38);
   882  001A64  0E38               	movlw	56
   883  001A66  EC96  F00C         	call	_lcdCommand
   884  001A6A                     
   885                           ;lcd.c: 123:     Delay2ms();
   886  001A6A  EC96  F00E         	call	_Delay2ms	;wreg free
   887  001A6E                     
   888                           ;lcd.c: 124:     Delay2ms();
   889  001A6E  EC96  F00E         	call	_Delay2ms	;wreg free
   890  001A72                     
   891                           ;lcd.c: 125:     lcdCommand(0x38);
   892  001A72  0E38               	movlw	56
   893  001A74  EC96  F00C         	call	_lcdCommand
   894  001A78                     
   895                           ;lcd.c: 126:     Delay2ms();
   896  001A78  EC96  F00E         	call	_Delay2ms	;wreg free
   897  001A7C                     
   898                           ;lcd.c: 127:     lcdCommand(0x38);
   899  001A7C  0E38               	movlw	56
   900  001A7E  EC96  F00C         	call	_lcdCommand
   901  001A82                     
   902                           ;lcd.c: 129:     lcdCommand(0x38);
   903  001A82  0E38               	movlw	56
   904  001A84  EC96  F00C         	call	_lcdCommand
   905  001A88                     
   906                           ;lcd.c: 130:     lcdCommand(0x06);
   907  001A88  0E06               	movlw	6
   908  001A8A  EC96  F00C         	call	_lcdCommand
   909  001A8E                     
   910                           ;lcd.c: 133:     lcdCommand(0x0C);
   911  001A8E  0E0C               	movlw	12
   912  001A90  EC96  F00C         	call	_lcdCommand
   913  001A94                     
   914                           ;lcd.c: 134:     lcdCommand(0x01);
   915  001A94  0E01               	movlw	1
   916  001A96  EC96  F00C         	call	_lcdCommand
   917  001A9A  0012               	return		;funcret
   918  001A9C                     __end_of_lcdInit:
   919                           	callstack 0
   920                           
   921 ;; *************** function _kpInit *****************
   922 ;; Defined at:
   923 ;;		line 87 in file "keypad.c"
   924 ;; Parameters:    Size  Location     Type
   925 ;;		None
   926 ;; Auto vars:     Size  Location     Type
   927 ;;		None
   928 ;; Return value:  Size  Location     Type
   929 ;;                  1    wreg      void 
   930 ;; Registers used:
   931 ;;		wreg, status,2, status,0
   932 ;; Tracked objects:
   933 ;;		On entry : 0/0
   934 ;;		On exit  : 0/0
   935 ;;		Unchanged: 0/0
   936 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   937 ;;      Params:         0       0       0       0       0       0       0
   938 ;;      Locals:         0       0       0       0       0       0       0
   939 ;;      Temps:          0       0       0       0       0       0       0
   940 ;;      Totals:         0       0       0       0       0       0       0
   941 ;;Total ram usage:        0 bytes
   942 ;; Hardware stack levels used:    1
   943 ;; This function calls:
   944 ;;		Nothing
   945 ;; This function is called by:
   946 ;;		_main
   947 ;; This function uses a non-reentrant model
   948 ;;
   949                           
   950                           	psect	text4
   951  001D6A                     __ptext4:
   952                           	callstack 0
   953  001D6A                     _kpInit:
   954                           	callstack 30
   955  001D6A                     
   956                           ;keypad.c: 89:     TRISB &= 0x07;
   957  001D6A  0E07               	movlw	7
   958  001D6C  1693               	andwf	147,f,c	;volatile
   959                           
   960                           ;keypad.c: 91:     TRISD |= 0x0f;
   961  001D6E  0E0F               	movlw	15
   962  001D70  1295               	iorwf	149,f,c	;volatile
   963  001D72  0012               	return		;funcret
   964  001D74                     __end_of_kpInit:
   965                           	callstack 0
   966                           
   967 ;; *************** function _kpDebounce *****************
   968 ;; Defined at:
   969 ;;		line 39 in file "keypad.c"
   970 ;; Parameters:    Size  Location     Type
   971 ;;		None
   972 ;; Auto vars:     Size  Location     Type
   973 ;;  k               2    6[COMRAM] int 
   974 ;;  i               1    9[COMRAM] unsigned char 
   975 ;;  j               1    8[COMRAM] unsigned char 
   976 ;;  old_D           1    5[COMRAM] unsigned char 
   977 ;; Return value:  Size  Location     Type
   978 ;;                  1    wreg      void 
   979 ;; Registers used:
   980 ;;		wreg, status,2, status,0, prodl, prodh
   981 ;; Tracked objects:
   982 ;;		On entry : 0/0
   983 ;;		On exit  : 0/0
   984 ;;		Unchanged: 0/0
   985 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   986 ;;      Params:         0       0       0       0       0       0       0
   987 ;;      Locals:         5       0       0       0       0       0       0
   988 ;;      Temps:          5       0       0       0       0       0       0
   989 ;;      Totals:        10       0       0       0       0       0       0
   990 ;;Total ram usage:       10 bytes
   991 ;; Hardware stack levels used:    1
   992 ;; This function calls:
   993 ;;		Nothing
   994 ;; This function is called by:
   995 ;;		_main
   996 ;; This function uses a non-reentrant model
   997 ;;
   998                           
   999                           	psect	text5
  1000  0010BC                     __ptext5:
  1001                           	callstack 0
  1002  0010BC                     _kpDebounce:
  1003                           	callstack 30
  1004  0010BC                     
  1005                           ;keypad.c: 40:     unsigned char i, j;;keypad.c: 41:     static unsigned char tempo;;key
      +                          pad.c: 42:     static unsigned int valorNovo = 0x0000;;keypad.c: 43:     static unsigned
      +                           int valorAntigo = 0x0000;;keypad.c: 46:     unsigned char old_D;;keypad.c: 47:     old_
      +                          D = PORTD;
  1006  0010BC  CF83 F006          	movff	3971,kpDebounce@old_D	;volatile
  1007  0010C0                     
  1008                           ;keypad.c: 51:     TRISD |= 0x0f;
  1009  0010C0  0E0F               	movlw	15
  1010  0010C2  1295               	iorwf	149,f,c	;volatile
  1011  0010C4                     
  1012                           ;keypad.c: 53:     for (i = 0; i < 3; i++) {
  1013  0010C4  0E00               	movlw	0
  1014  0010C6  6E0A               	movwf	kpDebounce@i^0,c
  1015  0010C8                     l1471:
  1016                           
  1017                           ;keypad.c: 55:         TRISB &= 0xF8;
  1018  0010C8  0EF8               	movlw	248
  1019  0010CA  1693               	andwf	147,f,c	;volatile
  1020                           
  1021                           ;keypad.c: 57:         ((TRISB) |= (1<<(i)));
  1022  0010CC  C00A  F001         	movff	kpDebounce@i,??_kpDebounce
  1023  0010D0  0E01               	movlw	1
  1024  0010D2  6E02               	movwf	(??_kpDebounce+1)^0,c
  1025  0010D4  2A01               	incf	??_kpDebounce^0,f,c
  1026  0010D6  EF6F  F008         	goto	u984
  1027  0010DA                     u985:
  1028  0010DA  90D8               	bcf	status,0,c
  1029  0010DC  3602               	rlcf	(??_kpDebounce+1)^0,f,c
  1030  0010DE                     u984:
  1031  0010DE  2E01               	decfsz	??_kpDebounce^0,f,c
  1032  0010E0  EF6D  F008         	goto	u985
  1033  0010E4  5002               	movf	(??_kpDebounce+1)^0,w,c
  1034  0010E6  1293               	iorwf	147,f,c	;volatile
  1035                           
  1036                           ;keypad.c: 59:         PORTB |= 0x07;
  1037  0010E8  0E07               	movlw	7
  1038  0010EA  1281               	iorwf	129,f,c	;volatile
  1039                           
  1040                           ;keypad.c: 60:         ((PORTB) &= ~(1<<(i)));
  1041  0010EC  C00A  F001         	movff	kpDebounce@i,??_kpDebounce
  1042  0010F0  0E01               	movlw	1
  1043  0010F2  6E02               	movwf	(??_kpDebounce+1)^0,c
  1044  0010F4  2A01               	incf	??_kpDebounce^0,f,c
  1045  0010F6  EF7F  F008         	goto	u994
  1046  0010FA                     u995:
  1047  0010FA  90D8               	bcf	status,0,c
  1048  0010FC  3602               	rlcf	(??_kpDebounce+1)^0,f,c
  1049  0010FE                     u994:
  1050  0010FE  2E01               	decfsz	??_kpDebounce^0,f,c
  1051  001100  EF7D  F008         	goto	u995
  1052  001104  5002               	movf	(??_kpDebounce+1)^0,w,c
  1053  001106  0AFF               	xorlw	255
  1054  001108  1681               	andwf	129,f,c	;volatile
  1055  00110A                     
  1056                           ;keypad.c: 63:         for (int k = 0; k < 10; k++);
  1057  00110A  0E00               	movlw	0
  1058  00110C  6E08               	movwf	(kpDebounce@k+1)^0,c
  1059  00110E  0E00               	movlw	0
  1060  001110  6E07               	movwf	kpDebounce@k^0,c
  1061  001112                     l1479:
  1062  001112  4A07               	infsnz	kpDebounce@k^0,f,c
  1063  001114  2A08               	incf	(kpDebounce@k+1)^0,f,c
  1064  001116  BE08               	btfsc	(kpDebounce@k+1)^0,7,c
  1065  001118  EF97  F008         	goto	u1001
  1066  00111C  5008               	movf	(kpDebounce@k+1)^0,w,c
  1067  00111E  E109               	bnz	u1000
  1068  001120  0E0A               	movlw	10
  1069  001122  5C07               	subwf	kpDebounce@k^0,w,c
  1070  001124  A0D8               	btfss	status,0,c
  1071  001126  EF97  F008         	goto	u1001
  1072  00112A  EF99  F008         	goto	u1000
  1073  00112E                     u1001:
  1074  00112E  EF89  F008         	goto	l1479
  1075  001132                     u1000:
  1076  001132                     
  1077                           ;keypad.c: 66:         for (j = 0; j < 4; j++) {
  1078  001132  0E00               	movlw	0
  1079  001134  6E09               	movwf	kpDebounce@j^0,c
  1080  001136                     l1489:
  1081                           
  1082                           ;keypad.c: 67:             if (!((PORTD) & (1<<(j)))) {
  1083  001136  C009  F001         	movff	kpDebounce@j,??_kpDebounce
  1084  00113A  0E01               	movlw	1
  1085  00113C  6E02               	movwf	(??_kpDebounce+1)^0,c
  1086  00113E  2A01               	incf	??_kpDebounce^0,f,c
  1087  001140  EFA4  F008         	goto	u1014
  1088  001144                     u1015:
  1089  001144  90D8               	bcf	status,0,c
  1090  001146  3602               	rlcf	(??_kpDebounce+1)^0,f,c
  1091  001148                     u1014:
  1092  001148  2E01               	decfsz	??_kpDebounce^0,f,c
  1093  00114A  EFA2  F008         	goto	u1015
  1094  00114E  5002               	movf	(??_kpDebounce+1)^0,w,c
  1095  001150  1483               	andwf	131,w,c	;volatile
  1096  001152  0900               	iorlw	0
  1097  001154  A4D8               	btfss	status,2,c
  1098  001156  EFAF  F008         	goto	u1021
  1099  00115A  EFB1  F008         	goto	u1020
  1100  00115E                     u1021:
  1101  00115E  EFC9  F008         	goto	l1493
  1102  001162                     u1020:
  1103  001162                     
  1104                           ;keypad.c: 68:                 ((valorNovo) |= (1<<((i * 4) + j)));
  1105  001162  500A               	movf	kpDebounce@i^0,w,c
  1106  001164  0D04               	mullw	4
  1107  001166  50F3               	movf	243,w,c
  1108  001168  2409               	addwf	kpDebounce@j^0,w,c
  1109  00116A  6E01               	movwf	??_kpDebounce^0,c
  1110  00116C  0E01               	movlw	1
  1111  00116E  6E02               	movwf	(??_kpDebounce+1)^0,c
  1112  001170  0E00               	movlw	0
  1113  001172  6E03               	movwf	(??_kpDebounce+2)^0,c
  1114  001174  2A01               	incf	??_kpDebounce^0,f,c
  1115  001176  EFC0  F008         	goto	u1034
  1116  00117A                     u1035:
  1117  00117A  90D8               	bcf	status,0,c
  1118  00117C  3602               	rlcf	(??_kpDebounce+1)^0,f,c
  1119  00117E  3603               	rlcf	(??_kpDebounce+2)^0,f,c
  1120  001180                     u1034:
  1121  001180  2E01               	decfsz	??_kpDebounce^0,f,c
  1122  001182  EFBD  F008         	goto	u1035
  1123  001186  5002               	movf	(??_kpDebounce+1)^0,w,c
  1124  001188  1242               	iorwf	kpDebounce@valorNovo^0,f,c
  1125  00118A  5003               	movf	(??_kpDebounce+2)^0,w,c
  1126  00118C  1243               	iorwf	(kpDebounce@valorNovo+1)^0,f,c
  1127                           
  1128                           ;keypad.c: 69:             } else {
  1129  00118E  EFE3  F008         	goto	l1495
  1130  001192                     l1493:
  1131                           
  1132                           ;keypad.c: 70:                 ((valorNovo) &= ~(1<<((i * 4) + j)));
  1133  001192  500A               	movf	kpDebounce@i^0,w,c
  1134  001194  0D04               	mullw	4
  1135  001196  50F3               	movf	243,w,c
  1136  001198  2409               	addwf	kpDebounce@j^0,w,c
  1137  00119A  6E01               	movwf	??_kpDebounce^0,c
  1138  00119C  0E01               	movlw	1
  1139  00119E  6E02               	movwf	(??_kpDebounce+1)^0,c
  1140  0011A0  0E00               	movlw	0
  1141  0011A2  6E03               	movwf	(??_kpDebounce+2)^0,c
  1142  0011A4  2A01               	incf	??_kpDebounce^0,f,c
  1143  0011A6  EFD8  F008         	goto	u1044
  1144  0011AA                     u1045:
  1145  0011AA  90D8               	bcf	status,0,c
  1146  0011AC  3602               	rlcf	(??_kpDebounce+1)^0,f,c
  1147  0011AE  3603               	rlcf	(??_kpDebounce+2)^0,f,c
  1148  0011B0                     u1044:
  1149  0011B0  2E01               	decfsz	??_kpDebounce^0,f,c
  1150  0011B2  EFD5  F008         	goto	u1045
  1151  0011B6  1C02               	comf	(??_kpDebounce+1)^0,w,c
  1152  0011B8  6E04               	movwf	(??_kpDebounce+3)^0,c
  1153  0011BA  1C03               	comf	(??_kpDebounce+2)^0,w,c
  1154  0011BC  6E05               	movwf	(??_kpDebounce+4)^0,c
  1155  0011BE  5004               	movf	(??_kpDebounce+3)^0,w,c
  1156  0011C0  1642               	andwf	kpDebounce@valorNovo^0,f,c
  1157  0011C2  5005               	movf	(??_kpDebounce+4)^0,w,c
  1158  0011C4  1643               	andwf	(kpDebounce@valorNovo+1)^0,f,c
  1159  0011C6                     l1495:
  1160                           
  1161                           ;keypad.c: 72:         }
  1162  0011C6  2A09               	incf	kpDebounce@j^0,f,c
  1163  0011C8  0E03               	movlw	3
  1164  0011CA  6409               	cpfsgt	kpDebounce@j^0,c
  1165  0011CC  EFEA  F008         	goto	u1051
  1166  0011D0  EFEC  F008         	goto	u1050
  1167  0011D4                     u1051:
  1168  0011D4  EF9B  F008         	goto	l1489
  1169  0011D8                     u1050:
  1170  0011D8                     
  1171                           ;keypad.c: 73:     }
  1172  0011D8  2A0A               	incf	kpDebounce@i^0,f,c
  1173  0011DA  0E02               	movlw	2
  1174  0011DC  640A               	cpfsgt	kpDebounce@i^0,c
  1175  0011DE  EFF3  F008         	goto	u1061
  1176  0011E2  EFF5  F008         	goto	u1060
  1177  0011E6                     u1061:
  1178  0011E6  EF64  F008         	goto	l1471
  1179  0011EA                     u1060:
  1180  0011EA                     
  1181                           ;keypad.c: 74:     if (valorAntigo == valorNovo) {
  1182  0011EA  5042               	movf	kpDebounce@valorNovo^0,w,c
  1183  0011EC  1840               	xorwf	kpDebounce@valorAntigo^0,w,c
  1184  0011EE  E107               	bnz	u1071
  1185  0011F0  5043               	movf	(kpDebounce@valorNovo+1)^0,w,c
  1186  0011F2  1841               	xorwf	(kpDebounce@valorAntigo+1)^0,w,c
  1187  0011F4  A4D8               	btfss	status,2,c
  1188  0011F6  EFFF  F008         	goto	u1071
  1189  0011FA  EF01  F009         	goto	u1070
  1190  0011FE                     u1071:
  1191  0011FE  EF04  F009         	goto	l1507
  1192  001202                     u1070:
  1193  001202                     
  1194                           ;keypad.c: 75:         tempo--;
  1195  001202  0646               	decf	kpDebounce@tempo^0,f,c
  1196                           
  1197                           ;keypad.c: 76:     } else {
  1198  001204  EF0A  F009         	goto	l189
  1199  001208                     l1507:
  1200                           
  1201                           ;keypad.c: 77:         tempo = 10;
  1202  001208  0E0A               	movlw	10
  1203  00120A  6E46               	movwf	kpDebounce@tempo^0,c
  1204  00120C                     
  1205                           ;keypad.c: 78:         valorAntigo = valorNovo;
  1206  00120C  C042  F040         	movff	kpDebounce@valorNovo,kpDebounce@valorAntigo
  1207  001210  C043  F041         	movff	kpDebounce@valorNovo+1,kpDebounce@valorAntigo+1
  1208  001214                     l189:
  1209                           
  1210                           ;keypad.c: 80:     if (tempo == 0) {
  1211  001214  5046               	movf	kpDebounce@tempo^0,w,c
  1212  001216  A4D8               	btfss	status,2,c
  1213  001218  EF10  F009         	goto	u1081
  1214  00121C  EF12  F009         	goto	u1080
  1215  001220                     u1081:
  1216  001220  EF16  F009         	goto	l190
  1217  001224                     u1080:
  1218  001224                     
  1219                           ;keypad.c: 81:         valor = valorAntigo;
  1220  001224  C040  F044         	movff	kpDebounce@valorAntigo,_valor
  1221  001228  C041  F045         	movff	kpDebounce@valorAntigo+1,_valor+1
  1222  00122C                     l190:
  1223                           
  1224                           ;keypad.c: 83:     PORTD = old_D;
  1225  00122C  C006  FF83         	movff	kpDebounce@old_D,3971	;volatile
  1226  001230                     
  1227                           ;keypad.c: 84:     TRISD = 0x00;
  1228  001230  0E00               	movlw	0
  1229  001232  6E95               	movwf	149,c	;volatile
  1230  001234  0012               	return		;funcret
  1231  001236                     __end_of_kpDebounce:
  1232                           	callstack 0
  1233                           
  1234 ;; *************** function _kelvin *****************
  1235 ;; Defined at:
  1236 ;;		line 102 in file "main.c"
  1237 ;; Parameters:    Size  Location     Type
  1238 ;;		None
  1239 ;; Auto vars:     Size  Location     Type
  1240 ;;  tmpKel          2   59[COMRAM] int 
  1241 ;;  tmp             2   57[COMRAM] int 
  1242 ;; Return value:  Size  Location     Type
  1243 ;;                  1    wreg      void 
  1244 ;; Registers used:
  1245 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1246 ;; Tracked objects:
  1247 ;;		On entry : 0/0
  1248 ;;		On exit  : 0/0
  1249 ;;		Unchanged: 0/0
  1250 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1251 ;;      Params:         0       0       0       0       0       0       0
  1252 ;;      Locals:         8       0       0       0       0       0       0
  1253 ;;      Temps:          0       0       0       0       0       0       0
  1254 ;;      Totals:         8       0       0       0       0       0       0
  1255 ;;Total ram usage:        8 bytes
  1256 ;; Hardware stack levels used:    1
  1257 ;; Hardware stack levels required when called:    4
  1258 ;; This function calls:
  1259 ;;		___flmul
  1260 ;;		___fltol
  1261 ;;		___xxtofl
  1262 ;;		_adcRead
  1263 ;;		_itoa
  1264 ;;		_lcdData
  1265 ;;		_lcdPrint
  1266 ;;		_lcdSetCursor
  1267 ;; This function is called by:
  1268 ;;		_main
  1269 ;; This function uses a non-reentrant model
  1270 ;;
  1271                           
  1272                           	psect	text6
  1273  001388                     __ptext6:
  1274                           	callstack 0
  1275  001388                     _kelvin:
  1276                           	callstack 26
  1277  001388                     
  1278                           ;main.c: 103:     int tmp, tmpKel;;main.c: 104:     lcdSetCursor(0, 0);
  1279  001388  0E00               	movlw	0
  1280  00138A  6E0A               	movwf	(lcdSetCursor@line+1)^0,c
  1281  00138C  0E00               	movlw	0
  1282  00138E  6E09               	movwf	lcdSetCursor@line^0,c
  1283  001390  0E00               	movlw	0
  1284  001392  6E0C               	movwf	(lcdSetCursor@col+1)^0,c
  1285  001394  0E00               	movlw	0
  1286  001396  6E0B               	movwf	lcdSetCursor@col^0,c
  1287  001398  EC34  F00E         	call	_lcdSetCursor	;wreg free
  1288  00139C                     
  1289                           ;main.c: 105:     lcdPrint("<    Kelvin     ");
  1290  00139C  0E01               	movlw	low STR_7
  1291  00139E  6E09               	movwf	lcdPrint@str^0,c
  1292  0013A0  0E06               	movlw	high STR_7
  1293  0013A2  6E0A               	movwf	(lcdPrint@str+1)^0,c
  1294  0013A4  ECE4  F00D         	call	_lcdPrint	;wreg free
  1295  0013A8                     
  1296                           ;main.c: 107:     tmp = (adcRead(0)* 0.0048828125 * 100);
  1297  0013A8  0E00               	movlw	0
  1298  0013AA  6E17               	movwf	___flmul@a^0,c
  1299  0013AC  0E00               	movlw	0
  1300  0013AE  6E18               	movwf	(___flmul@a+1)^0,c
  1301  0013B0  0EA0               	movlw	160
  1302  0013B2  6E19               	movwf	(___flmul@a+2)^0,c
  1303  0013B4  0E3B               	movlw	59
  1304  0013B6  6E1A               	movwf	(___flmul@a+3)^0,c
  1305  0013B8  0E00               	movlw	0
  1306  0013BA  6E02               	movwf	(adcRead@channel+1)^0,c
  1307  0013BC  0E00               	movlw	0
  1308  0013BE  6E01               	movwf	adcRead@channel^0,c
  1309  0013C0  EC0C  F00E         	call	_adcRead	;wreg free
  1310  0013C4  C001  F005         	movff	?_adcRead,___xxtofl@val
  1311  0013C8  C002  F006         	movff	?_adcRead+1,___xxtofl@val+1
  1312  0013CC  0E00               	movlw	0
  1313  0013CE  BE06               	btfsc	(___xxtofl@val+1)^0,7,c
  1314  0013D0  0EFF               	movlw	-1
  1315  0013D2  6E07               	movwf	(___xxtofl@val+2)^0,c
  1316  0013D4  6E08               	movwf	(___xxtofl@val+3)^0,c
  1317  0013D6  0E01               	movlw	1
  1318  0013D8  EC84  F007         	call	___xxtofl
  1319  0013DC  C005  F013         	movff	?___xxtofl,___flmul@b
  1320  0013E0  C006  F014         	movff	?___xxtofl+1,___flmul@b+1
  1321  0013E4  C007  F015         	movff	?___xxtofl+2,___flmul@b+2
  1322  0013E8  C008  F016         	movff	?___xxtofl+3,___flmul@b+3
  1323  0013EC  EC21  F003         	call	___flmul	;wreg free
  1324  0013F0  C013  F036         	movff	?___flmul,_kelvin$901
  1325  0013F4  C014  F037         	movff	?___flmul+1,_kelvin$901+1
  1326  0013F8  C015  F038         	movff	?___flmul+2,_kelvin$901+2
  1327  0013FC  C016  F039         	movff	?___flmul+3,_kelvin$901+3
  1328  001400                     
  1329                           ;main.c: 107:     tmp = (adcRead(0)* 0.0048828125 * 100);
  1330  001400  0E00               	movlw	0
  1331  001402  6E17               	movwf	___flmul@a^0,c
  1332  001404  0E00               	movlw	0
  1333  001406  6E18               	movwf	(___flmul@a+1)^0,c
  1334  001408  0EC8               	movlw	200
  1335  00140A  6E19               	movwf	(___flmul@a+2)^0,c
  1336  00140C  0E42               	movlw	66
  1337  00140E  6E1A               	movwf	(___flmul@a+3)^0,c
  1338  001410  C036  F013         	movff	_kelvin$901,___flmul@b
  1339  001414  C037  F014         	movff	_kelvin$901+1,___flmul@b+1
  1340  001418  C038  F015         	movff	_kelvin$901+2,___flmul@b+2
  1341  00141C  C039  F016         	movff	_kelvin$901+3,___flmul@b+3
  1342  001420  EC21  F003         	call	___flmul	;wreg free
  1343  001424  C013  F02C         	movff	?___flmul,___fltol@f1
  1344  001428  C014  F02D         	movff	?___flmul+1,___fltol@f1+1
  1345  00142C  C015  F02E         	movff	?___flmul+2,___fltol@f1+2
  1346  001430  C016  F02F         	movff	?___flmul+3,___fltol@f1+3
  1347  001434  EC69  F00B         	call	___fltol	;wreg free
  1348  001438  C02C  F03A         	movff	?___fltol,kelvin@tmp
  1349  00143C  C02D  F03B         	movff	?___fltol+1,kelvin@tmp+1
  1350  001440                     
  1351                           ;main.c: 108:     tmpKel = tmp + 273;
  1352  001440  0E11               	movlw	17
  1353  001442  243A               	addwf	kelvin@tmp^0,w,c
  1354  001444  6E3C               	movwf	kelvin@tmpKel^0,c
  1355  001446  0E01               	movlw	1
  1356  001448  203B               	addwfc	(kelvin@tmp+1)^0,w,c
  1357  00144A  6E3D               	movwf	(kelvin@tmpKel+1)^0,c
  1358  00144C                     
  1359                           ;main.c: 109:     itoa(tmpKel, str);
  1360  00144C  C03C  F00D         	movff	kelvin@tmpKel,itoa@val
  1361  001450  C03D  F00E         	movff	kelvin@tmpKel+1,itoa@val+1
  1362  001454  0E48               	movlw	low _str
  1363  001456  6E0F               	movwf	itoa@str^0,c
  1364  001458  0E00               	movlw	high _str
  1365  00145A  6E10               	movwf	(itoa@str+1)^0,c
  1366  00145C  ECE5  F00A         	call	_itoa	;wreg free
  1367  001460                     
  1368                           ;main.c: 111:     lcdSetCursor(1, 5);
  1369  001460  0E00               	movlw	0
  1370  001462  6E0A               	movwf	(lcdSetCursor@line+1)^0,c
  1371  001464  0E01               	movlw	1
  1372  001466  6E09               	movwf	lcdSetCursor@line^0,c
  1373  001468  0E00               	movlw	0
  1374  00146A  6E0C               	movwf	(lcdSetCursor@col+1)^0,c
  1375  00146C  0E05               	movlw	5
  1376  00146E  6E0B               	movwf	lcdSetCursor@col^0,c
  1377  001470  EC34  F00E         	call	_lcdSetCursor	;wreg free
  1378  001474                     
  1379                           ;main.c: 112:     lcdData(str[2]);
  1380  001474  504A               	movf	(_str+2)^0,w,c
  1381  001476  ECBA  F00D         	call	_lcdData
  1382  00147A                     
  1383                           ;main.c: 113:     lcdData(str[3]);
  1384  00147A  504B               	movf	(_str+3)^0,w,c
  1385  00147C  ECBA  F00D         	call	_lcdData
  1386  001480                     
  1387                           ;main.c: 114:     lcdData(str[4]);
  1388  001480  504C               	movf	(_str+4)^0,w,c
  1389  001482  ECBA  F00D         	call	_lcdData
  1390  001486                     
  1391                           ;main.c: 115:     lcdData(',');
  1392  001486  0E2C               	movlw	44
  1393  001488  ECBA  F00D         	call	_lcdData
  1394  00148C                     
  1395                           ;main.c: 116:     lcdData(str[5]);
  1396  00148C  504D               	movf	(_str+5)^0,w,c
  1397  00148E  ECBA  F00D         	call	_lcdData
  1398  001492                     
  1399                           ;main.c: 117:     lcdPrint(" ");
  1400  001492  0E10               	movlw	low (STR_7+15)
  1401  001494  6E09               	movwf	lcdPrint@str^0,c
  1402  001496  0E06               	movlw	high (STR_7+15)
  1403  001498  6E0A               	movwf	(lcdPrint@str+1)^0,c
  1404  00149A  ECE4  F00D         	call	_lcdPrint	;wreg free
  1405  00149E                     
  1406                           ;main.c: 118:     lcdPrint("K   ");
  1407  00149E  0E34               	movlw	low STR_9
  1408  0014A0  6E09               	movwf	lcdPrint@str^0,c
  1409  0014A2  0E06               	movlw	high STR_9
  1410  0014A4  6E0A               	movwf	(lcdPrint@str+1)^0,c
  1411  0014A6  ECE4  F00D         	call	_lcdPrint	;wreg free
  1412  0014AA  0012               	return		;funcret
  1413  0014AC                     __end_of_kelvin:
  1414                           	callstack 0
  1415                           
  1416 ;; *************** function _fahr *****************
  1417 ;; Defined at:
  1418 ;;		line 82 in file "main.c"
  1419 ;; Parameters:    Size  Location     Type
  1420 ;;		None
  1421 ;; Auto vars:     Size  Location     Type
  1422 ;;  tmpFahr         2   59[COMRAM] int 
  1423 ;;  tmp             2   57[COMRAM] int 
  1424 ;; Return value:  Size  Location     Type
  1425 ;;                  1    wreg      void 
  1426 ;; Registers used:
  1427 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1428 ;; Tracked objects:
  1429 ;;		On entry : 0/0
  1430 ;;		On exit  : 0/0
  1431 ;;		Unchanged: 0/0
  1432 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1433 ;;      Params:         0       0       0       0       0       0       0
  1434 ;;      Locals:         8       0       0       0       0       0       0
  1435 ;;      Temps:          0       0       0       0       0       0       0
  1436 ;;      Totals:         8       0       0       0       0       0       0
  1437 ;;Total ram usage:        8 bytes
  1438 ;; Hardware stack levels used:    1
  1439 ;; Hardware stack levels required when called:    4
  1440 ;; This function calls:
  1441 ;;		___awdiv
  1442 ;;		___flmul
  1443 ;;		___fltol
  1444 ;;		___wmul
  1445 ;;		___xxtofl
  1446 ;;		_adcRead
  1447 ;;		_itoa
  1448 ;;		_lcdData
  1449 ;;		_lcdPrint
  1450 ;;		_lcdSetCursor
  1451 ;; This function is called by:
  1452 ;;		_main
  1453 ;; This function uses a non-reentrant model
  1454 ;;
  1455                           
  1456                           	psect	text7
  1457  001236                     __ptext7:
  1458                           	callstack 0
  1459  001236                     _fahr:
  1460                           	callstack 26
  1461  001236                     
  1462                           ;main.c: 83:     int tmp, tmpFahr;;main.c: 84:     lcdSetCursor(0, 0);
  1463  001236  0E00               	movlw	0
  1464  001238  6E0A               	movwf	(lcdSetCursor@line+1)^0,c
  1465  00123A  0E00               	movlw	0
  1466  00123C  6E09               	movwf	lcdSetCursor@line^0,c
  1467  00123E  0E00               	movlw	0
  1468  001240  6E0C               	movwf	(lcdSetCursor@col+1)^0,c
  1469  001242  0E00               	movlw	0
  1470  001244  6E0B               	movwf	lcdSetCursor@col^0,c
  1471  001246  EC34  F00E         	call	_lcdSetCursor	;wreg free
  1472  00124A                     
  1473                           ;main.c: 85:     lcdPrint("<  Fahrenheit  >");
  1474  00124A  0E23               	movlw	low STR_4
  1475  00124C  6E09               	movwf	lcdPrint@str^0,c
  1476  00124E  0E06               	movlw	high STR_4
  1477  001250  6E0A               	movwf	(lcdPrint@str+1)^0,c
  1478  001252  ECE4  F00D         	call	_lcdPrint	;wreg free
  1479  001256                     
  1480                           ;main.c: 87:     tmp = (adcRead(0)* 0.0048828125 * 100);
  1481  001256  0E00               	movlw	0
  1482  001258  6E17               	movwf	___flmul@a^0,c
  1483  00125A  0E00               	movlw	0
  1484  00125C  6E18               	movwf	(___flmul@a+1)^0,c
  1485  00125E  0EA0               	movlw	160
  1486  001260  6E19               	movwf	(___flmul@a+2)^0,c
  1487  001262  0E3B               	movlw	59
  1488  001264  6E1A               	movwf	(___flmul@a+3)^0,c
  1489  001266  0E00               	movlw	0
  1490  001268  6E02               	movwf	(adcRead@channel+1)^0,c
  1491  00126A  0E00               	movlw	0
  1492  00126C  6E01               	movwf	adcRead@channel^0,c
  1493  00126E  EC0C  F00E         	call	_adcRead	;wreg free
  1494  001272  C001  F005         	movff	?_adcRead,___xxtofl@val
  1495  001276  C002  F006         	movff	?_adcRead+1,___xxtofl@val+1
  1496  00127A  0E00               	movlw	0
  1497  00127C  BE06               	btfsc	(___xxtofl@val+1)^0,7,c
  1498  00127E  0EFF               	movlw	-1
  1499  001280  6E07               	movwf	(___xxtofl@val+2)^0,c
  1500  001282  6E08               	movwf	(___xxtofl@val+3)^0,c
  1501  001284  0E01               	movlw	1
  1502  001286  EC84  F007         	call	___xxtofl
  1503  00128A  C005  F013         	movff	?___xxtofl,___flmul@b
  1504  00128E  C006  F014         	movff	?___xxtofl+1,___flmul@b+1
  1505  001292  C007  F015         	movff	?___xxtofl+2,___flmul@b+2
  1506  001296  C008  F016         	movff	?___xxtofl+3,___flmul@b+3
  1507  00129A  EC21  F003         	call	___flmul	;wreg free
  1508  00129E  C013  F036         	movff	?___flmul,_fahr$900
  1509  0012A2  C014  F037         	movff	?___flmul+1,_fahr$900+1
  1510  0012A6  C015  F038         	movff	?___flmul+2,_fahr$900+2
  1511  0012AA  C016  F039         	movff	?___flmul+3,_fahr$900+3
  1512  0012AE                     
  1513                           ;main.c: 87:     tmp = (adcRead(0)* 0.0048828125 * 100);
  1514  0012AE  0E00               	movlw	0
  1515  0012B0  6E17               	movwf	___flmul@a^0,c
  1516  0012B2  0E00               	movlw	0
  1517  0012B4  6E18               	movwf	(___flmul@a+1)^0,c
  1518  0012B6  0EC8               	movlw	200
  1519  0012B8  6E19               	movwf	(___flmul@a+2)^0,c
  1520  0012BA  0E42               	movlw	66
  1521  0012BC  6E1A               	movwf	(___flmul@a+3)^0,c
  1522  0012BE  C036  F013         	movff	_fahr$900,___flmul@b
  1523  0012C2  C037  F014         	movff	_fahr$900+1,___flmul@b+1
  1524  0012C6  C038  F015         	movff	_fahr$900+2,___flmul@b+2
  1525  0012CA  C039  F016         	movff	_fahr$900+3,___flmul@b+3
  1526  0012CE  EC21  F003         	call	___flmul	;wreg free
  1527  0012D2  C013  F02C         	movff	?___flmul,___fltol@f1
  1528  0012D6  C014  F02D         	movff	?___flmul+1,___fltol@f1+1
  1529  0012DA  C015  F02E         	movff	?___flmul+2,___fltol@f1+2
  1530  0012DE  C016  F02F         	movff	?___flmul+3,___fltol@f1+3
  1531  0012E2  EC69  F00B         	call	___fltol	;wreg free
  1532  0012E6  C02C  F03A         	movff	?___fltol,fahr@tmp
  1533  0012EA  C02D  F03B         	movff	?___fltol+1,fahr@tmp+1
  1534  0012EE                     
  1535                           ;main.c: 88:     tmpFahr = (tmp*9/5) + 32;
  1536  0012EE  C03A  F001         	movff	fahr@tmp,___wmul@multiplier
  1537  0012F2  C03B  F002         	movff	fahr@tmp+1,___wmul@multiplier+1
  1538  0012F6  0E00               	movlw	0
  1539  0012F8  6E04               	movwf	(___wmul@multiplicand+1)^0,c
  1540  0012FA  0E09               	movlw	9
  1541  0012FC  6E03               	movwf	___wmul@multiplicand^0,c
  1542  0012FE  EC83  F00E         	call	___wmul	;wreg free
  1543  001302  C001  F007         	movff	?___wmul,___awdiv@dividend
  1544  001306  C002  F008         	movff	?___wmul+1,___awdiv@dividend+1
  1545  00130A  0E00               	movlw	0
  1546  00130C  6E0A               	movwf	(___awdiv@divisor+1)^0,c
  1547  00130E  0E05               	movlw	5
  1548  001310  6E09               	movwf	___awdiv@divisor^0,c
  1549  001312  ECEC  F00B         	call	___awdiv	;wreg free
  1550  001316  0E20               	movlw	32
  1551  001318  2407               	addwf	?___awdiv^0,w,c
  1552  00131A  6E3C               	movwf	fahr@tmpFahr^0,c
  1553  00131C  0E00               	movlw	0
  1554  00131E  2008               	addwfc	(?___awdiv+1)^0,w,c
  1555  001320  6E3D               	movwf	(fahr@tmpFahr+1)^0,c
  1556  001322                     
  1557                           ;main.c: 89:     itoa(tmpFahr, str);
  1558  001322  C03C  F00D         	movff	fahr@tmpFahr,itoa@val
  1559  001326  C03D  F00E         	movff	fahr@tmpFahr+1,itoa@val+1
  1560  00132A  0E48               	movlw	low _str
  1561  00132C  6E0F               	movwf	itoa@str^0,c
  1562  00132E  0E00               	movlw	high _str
  1563  001330  6E10               	movwf	(itoa@str+1)^0,c
  1564  001332  ECE5  F00A         	call	_itoa	;wreg free
  1565  001336                     
  1566                           ;main.c: 91:     lcdSetCursor(1, 5);
  1567  001336  0E00               	movlw	0
  1568  001338  6E0A               	movwf	(lcdSetCursor@line+1)^0,c
  1569  00133A  0E01               	movlw	1
  1570  00133C  6E09               	movwf	lcdSetCursor@line^0,c
  1571  00133E  0E00               	movlw	0
  1572  001340  6E0C               	movwf	(lcdSetCursor@col+1)^0,c
  1573  001342  0E05               	movlw	5
  1574  001344  6E0B               	movwf	lcdSetCursor@col^0,c
  1575  001346  EC34  F00E         	call	_lcdSetCursor	;wreg free
  1576  00134A                     
  1577                           ;main.c: 92:     lcdData(str[2]);
  1578  00134A  504A               	movf	(_str+2)^0,w,c
  1579  00134C  ECBA  F00D         	call	_lcdData
  1580  001350                     
  1581                           ;main.c: 93:     lcdData(str[3]);
  1582  001350  504B               	movf	(_str+3)^0,w,c
  1583  001352  ECBA  F00D         	call	_lcdData
  1584  001356                     
  1585                           ;main.c: 94:     lcdData(str[4]);
  1586  001356  504C               	movf	(_str+4)^0,w,c
  1587  001358  ECBA  F00D         	call	_lcdData
  1588  00135C                     
  1589                           ;main.c: 95:     lcdData(',');
  1590  00135C  0E2C               	movlw	44
  1591  00135E  ECBA  F00D         	call	_lcdData
  1592  001362                     
  1593                           ;main.c: 96:     lcdData(str[5]);
  1594  001362  504D               	movf	(_str+5)^0,w,c
  1595  001364  ECBA  F00D         	call	_lcdData
  1596  001368                     
  1597                           ;main.c: 97:     lcdPrint(" ");
  1598  001368  0E10               	movlw	low (STR_7+15)
  1599  00136A  6E09               	movwf	lcdPrint@str^0,c
  1600  00136C  0E06               	movlw	high (STR_7+15)
  1601  00136E  6E0A               	movwf	(lcdPrint@str+1)^0,c
  1602  001370  ECE4  F00D         	call	_lcdPrint	;wreg free
  1603  001374                     
  1604                           ;main.c: 98:     lcdData(grau);
  1605  001374  0EDF               	movlw	223
  1606  001376  ECBA  F00D         	call	_lcdData
  1607  00137A                     
  1608                           ;main.c: 99:     lcdPrint("F  ");
  1609  00137A  0E3D               	movlw	low STR_6
  1610  00137C  6E09               	movwf	lcdPrint@str^0,c
  1611  00137E  0E06               	movlw	high STR_6
  1612  001380  6E0A               	movwf	(lcdPrint@str+1)^0,c
  1613  001382  ECE4  F00D         	call	_lcdPrint	;wreg free
  1614  001386  0012               	return		;funcret
  1615  001388                     __end_of_fahr:
  1616                           	callstack 0
  1617                           
  1618 ;; *************** function ___wmul *****************
  1619 ;; Defined at:
  1620 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\Umul16.c"
  1621 ;; Parameters:    Size  Location     Type
  1622 ;;  multiplier      2    0[COMRAM] unsigned int 
  1623 ;;  multiplicand    2    2[COMRAM] unsigned int 
  1624 ;; Auto vars:     Size  Location     Type
  1625 ;;  product         2    4[COMRAM] unsigned int 
  1626 ;; Return value:  Size  Location     Type
  1627 ;;                  2    0[COMRAM] unsigned int 
  1628 ;; Registers used:
  1629 ;;		wreg, status,2, status,0, prodl, prodh
  1630 ;; Tracked objects:
  1631 ;;		On entry : 0/0
  1632 ;;		On exit  : 0/0
  1633 ;;		Unchanged: 0/0
  1634 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1635 ;;      Params:         4       0       0       0       0       0       0
  1636 ;;      Locals:         2       0       0       0       0       0       0
  1637 ;;      Temps:          0       0       0       0       0       0       0
  1638 ;;      Totals:         6       0       0       0       0       0       0
  1639 ;;Total ram usage:        6 bytes
  1640 ;; Hardware stack levels used:    1
  1641 ;; This function calls:
  1642 ;;		Nothing
  1643 ;; This function is called by:
  1644 ;;		_fahr
  1645 ;; This function uses a non-reentrant model
  1646 ;;
  1647                           
  1648                           	psect	text8
  1649  001D06                     __ptext8:
  1650                           	callstack 0
  1651  001D06                     ___wmul:
  1652                           	callstack 29
  1653  001D06  5001               	movf	___wmul@multiplier^0,w,c
  1654  001D08  0203               	mulwf	___wmul@multiplicand^0,c
  1655  001D0A  CFF3 F005          	movff	prodl,___wmul@product
  1656  001D0E  CFF4 F006          	movff	prodh,___wmul@product+1
  1657  001D12  5001               	movf	___wmul@multiplier^0,w,c
  1658  001D14  0204               	mulwf	(___wmul@multiplicand+1)^0,c
  1659  001D16  50F3               	movf	243,w,c
  1660  001D18  2606               	addwf	(___wmul@product+1)^0,f,c
  1661  001D1A  5002               	movf	(___wmul@multiplier+1)^0,w,c
  1662  001D1C  0203               	mulwf	___wmul@multiplicand^0,c
  1663  001D1E  50F3               	movf	243,w,c
  1664  001D20  2606               	addwf	(___wmul@product+1)^0,f,c
  1665  001D22  C005  F001         	movff	___wmul@product,?___wmul
  1666  001D26  C006  F002         	movff	___wmul@product+1,?___wmul+1
  1667  001D2A  0012               	return		;funcret
  1668  001D2C                     __end_of___wmul:
  1669                           	callstack 0
  1670                           
  1671 ;; *************** function ___awdiv *****************
  1672 ;; Defined at:
  1673 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\awdiv.c"
  1674 ;; Parameters:    Size  Location     Type
  1675 ;;  dividend        2    6[COMRAM] int 
  1676 ;;  divisor         2    8[COMRAM] int 
  1677 ;; Auto vars:     Size  Location     Type
  1678 ;;  quotient        2   12[COMRAM] int 
  1679 ;;  sign            1   11[COMRAM] unsigned char 
  1680 ;;  counter         1   10[COMRAM] unsigned char 
  1681 ;; Return value:  Size  Location     Type
  1682 ;;                  2    6[COMRAM] int 
  1683 ;; Registers used:
  1684 ;;		wreg, status,2, status,0
  1685 ;; Tracked objects:
  1686 ;;		On entry : 0/0
  1687 ;;		On exit  : 0/0
  1688 ;;		Unchanged: 0/0
  1689 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1690 ;;      Params:         4       0       0       0       0       0       0
  1691 ;;      Locals:         4       0       0       0       0       0       0
  1692 ;;      Temps:          0       0       0       0       0       0       0
  1693 ;;      Totals:         8       0       0       0       0       0       0
  1694 ;;Total ram usage:        8 bytes
  1695 ;; Hardware stack levels used:    1
  1696 ;; This function calls:
  1697 ;;		Nothing
  1698 ;; This function is called by:
  1699 ;;		_fahr
  1700 ;; This function uses a non-reentrant model
  1701 ;;
  1702                           
  1703                           	psect	text9
  1704  0017D8                     __ptext9:
  1705                           	callstack 0
  1706  0017D8                     ___awdiv:
  1707                           	callstack 29
  1708  0017D8  0E00               	movlw	0
  1709  0017DA  6E0C               	movwf	___awdiv@sign^0,c
  1710  0017DC  BE0A               	btfsc	(___awdiv@divisor+1)^0,7,c
  1711  0017DE  EFF5  F00B         	goto	u2000
  1712  0017E2  EFF3  F00B         	goto	u2001
  1713  0017E6                     u2001:
  1714  0017E6  EFFB  F00B         	goto	l2069
  1715  0017EA                     u2000:
  1716  0017EA  6C09               	negf	___awdiv@divisor^0,c
  1717  0017EC  1E0A               	comf	(___awdiv@divisor+1)^0,f,c
  1718  0017EE  B0D8               	btfsc	status,0,c
  1719  0017F0  2A0A               	incf	(___awdiv@divisor+1)^0,f,c
  1720  0017F2  0E01               	movlw	1
  1721  0017F4  6E0C               	movwf	___awdiv@sign^0,c
  1722  0017F6                     l2069:
  1723  0017F6  BE08               	btfsc	(___awdiv@dividend+1)^0,7,c
  1724  0017F8  EF02  F00C         	goto	u2010
  1725  0017FC  EF00  F00C         	goto	u2011
  1726  001800                     u2011:
  1727  001800  EF08  F00C         	goto	l2075
  1728  001804                     u2010:
  1729  001804  6C07               	negf	___awdiv@dividend^0,c
  1730  001806  1E08               	comf	(___awdiv@dividend+1)^0,f,c
  1731  001808  B0D8               	btfsc	status,0,c
  1732  00180A  2A08               	incf	(___awdiv@dividend+1)^0,f,c
  1733  00180C  0E01               	movlw	1
  1734  00180E  1A0C               	xorwf	___awdiv@sign^0,f,c
  1735  001810                     l2075:
  1736  001810  0E00               	movlw	0
  1737  001812  6E0E               	movwf	(___awdiv@quotient+1)^0,c
  1738  001814  0E00               	movlw	0
  1739  001816  6E0D               	movwf	___awdiv@quotient^0,c
  1740  001818  5009               	movf	___awdiv@divisor^0,w,c
  1741  00181A  100A               	iorwf	(___awdiv@divisor+1)^0,w,c
  1742  00181C  B4D8               	btfsc	status,2,c
  1743  00181E  EF13  F00C         	goto	u2021
  1744  001822  EF15  F00C         	goto	u2020
  1745  001826                     u2021:
  1746  001826  EF3D  F00C         	goto	l2097
  1747  00182A                     u2020:
  1748  00182A  0E01               	movlw	1
  1749  00182C  6E0B               	movwf	___awdiv@counter^0,c
  1750  00182E  EF1D  F00C         	goto	l2083
  1751  001832                     l2081:
  1752  001832  90D8               	bcf	status,0,c
  1753  001834  3609               	rlcf	___awdiv@divisor^0,f,c
  1754  001836  360A               	rlcf	(___awdiv@divisor+1)^0,f,c
  1755  001838  2A0B               	incf	___awdiv@counter^0,f,c
  1756  00183A                     l2083:
  1757  00183A  AE0A               	btfss	(___awdiv@divisor+1)^0,7,c
  1758  00183C  EF22  F00C         	goto	u2031
  1759  001840  EF24  F00C         	goto	u2030
  1760  001844                     u2031:
  1761  001844  EF19  F00C         	goto	l2081
  1762  001848                     u2030:
  1763  001848                     l2085:
  1764  001848  90D8               	bcf	status,0,c
  1765  00184A  360D               	rlcf	___awdiv@quotient^0,f,c
  1766  00184C  360E               	rlcf	(___awdiv@quotient+1)^0,f,c
  1767  00184E  5009               	movf	___awdiv@divisor^0,w,c
  1768  001850  5C07               	subwf	___awdiv@dividend^0,w,c
  1769  001852  500A               	movf	(___awdiv@divisor+1)^0,w,c
  1770  001854  5808               	subwfb	(___awdiv@dividend+1)^0,w,c
  1771  001856  A0D8               	btfss	status,0,c
  1772  001858  EF30  F00C         	goto	u2041
  1773  00185C  EF32  F00C         	goto	u2040
  1774  001860                     u2041:
  1775  001860  EF37  F00C         	goto	l2093
  1776  001864                     u2040:
  1777  001864  5009               	movf	___awdiv@divisor^0,w,c
  1778  001866  5E07               	subwf	___awdiv@dividend^0,f,c
  1779  001868  500A               	movf	(___awdiv@divisor+1)^0,w,c
  1780  00186A  5A08               	subwfb	(___awdiv@dividend+1)^0,f,c
  1781  00186C  800D               	bsf	___awdiv@quotient^0,0,c
  1782  00186E                     l2093:
  1783  00186E  90D8               	bcf	status,0,c
  1784  001870  320A               	rrcf	(___awdiv@divisor+1)^0,f,c
  1785  001872  3209               	rrcf	___awdiv@divisor^0,f,c
  1786  001874  2E0B               	decfsz	___awdiv@counter^0,f,c
  1787  001876  EF24  F00C         	goto	l2085
  1788  00187A                     l2097:
  1789  00187A  500C               	movf	___awdiv@sign^0,w,c
  1790  00187C  B4D8               	btfsc	status,2,c
  1791  00187E  EF43  F00C         	goto	u2051
  1792  001882  EF45  F00C         	goto	u2050
  1793  001886                     u2051:
  1794  001886  EF49  F00C         	goto	l2101
  1795  00188A                     u2050:
  1796  00188A  6C0D               	negf	___awdiv@quotient^0,c
  1797  00188C  1E0E               	comf	(___awdiv@quotient+1)^0,f,c
  1798  00188E  B0D8               	btfsc	status,0,c
  1799  001890  2A0E               	incf	(___awdiv@quotient+1)^0,f,c
  1800  001892                     l2101:
  1801  001892  C00D  F007         	movff	___awdiv@quotient,?___awdiv
  1802  001896  C00E  F008         	movff	___awdiv@quotient+1,?___awdiv+1
  1803  00189A  0012               	return		;funcret
  1804  00189C                     __end_of___awdiv:
  1805                           	callstack 0
  1806                           
  1807 ;; *************** function _celsius *****************
  1808 ;; Defined at:
  1809 ;;		line 63 in file "main.c"
  1810 ;; Parameters:    Size  Location     Type
  1811 ;;		None
  1812 ;; Auto vars:     Size  Location     Type
  1813 ;;  tmp             2   57[COMRAM] int 
  1814 ;; Return value:  Size  Location     Type
  1815 ;;                  1    wreg      void 
  1816 ;; Registers used:
  1817 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1818 ;; Tracked objects:
  1819 ;;		On entry : 0/0
  1820 ;;		On exit  : 0/0
  1821 ;;		Unchanged: 0/0
  1822 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1823 ;;      Params:         0       0       0       0       0       0       0
  1824 ;;      Locals:         6       0       0       0       0       0       0
  1825 ;;      Temps:          0       0       0       0       0       0       0
  1826 ;;      Totals:         6       0       0       0       0       0       0
  1827 ;;Total ram usage:        6 bytes
  1828 ;; Hardware stack levels used:    1
  1829 ;; Hardware stack levels required when called:    4
  1830 ;; This function calls:
  1831 ;;		___flmul
  1832 ;;		___fltol
  1833 ;;		___xxtofl
  1834 ;;		_adcRead
  1835 ;;		_itoa
  1836 ;;		_lcdData
  1837 ;;		_lcdPrint
  1838 ;;		_lcdSetCursor
  1839 ;; This function is called by:
  1840 ;;		_main
  1841 ;; This function uses a non-reentrant model
  1842 ;;
  1843                           
  1844                           	psect	text10
  1845  0014AC                     __ptext10:
  1846                           	callstack 0
  1847  0014AC                     _celsius:
  1848                           	callstack 26
  1849  0014AC                     
  1850                           ;main.c: 64:     int tmp;;main.c: 65:     lcdSetCursor(0, 0);
  1851  0014AC  0E00               	movlw	0
  1852  0014AE  6E0A               	movwf	(lcdSetCursor@line+1)^0,c
  1853  0014B0  0E00               	movlw	0
  1854  0014B2  6E09               	movwf	lcdSetCursor@line^0,c
  1855  0014B4  0E00               	movlw	0
  1856  0014B6  6E0C               	movwf	(lcdSetCursor@col+1)^0,c
  1857  0014B8  0E00               	movlw	0
  1858  0014BA  6E0B               	movwf	lcdSetCursor@col^0,c
  1859  0014BC  EC34  F00E         	call	_lcdSetCursor	;wreg free
  1860  0014C0                     
  1861                           ;main.c: 66:     lcdPrint("     Celsius   >");
  1862  0014C0  0E12               	movlw	low STR_1
  1863  0014C2  6E09               	movwf	lcdPrint@str^0,c
  1864  0014C4  0E06               	movlw	high STR_1
  1865  0014C6  6E0A               	movwf	(lcdPrint@str+1)^0,c
  1866  0014C8  ECE4  F00D         	call	_lcdPrint	;wreg free
  1867  0014CC                     
  1868                           ;main.c: 68:     tmp = (adcRead(0)* 0.0048828125 * 100);
  1869  0014CC  0E00               	movlw	0
  1870  0014CE  6E17               	movwf	___flmul@a^0,c
  1871  0014D0  0E00               	movlw	0
  1872  0014D2  6E18               	movwf	(___flmul@a+1)^0,c
  1873  0014D4  0EA0               	movlw	160
  1874  0014D6  6E19               	movwf	(___flmul@a+2)^0,c
  1875  0014D8  0E3B               	movlw	59
  1876  0014DA  6E1A               	movwf	(___flmul@a+3)^0,c
  1877  0014DC  0E00               	movlw	0
  1878  0014DE  6E02               	movwf	(adcRead@channel+1)^0,c
  1879  0014E0  0E00               	movlw	0
  1880  0014E2  6E01               	movwf	adcRead@channel^0,c
  1881  0014E4  EC0C  F00E         	call	_adcRead	;wreg free
  1882  0014E8  C001  F005         	movff	?_adcRead,___xxtofl@val
  1883  0014EC  C002  F006         	movff	?_adcRead+1,___xxtofl@val+1
  1884  0014F0  0E00               	movlw	0
  1885  0014F2  BE06               	btfsc	(___xxtofl@val+1)^0,7,c
  1886  0014F4  0EFF               	movlw	-1
  1887  0014F6  6E07               	movwf	(___xxtofl@val+2)^0,c
  1888  0014F8  6E08               	movwf	(___xxtofl@val+3)^0,c
  1889  0014FA  0E01               	movlw	1
  1890  0014FC  EC84  F007         	call	___xxtofl
  1891  001500  C005  F013         	movff	?___xxtofl,___flmul@b
  1892  001504  C006  F014         	movff	?___xxtofl+1,___flmul@b+1
  1893  001508  C007  F015         	movff	?___xxtofl+2,___flmul@b+2
  1894  00150C  C008  F016         	movff	?___xxtofl+3,___flmul@b+3
  1895  001510  EC21  F003         	call	___flmul	;wreg free
  1896  001514  C013  F036         	movff	?___flmul,_celsius$899
  1897  001518  C014  F037         	movff	?___flmul+1,_celsius$899+1
  1898  00151C  C015  F038         	movff	?___flmul+2,_celsius$899+2
  1899  001520  C016  F039         	movff	?___flmul+3,_celsius$899+3
  1900  001524                     
  1901                           ;main.c: 68:     tmp = (adcRead(0)* 0.0048828125 * 100);
  1902  001524  0E00               	movlw	0
  1903  001526  6E17               	movwf	___flmul@a^0,c
  1904  001528  0E00               	movlw	0
  1905  00152A  6E18               	movwf	(___flmul@a+1)^0,c
  1906  00152C  0EC8               	movlw	200
  1907  00152E  6E19               	movwf	(___flmul@a+2)^0,c
  1908  001530  0E42               	movlw	66
  1909  001532  6E1A               	movwf	(___flmul@a+3)^0,c
  1910  001534  C036  F013         	movff	_celsius$899,___flmul@b
  1911  001538  C037  F014         	movff	_celsius$899+1,___flmul@b+1
  1912  00153C  C038  F015         	movff	_celsius$899+2,___flmul@b+2
  1913  001540  C039  F016         	movff	_celsius$899+3,___flmul@b+3
  1914  001544  EC21  F003         	call	___flmul	;wreg free
  1915  001548  C013  F02C         	movff	?___flmul,___fltol@f1
  1916  00154C  C014  F02D         	movff	?___flmul+1,___fltol@f1+1
  1917  001550  C015  F02E         	movff	?___flmul+2,___fltol@f1+2
  1918  001554  C016  F02F         	movff	?___flmul+3,___fltol@f1+3
  1919  001558  EC69  F00B         	call	___fltol	;wreg free
  1920  00155C  C02C  F03A         	movff	?___fltol,celsius@tmp
  1921  001560  C02D  F03B         	movff	?___fltol+1,celsius@tmp+1
  1922  001564                     
  1923                           ;main.c: 69:     itoa(tmp, str);
  1924  001564  C03A  F00D         	movff	celsius@tmp,itoa@val
  1925  001568  C03B  F00E         	movff	celsius@tmp+1,itoa@val+1
  1926  00156C  0E48               	movlw	low _str
  1927  00156E  6E0F               	movwf	itoa@str^0,c
  1928  001570  0E00               	movlw	high _str
  1929  001572  6E10               	movwf	(itoa@str+1)^0,c
  1930  001574  ECE5  F00A         	call	_itoa	;wreg free
  1931  001578                     
  1932                           ;main.c: 71:     lcdSetCursor(1, 5);
  1933  001578  0E00               	movlw	0
  1934  00157A  6E0A               	movwf	(lcdSetCursor@line+1)^0,c
  1935  00157C  0E01               	movlw	1
  1936  00157E  6E09               	movwf	lcdSetCursor@line^0,c
  1937  001580  0E00               	movlw	0
  1938  001582  6E0C               	movwf	(lcdSetCursor@col+1)^0,c
  1939  001584  0E05               	movlw	5
  1940  001586  6E0B               	movwf	lcdSetCursor@col^0,c
  1941  001588  EC34  F00E         	call	_lcdSetCursor	;wreg free
  1942  00158C                     
  1943                           ;main.c: 72:     lcdData(str[2]);
  1944  00158C  504A               	movf	(_str+2)^0,w,c
  1945  00158E  ECBA  F00D         	call	_lcdData
  1946  001592                     
  1947                           ;main.c: 73:     lcdData(str[3]);
  1948  001592  504B               	movf	(_str+3)^0,w,c
  1949  001594  ECBA  F00D         	call	_lcdData
  1950  001598                     
  1951                           ;main.c: 74:     lcdData(str[4]);
  1952  001598  504C               	movf	(_str+4)^0,w,c
  1953  00159A  ECBA  F00D         	call	_lcdData
  1954  00159E                     
  1955                           ;main.c: 75:     lcdData(',');
  1956  00159E  0E2C               	movlw	44
  1957  0015A0  ECBA  F00D         	call	_lcdData
  1958  0015A4                     
  1959                           ;main.c: 76:     lcdData(str[5]);
  1960  0015A4  504D               	movf	(_str+5)^0,w,c
  1961  0015A6  ECBA  F00D         	call	_lcdData
  1962  0015AA                     
  1963                           ;main.c: 77:     lcdPrint(" ");
  1964  0015AA  0E10               	movlw	low (STR_7+15)
  1965  0015AC  6E09               	movwf	lcdPrint@str^0,c
  1966  0015AE  0E06               	movlw	high (STR_7+15)
  1967  0015B0  6E0A               	movwf	(lcdPrint@str+1)^0,c
  1968  0015B2  ECE4  F00D         	call	_lcdPrint	;wreg free
  1969  0015B6                     
  1970                           ;main.c: 78:     lcdData(grau);
  1971  0015B6  0EDF               	movlw	223
  1972  0015B8  ECBA  F00D         	call	_lcdData
  1973  0015BC                     
  1974                           ;main.c: 79:     lcdPrint("C  ");
  1975  0015BC  0E39               	movlw	low STR_3
  1976  0015BE  6E09               	movwf	lcdPrint@str^0,c
  1977  0015C0  0E06               	movlw	high STR_3
  1978  0015C2  6E0A               	movwf	(lcdPrint@str+1)^0,c
  1979  0015C4  ECE4  F00D         	call	_lcdPrint	;wreg free
  1980  0015C8  0012               	return		;funcret
  1981  0015CA                     __end_of_celsius:
  1982                           	callstack 0
  1983                           
  1984 ;; *************** function _lcdSetCursor *****************
  1985 ;; Defined at:
  1986 ;;		line 100 in file "lcd.c"
  1987 ;; Parameters:    Size  Location     Type
  1988 ;;  line            2    8[COMRAM] int 
  1989 ;;  col             2   10[COMRAM] int 
  1990 ;; Auto vars:     Size  Location     Type
  1991 ;;		None
  1992 ;; Return value:  Size  Location     Type
  1993 ;;                  1    wreg      void 
  1994 ;; Registers used:
  1995 ;;		wreg, status,2, status,0, cstack
  1996 ;; Tracked objects:
  1997 ;;		On entry : 0/0
  1998 ;;		On exit  : 0/0
  1999 ;;		Unchanged: 0/0
  2000 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2001 ;;      Params:         4       0       0       0       0       0       0
  2002 ;;      Locals:         0       0       0       0       0       0       0
  2003 ;;      Temps:          0       0       0       0       0       0       0
  2004 ;;      Totals:         4       0       0       0       0       0       0
  2005 ;;Total ram usage:        4 bytes
  2006 ;; Hardware stack levels used:    1
  2007 ;; Hardware stack levels required when called:    3
  2008 ;; This function calls:
  2009 ;;		_lcdCommand
  2010 ;; This function is called by:
  2011 ;;		_celsius
  2012 ;;		_fahr
  2013 ;;		_kelvin
  2014 ;; This function uses a non-reentrant model
  2015 ;;
  2016                           
  2017                           	psect	text11
  2018  001C68                     __ptext11:
  2019                           	callstack 0
  2020  001C68                     _lcdSetCursor:
  2021                           	callstack 26
  2022  001C68                     
  2023                           ;lcd.c: 101:     if (line == 0) {
  2024  001C68  5009               	movf	lcdSetCursor@line^0,w,c
  2025  001C6A  100A               	iorwf	(lcdSetCursor@line+1)^0,w,c
  2026  001C6C  A4D8               	btfss	status,2,c
  2027  001C6E  EF3B  F00E         	goto	u1561
  2028  001C72  EF3D  F00E         	goto	u1560
  2029  001C76                     u1561:
  2030  001C76  EF42  F00E         	goto	l1853
  2031  001C7A                     u1560:
  2032  001C7A                     
  2033                           ;lcd.c: 102:         lcdCommand(0x80 + (col % 16));
  2034  001C7A  500B               	movf	lcdSetCursor@col^0,w,c
  2035  001C7C  0B0F               	andlw	15
  2036  001C7E  0F80               	addlw	128
  2037  001C80  EC96  F00C         	call	_lcdCommand
  2038  001C84                     l1853:
  2039                           
  2040                           ;lcd.c: 104:     if (line == 1) {
  2041  001C84  0409               	decf	lcdSetCursor@line^0,w,c
  2042  001C86  100A               	iorwf	(lcdSetCursor@line+1)^0,w,c
  2043  001C88  A4D8               	btfss	status,2,c
  2044  001C8A  EF49  F00E         	goto	u1571
  2045  001C8E  EF4B  F00E         	goto	u1570
  2046  001C92                     u1571:
  2047  001C92  EF50  F00E         	goto	l236
  2048  001C96                     u1570:
  2049  001C96                     
  2050                           ;lcd.c: 105:         lcdCommand(0xC0 + (col % 16));
  2051  001C96  500B               	movf	lcdSetCursor@col^0,w,c
  2052  001C98  0B0F               	andlw	15
  2053  001C9A  0FC0               	addlw	192
  2054  001C9C  EC96  F00C         	call	_lcdCommand
  2055  001CA0                     l236:
  2056  001CA0  0012               	return		;funcret
  2057  001CA2                     __end_of_lcdSetCursor:
  2058                           	callstack 0
  2059                           
  2060 ;; *************** function _lcdCommand *****************
  2061 ;; Defined at:
  2062 ;;		line 42 in file "lcd.c"
  2063 ;; Parameters:    Size  Location     Type
  2064 ;;  cmd             1    wreg     unsigned char 
  2065 ;; Auto vars:     Size  Location     Type
  2066 ;;  cmd             1    7[COMRAM] unsigned char 
  2067 ;;  old_D           1    6[COMRAM] unsigned char 
  2068 ;; Return value:  Size  Location     Type
  2069 ;;                  1    wreg      void 
  2070 ;; Registers used:
  2071 ;;		wreg, status,2, status,0, cstack
  2072 ;; Tracked objects:
  2073 ;;		On entry : 0/0
  2074 ;;		On exit  : 0/0
  2075 ;;		Unchanged: 0/0
  2076 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2077 ;;      Params:         0       0       0       0       0       0       0
  2078 ;;      Locals:         2       0       0       0       0       0       0
  2079 ;;      Temps:          0       0       0       0       0       0       0
  2080 ;;      Totals:         2       0       0       0       0       0       0
  2081 ;;Total ram usage:        2 bytes
  2082 ;; Hardware stack levels used:    1
  2083 ;; Hardware stack levels required when called:    2
  2084 ;; This function calls:
  2085 ;;		_Delay2ms
  2086 ;;		_Delay40us
  2087 ;;		_digitalWrite
  2088 ;; This function is called by:
  2089 ;;		_lcdSetCursor
  2090 ;;		_lcdInit
  2091 ;;		_lcdClear
  2092 ;; This function uses a non-reentrant model
  2093 ;;
  2094                           
  2095                           	psect	text12
  2096  00192C                     __ptext12:
  2097                           	callstack 0
  2098  00192C                     _lcdCommand:
  2099                           	callstack 27
  2100                           
  2101                           ;incstack = 0
  2102                           ;lcdCommand@cmd stored from wreg
  2103  00192C  6E08               	movwf	lcdCommand@cmd^0,c
  2104  00192E                     
  2105                           ;lcd.c: 43:     unsigned char old_D;;lcd.c: 44:     old_D = PORTD;
  2106  00192E  CF83 F007          	movff	3971,lcdCommand@old_D	;volatile
  2107  001932                     
  2108                           ;lcd.c: 47:     TRISD = 0x00;
  2109  001932  0E00               	movlw	0
  2110  001934  6E95               	movwf	149,c	;volatile
  2111  001936                     
  2112                           ;lcd.c: 49:     digitalWrite(PIN_E2, 0);
  2113  001936  0E00               	movlw	0
  2114  001938  6E02               	movwf	(digitalWrite@pin+1)^0,c
  2115  00193A  0E22               	movlw	34
  2116  00193C  6E01               	movwf	digitalWrite@pin^0,c
  2117  00193E  0E00               	movlw	0
  2118  001940  6E04               	movwf	(digitalWrite@value+1)^0,c
  2119  001942  0E00               	movlw	0
  2120  001944  6E03               	movwf	digitalWrite@value^0,c
  2121  001946  EC36  F005         	call	_digitalWrite	;wreg free
  2122  00194A                     
  2123                           ;lcd.c: 50:     PORTD = cmd;
  2124  00194A  C008  FF83         	movff	lcdCommand@cmd,3971	;volatile
  2125  00194E                     
  2126                           ;lcd.c: 52:     digitalWrite(PIN_E1, 1);
  2127  00194E  0E00               	movlw	0
  2128  001950  6E02               	movwf	(digitalWrite@pin+1)^0,c
  2129  001952  0E21               	movlw	33
  2130  001954  6E01               	movwf	digitalWrite@pin^0,c
  2131  001956  0E00               	movlw	0
  2132  001958  6E04               	movwf	(digitalWrite@value+1)^0,c
  2133  00195A  0E01               	movlw	1
  2134  00195C  6E03               	movwf	digitalWrite@value^0,c
  2135  00195E  EC36  F005         	call	_digitalWrite	;wreg free
  2136  001962                     
  2137                           ;lcd.c: 53:     digitalWrite(PIN_E1, 0);
  2138  001962  0E00               	movlw	0
  2139  001964  6E02               	movwf	(digitalWrite@pin+1)^0,c
  2140  001966  0E21               	movlw	33
  2141  001968  6E01               	movwf	digitalWrite@pin^0,c
  2142  00196A  0E00               	movlw	0
  2143  00196C  6E04               	movwf	(digitalWrite@value+1)^0,c
  2144  00196E  0E00               	movlw	0
  2145  001970  6E03               	movwf	digitalWrite@value^0,c
  2146  001972  EC36  F005         	call	_digitalWrite	;wreg free
  2147  001976                     
  2148                           ;lcd.c: 56:     PORTD = old_D;
  2149  001976  C007  FF83         	movff	lcdCommand@old_D,3971	;volatile
  2150  00197A                     
  2151                           ;lcd.c: 58:     if ((cmd == 0x02) || (cmd == 0x01)) {
  2152  00197A  0E02               	movlw	2
  2153  00197C  1808               	xorwf	lcdCommand@cmd^0,w,c
  2154  00197E  B4D8               	btfsc	status,2,c
  2155  001980  EFC4  F00C         	goto	u1481
  2156  001984  EFC6  F00C         	goto	u1480
  2157  001988                     u1481:
  2158  001988  EFCE  F00C         	goto	l1807
  2159  00198C                     u1480:
  2160  00198C  0408               	decf	lcdCommand@cmd^0,w,c
  2161  00198E  A4D8               	btfss	status,2,c
  2162  001990  EFCC  F00C         	goto	u1491
  2163  001994  EFCE  F00C         	goto	u1490
  2164  001998                     u1491:
  2165  001998  EFD2  F00C         	goto	l1809
  2166  00199C                     u1490:
  2167  00199C                     l1807:
  2168                           
  2169                           ;lcd.c: 59:         Delay2ms();
  2170  00199C  EC96  F00E         	call	_Delay2ms	;wreg free
  2171                           
  2172                           ;lcd.c: 60:     } else {
  2173  0019A0  EFD4  F00C         	goto	l219
  2174  0019A4                     l1809:
  2175                           
  2176                           ;lcd.c: 61:         Delay40us();
  2177  0019A4  ECA4  F00E         	call	_Delay40us	;wreg free
  2178  0019A8                     l219:
  2179  0019A8  0012               	return		;funcret
  2180  0019AA                     __end_of_lcdCommand:
  2181                           	callstack 0
  2182                           
  2183 ;; *************** function _Delay2ms *****************
  2184 ;; Defined at:
  2185 ;;		line 35 in file "lcd.c"
  2186 ;; Parameters:    Size  Location     Type
  2187 ;;		None
  2188 ;; Auto vars:     Size  Location     Type
  2189 ;;  i               1    1[COMRAM] unsigned char 
  2190 ;; Return value:  Size  Location     Type
  2191 ;;                  1    wreg      void 
  2192 ;; Registers used:
  2193 ;;		wreg, status,2, status,0, cstack
  2194 ;; Tracked objects:
  2195 ;;		On entry : 0/0
  2196 ;;		On exit  : 0/0
  2197 ;;		Unchanged: 0/0
  2198 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2199 ;;      Params:         0       0       0       0       0       0       0
  2200 ;;      Locals:         1       0       0       0       0       0       0
  2201 ;;      Temps:          0       0       0       0       0       0       0
  2202 ;;      Totals:         1       0       0       0       0       0       0
  2203 ;;Total ram usage:        1 bytes
  2204 ;; Hardware stack levels used:    1
  2205 ;; Hardware stack levels required when called:    1
  2206 ;; This function calls:
  2207 ;;		_Delay40us
  2208 ;; This function is called by:
  2209 ;;		_lcdCommand
  2210 ;;		_lcdInit
  2211 ;; This function uses a non-reentrant model
  2212 ;;
  2213                           
  2214                           	psect	text13
  2215  001D2C                     __ptext13:
  2216                           	callstack 0
  2217  001D2C                     _Delay2ms:
  2218                           	callstack 27
  2219  001D2C                     
  2220                           ;lcd.c: 36:     unsigned char i;;lcd.c: 37:     for (i = 0; i < 50; i++) {
  2221  001D2C  0E00               	movlw	0
  2222  001D2E  6E02               	movwf	Delay2ms@i^0,c
  2223  001D30                     l1767:
  2224                           
  2225                           ;lcd.c: 38:         Delay40us();
  2226  001D30  ECA4  F00E         	call	_Delay40us	;wreg free
  2227  001D34                     
  2228                           ;lcd.c: 39:     }
  2229  001D34  2A02               	incf	Delay2ms@i^0,f,c
  2230  001D36  0E31               	movlw	49
  2231  001D38  6402               	cpfsgt	Delay2ms@i^0,c
  2232  001D3A  EFA1  F00E         	goto	u1471
  2233  001D3E  EFA3  F00E         	goto	u1470
  2234  001D42                     u1471:
  2235  001D42  EF98  F00E         	goto	l1767
  2236  001D46                     u1470:
  2237  001D46  0012               	return		;funcret
  2238  001D48                     __end_of_Delay2ms:
  2239                           	callstack 0
  2240                           
  2241 ;; *************** function _lcdPrint *****************
  2242 ;; Defined at:
  2243 ;;		line 86 in file "lcd.c"
  2244 ;; Parameters:    Size  Location     Type
  2245 ;;  str             2    8[COMRAM] PTR const unsigned char 
  2246 ;;		 -> STR_9(5), STR_8(2), STR_7(17), STR_6(4), 
  2247 ;;		 -> STR_5(2), STR_4(17), STR_3(4), STR_2(2), 
  2248 ;;		 -> STR_1(17), 
  2249 ;; Auto vars:     Size  Location     Type
  2250 ;;  i               1   12[COMRAM] unsigned char 
  2251 ;; Return value:  Size  Location     Type
  2252 ;;                  1    wreg      void 
  2253 ;; Registers used:
  2254 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2255 ;; Tracked objects:
  2256 ;;		On entry : 0/0
  2257 ;;		On exit  : 0/0
  2258 ;;		Unchanged: 0/0
  2259 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2260 ;;      Params:         2       0       0       0       0       0       0
  2261 ;;      Locals:         1       0       0       0       0       0       0
  2262 ;;      Temps:          2       0       0       0       0       0       0
  2263 ;;      Totals:         5       0       0       0       0       0       0
  2264 ;;Total ram usage:        5 bytes
  2265 ;; Hardware stack levels used:    1
  2266 ;; Hardware stack levels required when called:    2
  2267 ;; This function calls:
  2268 ;;		_lcdData
  2269 ;; This function is called by:
  2270 ;;		_celsius
  2271 ;;		_fahr
  2272 ;;		_kelvin
  2273 ;; This function uses a non-reentrant model
  2274 ;;
  2275                           
  2276                           	psect	text14
  2277  001BC8                     __ptext14:
  2278                           	callstack 0
  2279  001BC8                     _lcdPrint:
  2280                           	callstack 27
  2281  001BC8                     
  2282                           ;lcd.c: 87:     unsigned char i = 0;
  2283  001BC8  0E00               	movlw	0
  2284  001BCA  6E0D               	movwf	lcdPrint@i^0,c
  2285                           
  2286                           ;lcd.c: 89:     while (str[i] != 0) {
  2287  001BCC  EFF7  F00D         	goto	l1863
  2288  001BD0                     l1859:
  2289                           
  2290                           ;lcd.c: 90:         lcdData(str[i]);
  2291  001BD0  500D               	movf	lcdPrint@i^0,w,c
  2292  001BD2  2409               	addwf	lcdPrint@str^0,w,c
  2293  001BD4  6E0B               	movwf	??_lcdPrint^0,c
  2294  001BD6  0E00               	movlw	0
  2295  001BD8  200A               	addwfc	(lcdPrint@str+1)^0,w,c
  2296  001BDA  6E0C               	movwf	(??_lcdPrint+1)^0,c
  2297  001BDC  C00B  FFF6         	movff	??_lcdPrint,tblptrl
  2298  001BE0  C00C  FFF7         	movff	??_lcdPrint+1,tblptrh
  2299  001BE4                     	if	0	;tblptru may be non-zero
  2300  001BE4                     	endif
  2301  001BE4                     	if	0	;tblptru may be non-zero
  2302  001BE4                     	endif
  2303  001BE4  0008               	tblrd		*
  2304  001BE6  50F5               	movf	tablat,w,c
  2305  001BE8  ECBA  F00D         	call	_lcdData
  2306  001BEC                     
  2307                           ;lcd.c: 91:         i++;
  2308  001BEC  2A0D               	incf	lcdPrint@i^0,f,c
  2309  001BEE                     l1863:
  2310                           
  2311                           ;lcd.c: 89:     while (str[i] != 0) {
  2312  001BEE  500D               	movf	lcdPrint@i^0,w,c
  2313  001BF0  2409               	addwf	lcdPrint@str^0,w,c
  2314  001BF2  6E0B               	movwf	??_lcdPrint^0,c
  2315  001BF4  0E00               	movlw	0
  2316  001BF6  200A               	addwfc	(lcdPrint@str+1)^0,w,c
  2317  001BF8  6E0C               	movwf	(??_lcdPrint+1)^0,c
  2318  001BFA  C00B  FFF6         	movff	??_lcdPrint,tblptrl
  2319  001BFE  C00C  FFF7         	movff	??_lcdPrint+1,tblptrh
  2320  001C02                     	if	0	;tblptru may be non-zero
  2321  001C02                     	endif
  2322  001C02                     	if	0	;tblptru may be non-zero
  2323  001C02                     	endif
  2324  001C02  0008               	tblrd		*
  2325  001C04  50F5               	movf	tablat,w,c
  2326  001C06  0900               	iorlw	0
  2327  001C08  A4D8               	btfss	status,2,c
  2328  001C0A  EF09  F00E         	goto	u1581
  2329  001C0E  EF0B  F00E         	goto	u1580
  2330  001C12                     u1581:
  2331  001C12  EFE8  F00D         	goto	l1859
  2332  001C16                     u1580:
  2333  001C16  0012               	return		;funcret
  2334  001C18                     __end_of_lcdPrint:
  2335                           	callstack 0
  2336                           
  2337 ;; *************** function _lcdData *****************
  2338 ;; Defined at:
  2339 ;;		line 67 in file "lcd.c"
  2340 ;; Parameters:    Size  Location     Type
  2341 ;;  valor           1    wreg     unsigned char 
  2342 ;; Auto vars:     Size  Location     Type
  2343 ;;  valor           1    6[COMRAM] unsigned char 
  2344 ;;  old_D           1    7[COMRAM] unsigned char 
  2345 ;; Return value:  Size  Location     Type
  2346 ;;                  1    wreg      void 
  2347 ;; Registers used:
  2348 ;;		wreg, status,2, status,0, cstack
  2349 ;; Tracked objects:
  2350 ;;		On entry : 0/0
  2351 ;;		On exit  : 0/0
  2352 ;;		Unchanged: 0/0
  2353 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2354 ;;      Params:         0       0       0       0       0       0       0
  2355 ;;      Locals:         2       0       0       0       0       0       0
  2356 ;;      Temps:          0       0       0       0       0       0       0
  2357 ;;      Totals:         2       0       0       0       0       0       0
  2358 ;;Total ram usage:        2 bytes
  2359 ;; Hardware stack levels used:    1
  2360 ;; Hardware stack levels required when called:    1
  2361 ;; This function calls:
  2362 ;;		_Delay40us
  2363 ;;		_digitalWrite
  2364 ;; This function is called by:
  2365 ;;		_celsius
  2366 ;;		_fahr
  2367 ;;		_kelvin
  2368 ;;		_lcdPrint
  2369 ;; This function uses a non-reentrant model
  2370 ;;
  2371                           
  2372                           	psect	text15
  2373  001B74                     __ptext15:
  2374                           	callstack 0
  2375  001B74                     _lcdData:
  2376                           	callstack 27
  2377                           
  2378                           ;incstack = 0
  2379                           ;lcdData@valor stored from wreg
  2380  001B74  6E07               	movwf	lcdData@valor^0,c
  2381  001B76                     
  2382                           ;lcd.c: 69:     unsigned char old_D;;lcd.c: 70:     old_D = PORTD;
  2383  001B76  CF83 F008          	movff	3971,lcdData@old_D	;volatile
  2384  001B7A                     
  2385                           ;lcd.c: 72:     TRISD = 0x00;
  2386  001B7A  0E00               	movlw	0
  2387  001B7C  6E95               	movwf	149,c	;volatile
  2388  001B7E                     
  2389                           ;lcd.c: 73:     digitalWrite(PIN_E2, 1);
  2390  001B7E  0E00               	movlw	0
  2391  001B80  6E02               	movwf	(digitalWrite@pin+1)^0,c
  2392  001B82  0E22               	movlw	34
  2393  001B84  6E01               	movwf	digitalWrite@pin^0,c
  2394  001B86  0E00               	movlw	0
  2395  001B88  6E04               	movwf	(digitalWrite@value+1)^0,c
  2396  001B8A  0E01               	movlw	1
  2397  001B8C  6E03               	movwf	digitalWrite@value^0,c
  2398  001B8E  EC36  F005         	call	_digitalWrite	;wreg free
  2399  001B92                     
  2400                           ;lcd.c: 75:     PORTD = valor;
  2401  001B92  C007  FF83         	movff	lcdData@valor,3971	;volatile
  2402  001B96                     
  2403                           ;lcd.c: 77:     digitalWrite(PIN_E1, 1);
  2404  001B96  0E00               	movlw	0
  2405  001B98  6E02               	movwf	(digitalWrite@pin+1)^0,c
  2406  001B9A  0E21               	movlw	33
  2407  001B9C  6E01               	movwf	digitalWrite@pin^0,c
  2408  001B9E  0E00               	movlw	0
  2409  001BA0  6E04               	movwf	(digitalWrite@value+1)^0,c
  2410  001BA2  0E01               	movlw	1
  2411  001BA4  6E03               	movwf	digitalWrite@value^0,c
  2412  001BA6  EC36  F005         	call	_digitalWrite	;wreg free
  2413  001BAA                     
  2414                           ;lcd.c: 78:     digitalWrite(PIN_E1, 0);
  2415  001BAA  0E00               	movlw	0
  2416  001BAC  6E02               	movwf	(digitalWrite@pin+1)^0,c
  2417  001BAE  0E21               	movlw	33
  2418  001BB0  6E01               	movwf	digitalWrite@pin^0,c
  2419  001BB2  0E00               	movlw	0
  2420  001BB4  6E04               	movwf	(digitalWrite@value+1)^0,c
  2421  001BB6  0E00               	movlw	0
  2422  001BB8  6E03               	movwf	digitalWrite@value^0,c
  2423  001BBA  EC36  F005         	call	_digitalWrite	;wreg free
  2424  001BBE                     
  2425                           ;lcd.c: 80:     PORTD = old_D;
  2426  001BBE  C008  FF83         	movff	lcdData@old_D,3971	;volatile
  2427  001BC2                     
  2428                           ;lcd.c: 82:     Delay40us();
  2429  001BC2  ECA4  F00E         	call	_Delay40us	;wreg free
  2430  001BC6  0012               	return		;funcret
  2431  001BC8                     __end_of_lcdData:
  2432                           	callstack 0
  2433                           
  2434 ;; *************** function _digitalWrite *****************
  2435 ;; Defined at:
  2436 ;;		line 14 in file "io.c"
  2437 ;; Parameters:    Size  Location     Type
  2438 ;;  pin             2    0[COMRAM] int 
  2439 ;;  value           2    2[COMRAM] int 
  2440 ;; Auto vars:     Size  Location     Type
  2441 ;;		None
  2442 ;; Return value:  Size  Location     Type
  2443 ;;                  1    wreg      void 
  2444 ;; Registers used:
  2445 ;;		wreg, status,2, status,0
  2446 ;; Tracked objects:
  2447 ;;		On entry : 0/0
  2448 ;;		On exit  : 0/0
  2449 ;;		Unchanged: 0/0
  2450 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2451 ;;      Params:         4       0       0       0       0       0       0
  2452 ;;      Locals:         0       0       0       0       0       0       0
  2453 ;;      Temps:          2       0       0       0       0       0       0
  2454 ;;      Totals:         6       0       0       0       0       0       0
  2455 ;;Total ram usage:        6 bytes
  2456 ;; Hardware stack levels used:    1
  2457 ;; This function calls:
  2458 ;;		Nothing
  2459 ;; This function is called by:
  2460 ;;		_lcdCommand
  2461 ;;		_lcdData
  2462 ;; This function uses a non-reentrant model
  2463 ;;
  2464                           
  2465                           	psect	text16
  2466  000A6C                     __ptext16:
  2467                           	callstack 0
  2468  000A6C                     _digitalWrite:
  2469                           	callstack 28
  2470  000A6C                     
  2471                           ;io.c: 16:     if(pin <8){
  2472  000A6C  BE02               	btfsc	(digitalWrite@pin+1)^0,7,c
  2473  000A6E  EF44  F005         	goto	u1270
  2474  000A72  5002               	movf	(digitalWrite@pin+1)^0,w,c
  2475  000A74  E107               	bnz	u1271
  2476  000A76  0E08               	movlw	8
  2477  000A78  5C01               	subwf	digitalWrite@pin^0,w,c
  2478  000A7A  B0D8               	btfsc	status,0,c
  2479  000A7C  EF42  F005         	goto	u1271
  2480  000A80  EF44  F005         	goto	u1270
  2481  000A84                     u1271:
  2482  000A84  EF6E  F005         	goto	l1729
  2483  000A88                     u1270:
  2484  000A88                     
  2485                           ;io.c: 17:         if (value){ ((PORTA) |= (1<<(pin)));}
  2486  000A88  5003               	movf	digitalWrite@value^0,w,c
  2487  000A8A  1004               	iorwf	(digitalWrite@value+1)^0,w,c
  2488  000A8C  B4D8               	btfsc	status,2,c
  2489  000A8E  EF4B  F005         	goto	u1281
  2490  000A92  EF4D  F005         	goto	u1280
  2491  000A96                     u1281:
  2492  000A96  EF5D  F005         	goto	l1727
  2493  000A9A                     u1280:
  2494  000A9A  C001  F005         	movff	digitalWrite@pin,??_digitalWrite
  2495  000A9E  0E01               	movlw	1
  2496  000AA0  6E06               	movwf	(??_digitalWrite+1)^0,c
  2497  000AA2  2A05               	incf	??_digitalWrite^0,f,c
  2498  000AA4  EF56  F005         	goto	u1294
  2499  000AA8                     u1295:
  2500  000AA8  90D8               	bcf	status,0,c
  2501  000AAA  3606               	rlcf	(??_digitalWrite+1)^0,f,c
  2502  000AAC                     u1294:
  2503  000AAC  2E05               	decfsz	??_digitalWrite^0,f,c
  2504  000AAE  EF54  F005         	goto	u1295
  2505  000AB2  5006               	movf	(??_digitalWrite+1)^0,w,c
  2506  000AB4  1280               	iorwf	128,f,c	;volatile
  2507  000AB6  EF5C  F006         	goto	l124
  2508  000ABA                     l1727:
  2509  000ABA  C001  F005         	movff	digitalWrite@pin,??_digitalWrite
  2510  000ABE  0E01               	movlw	1
  2511  000AC0  6E06               	movwf	(??_digitalWrite+1)^0,c
  2512  000AC2  2A05               	incf	??_digitalWrite^0,f,c
  2513  000AC4  EF66  F005         	goto	u1304
  2514  000AC8                     u1305:
  2515  000AC8  90D8               	bcf	status,0,c
  2516  000ACA  3606               	rlcf	(??_digitalWrite+1)^0,f,c
  2517  000ACC                     u1304:
  2518  000ACC  2E05               	decfsz	??_digitalWrite^0,f,c
  2519  000ACE  EF64  F005         	goto	u1305
  2520  000AD2  5006               	movf	(??_digitalWrite+1)^0,w,c
  2521  000AD4  0AFF               	xorlw	255
  2522  000AD6  1680               	andwf	128,f,c	;volatile
  2523  000AD8  EF5C  F006         	goto	l124
  2524  000ADC                     l1729:
  2525  000ADC  BE02               	btfsc	(digitalWrite@pin+1)^0,7,c
  2526  000ADE  EF7C  F005         	goto	u1310
  2527  000AE2  5002               	movf	(digitalWrite@pin+1)^0,w,c
  2528  000AE4  E107               	bnz	u1311
  2529  000AE6  0E10               	movlw	16
  2530  000AE8  5C01               	subwf	digitalWrite@pin^0,w,c
  2531  000AEA  B0D8               	btfsc	status,0,c
  2532  000AEC  EF7A  F005         	goto	u1311
  2533  000AF0  EF7C  F005         	goto	u1310
  2534  000AF4                     u1311:
  2535  000AF4  EFAA  F005         	goto	l1737
  2536  000AF8                     u1310:
  2537  000AF8                     
  2538                           ;io.c: 20:         pin -=8;
  2539  000AF8  0EF8               	movlw	248
  2540  000AFA  2601               	addwf	digitalWrite@pin^0,f,c
  2541  000AFC  0EFF               	movlw	255
  2542  000AFE  2202               	addwfc	(digitalWrite@pin+1)^0,f,c
  2543                           
  2544                           ;io.c: 21:         if (value){ ((PORTB) |= (1<<(pin)));}
  2545  000B00  5003               	movf	digitalWrite@value^0,w,c
  2546  000B02  1004               	iorwf	(digitalWrite@value+1)^0,w,c
  2547  000B04  B4D8               	btfsc	status,2,c
  2548  000B06  EF87  F005         	goto	u1321
  2549  000B0A  EF89  F005         	goto	u1320
  2550  000B0E                     u1321:
  2551  000B0E  EF99  F005         	goto	l1735
  2552  000B12                     u1320:
  2553  000B12  C001  F005         	movff	digitalWrite@pin,??_digitalWrite
  2554  000B16  0E01               	movlw	1
  2555  000B18  6E06               	movwf	(??_digitalWrite+1)^0,c
  2556  000B1A  2A05               	incf	??_digitalWrite^0,f,c
  2557  000B1C  EF92  F005         	goto	u1334
  2558  000B20                     u1335:
  2559  000B20  90D8               	bcf	status,0,c
  2560  000B22  3606               	rlcf	(??_digitalWrite+1)^0,f,c
  2561  000B24                     u1334:
  2562  000B24  2E05               	decfsz	??_digitalWrite^0,f,c
  2563  000B26  EF90  F005         	goto	u1335
  2564  000B2A  5006               	movf	(??_digitalWrite+1)^0,w,c
  2565  000B2C  1281               	iorwf	129,f,c	;volatile
  2566  000B2E  EF5C  F006         	goto	l124
  2567  000B32                     l1735:
  2568  000B32  C001  F005         	movff	digitalWrite@pin,??_digitalWrite
  2569  000B36  0E01               	movlw	1
  2570  000B38  6E06               	movwf	(??_digitalWrite+1)^0,c
  2571  000B3A  2A05               	incf	??_digitalWrite^0,f,c
  2572  000B3C  EFA2  F005         	goto	u1344
  2573  000B40                     u1345:
  2574  000B40  90D8               	bcf	status,0,c
  2575  000B42  3606               	rlcf	(??_digitalWrite+1)^0,f,c
  2576  000B44                     u1344:
  2577  000B44  2E05               	decfsz	??_digitalWrite^0,f,c
  2578  000B46  EFA0  F005         	goto	u1345
  2579  000B4A  5006               	movf	(??_digitalWrite+1)^0,w,c
  2580  000B4C  0AFF               	xorlw	255
  2581  000B4E  1681               	andwf	129,f,c	;volatile
  2582  000B50  EF5C  F006         	goto	l124
  2583  000B54                     l1737:
  2584  000B54  BE02               	btfsc	(digitalWrite@pin+1)^0,7,c
  2585  000B56  EFB8  F005         	goto	u1350
  2586  000B5A  5002               	movf	(digitalWrite@pin+1)^0,w,c
  2587  000B5C  E107               	bnz	u1351
  2588  000B5E  0E18               	movlw	24
  2589  000B60  5C01               	subwf	digitalWrite@pin^0,w,c
  2590  000B62  B0D8               	btfsc	status,0,c
  2591  000B64  EFB6  F005         	goto	u1351
  2592  000B68  EFB8  F005         	goto	u1350
  2593  000B6C                     u1351:
  2594  000B6C  EFE6  F005         	goto	l1745
  2595  000B70                     u1350:
  2596  000B70                     
  2597                           ;io.c: 24:         pin -=16;
  2598  000B70  0EF0               	movlw	240
  2599  000B72  2601               	addwf	digitalWrite@pin^0,f,c
  2600  000B74  0EFF               	movlw	255
  2601  000B76  2202               	addwfc	(digitalWrite@pin+1)^0,f,c
  2602                           
  2603                           ;io.c: 25:         if (value){ ((PORTC) |= (1<<(pin)));}
  2604  000B78  5003               	movf	digitalWrite@value^0,w,c
  2605  000B7A  1004               	iorwf	(digitalWrite@value+1)^0,w,c
  2606  000B7C  B4D8               	btfsc	status,2,c
  2607  000B7E  EFC3  F005         	goto	u1361
  2608  000B82  EFC5  F005         	goto	u1360
  2609  000B86                     u1361:
  2610  000B86  EFD5  F005         	goto	l1743
  2611  000B8A                     u1360:
  2612  000B8A  C001  F005         	movff	digitalWrite@pin,??_digitalWrite
  2613  000B8E  0E01               	movlw	1
  2614  000B90  6E06               	movwf	(??_digitalWrite+1)^0,c
  2615  000B92  2A05               	incf	??_digitalWrite^0,f,c
  2616  000B94  EFCE  F005         	goto	u1374
  2617  000B98                     u1375:
  2618  000B98  90D8               	bcf	status,0,c
  2619  000B9A  3606               	rlcf	(??_digitalWrite+1)^0,f,c
  2620  000B9C                     u1374:
  2621  000B9C  2E05               	decfsz	??_digitalWrite^0,f,c
  2622  000B9E  EFCC  F005         	goto	u1375
  2623  000BA2  5006               	movf	(??_digitalWrite+1)^0,w,c
  2624  000BA4  1282               	iorwf	130,f,c	;volatile
  2625  000BA6  EF5C  F006         	goto	l124
  2626  000BAA                     l1743:
  2627  000BAA  C001  F005         	movff	digitalWrite@pin,??_digitalWrite
  2628  000BAE  0E01               	movlw	1
  2629  000BB0  6E06               	movwf	(??_digitalWrite+1)^0,c
  2630  000BB2  2A05               	incf	??_digitalWrite^0,f,c
  2631  000BB4  EFDE  F005         	goto	u1384
  2632  000BB8                     u1385:
  2633  000BB8  90D8               	bcf	status,0,c
  2634  000BBA  3606               	rlcf	(??_digitalWrite+1)^0,f,c
  2635  000BBC                     u1384:
  2636  000BBC  2E05               	decfsz	??_digitalWrite^0,f,c
  2637  000BBE  EFDC  F005         	goto	u1385
  2638  000BC2  5006               	movf	(??_digitalWrite+1)^0,w,c
  2639  000BC4  0AFF               	xorlw	255
  2640  000BC6  1682               	andwf	130,f,c	;volatile
  2641  000BC8  EF5C  F006         	goto	l124
  2642  000BCC                     l1745:
  2643  000BCC  BE02               	btfsc	(digitalWrite@pin+1)^0,7,c
  2644  000BCE  EFF4  F005         	goto	u1390
  2645  000BD2  5002               	movf	(digitalWrite@pin+1)^0,w,c
  2646  000BD4  E107               	bnz	u1391
  2647  000BD6  0E20               	movlw	32
  2648  000BD8  5C01               	subwf	digitalWrite@pin^0,w,c
  2649  000BDA  B0D8               	btfsc	status,0,c
  2650  000BDC  EFF2  F005         	goto	u1391
  2651  000BE0  EFF4  F005         	goto	u1390
  2652  000BE4                     u1391:
  2653  000BE4  EF22  F006         	goto	l1753
  2654  000BE8                     u1390:
  2655  000BE8                     
  2656                           ;io.c: 28:         pin -=24;
  2657  000BE8  0EE8               	movlw	232
  2658  000BEA  2601               	addwf	digitalWrite@pin^0,f,c
  2659  000BEC  0EFF               	movlw	255
  2660  000BEE  2202               	addwfc	(digitalWrite@pin+1)^0,f,c
  2661                           
  2662                           ;io.c: 29:         if (value){ ((PORTD) |= (1<<(pin)));}
  2663  000BF0  5003               	movf	digitalWrite@value^0,w,c
  2664  000BF2  1004               	iorwf	(digitalWrite@value+1)^0,w,c
  2665  000BF4  B4D8               	btfsc	status,2,c
  2666  000BF6  EFFF  F005         	goto	u1401
  2667  000BFA  EF01  F006         	goto	u1400
  2668  000BFE                     u1401:
  2669  000BFE  EF11  F006         	goto	l1751
  2670  000C02                     u1400:
  2671  000C02  C001  F005         	movff	digitalWrite@pin,??_digitalWrite
  2672  000C06  0E01               	movlw	1
  2673  000C08  6E06               	movwf	(??_digitalWrite+1)^0,c
  2674  000C0A  2A05               	incf	??_digitalWrite^0,f,c
  2675  000C0C  EF0A  F006         	goto	u1414
  2676  000C10                     u1415:
  2677  000C10  90D8               	bcf	status,0,c
  2678  000C12  3606               	rlcf	(??_digitalWrite+1)^0,f,c
  2679  000C14                     u1414:
  2680  000C14  2E05               	decfsz	??_digitalWrite^0,f,c
  2681  000C16  EF08  F006         	goto	u1415
  2682  000C1A  5006               	movf	(??_digitalWrite+1)^0,w,c
  2683  000C1C  1283               	iorwf	131,f,c	;volatile
  2684  000C1E  EF5C  F006         	goto	l124
  2685  000C22                     l1751:
  2686  000C22  C001  F005         	movff	digitalWrite@pin,??_digitalWrite
  2687  000C26  0E01               	movlw	1
  2688  000C28  6E06               	movwf	(??_digitalWrite+1)^0,c
  2689  000C2A  2A05               	incf	??_digitalWrite^0,f,c
  2690  000C2C  EF1A  F006         	goto	u1424
  2691  000C30                     u1425:
  2692  000C30  90D8               	bcf	status,0,c
  2693  000C32  3606               	rlcf	(??_digitalWrite+1)^0,f,c
  2694  000C34                     u1424:
  2695  000C34  2E05               	decfsz	??_digitalWrite^0,f,c
  2696  000C36  EF18  F006         	goto	u1425
  2697  000C3A  5006               	movf	(??_digitalWrite+1)^0,w,c
  2698  000C3C  0AFF               	xorlw	255
  2699  000C3E  1683               	andwf	131,f,c	;volatile
  2700  000C40  EF5C  F006         	goto	l124
  2701  000C44                     l1753:
  2702  000C44  BE02               	btfsc	(digitalWrite@pin+1)^0,7,c
  2703  000C46  EF30  F006         	goto	u1430
  2704  000C4A  5002               	movf	(digitalWrite@pin+1)^0,w,c
  2705  000C4C  E107               	bnz	u1431
  2706  000C4E  0E28               	movlw	40
  2707  000C50  5C01               	subwf	digitalWrite@pin^0,w,c
  2708  000C52  B0D8               	btfsc	status,0,c
  2709  000C54  EF2E  F006         	goto	u1431
  2710  000C58  EF30  F006         	goto	u1430
  2711  000C5C                     u1431:
  2712  000C5C  EF5C  F006         	goto	l124
  2713  000C60                     u1430:
  2714  000C60                     
  2715                           ;io.c: 32:         pin -=32;
  2716  000C60  0EE0               	movlw	224
  2717  000C62  2601               	addwf	digitalWrite@pin^0,f,c
  2718  000C64  0EFF               	movlw	255
  2719  000C66  2202               	addwfc	(digitalWrite@pin+1)^0,f,c
  2720                           
  2721                           ;io.c: 33:         if (value){ ((PORTE) |= (1<<(pin)));}
  2722  000C68  5003               	movf	digitalWrite@value^0,w,c
  2723  000C6A  1004               	iorwf	(digitalWrite@value+1)^0,w,c
  2724  000C6C  B4D8               	btfsc	status,2,c
  2725  000C6E  EF3B  F006         	goto	u1441
  2726  000C72  EF3D  F006         	goto	u1440
  2727  000C76                     u1441:
  2728  000C76  EF4D  F006         	goto	l1759
  2729  000C7A                     u1440:
  2730  000C7A  C001  F005         	movff	digitalWrite@pin,??_digitalWrite
  2731  000C7E  0E01               	movlw	1
  2732  000C80  6E06               	movwf	(??_digitalWrite+1)^0,c
  2733  000C82  2A05               	incf	??_digitalWrite^0,f,c
  2734  000C84  EF46  F006         	goto	u1454
  2735  000C88                     u1455:
  2736  000C88  90D8               	bcf	status,0,c
  2737  000C8A  3606               	rlcf	(??_digitalWrite+1)^0,f,c
  2738  000C8C                     u1454:
  2739  000C8C  2E05               	decfsz	??_digitalWrite^0,f,c
  2740  000C8E  EF44  F006         	goto	u1455
  2741  000C92  5006               	movf	(??_digitalWrite+1)^0,w,c
  2742  000C94  1284               	iorwf	132,f,c	;volatile
  2743  000C96  EF5C  F006         	goto	l124
  2744  000C9A                     l1759:
  2745  000C9A  C001  F005         	movff	digitalWrite@pin,??_digitalWrite
  2746  000C9E  0E01               	movlw	1
  2747  000CA0  6E06               	movwf	(??_digitalWrite+1)^0,c
  2748  000CA2  2A05               	incf	??_digitalWrite^0,f,c
  2749  000CA4  EF56  F006         	goto	u1464
  2750  000CA8                     u1465:
  2751  000CA8  90D8               	bcf	status,0,c
  2752  000CAA  3606               	rlcf	(??_digitalWrite+1)^0,f,c
  2753  000CAC                     u1464:
  2754  000CAC  2E05               	decfsz	??_digitalWrite^0,f,c
  2755  000CAE  EF54  F006         	goto	u1465
  2756  000CB2  5006               	movf	(??_digitalWrite+1)^0,w,c
  2757  000CB4  0AFF               	xorlw	255
  2758  000CB6  1684               	andwf	132,f,c	;volatile
  2759  000CB8                     l124:
  2760  000CB8  0012               	return		;funcret
  2761  000CBA                     __end_of_digitalWrite:
  2762                           	callstack 0
  2763                           
  2764 ;; *************** function _Delay40us *****************
  2765 ;; Defined at:
  2766 ;;		line 30 in file "lcd.c"
  2767 ;; Parameters:    Size  Location     Type
  2768 ;;		None
  2769 ;; Auto vars:     Size  Location     Type
  2770 ;;  i               1    0[COMRAM] unsigned char 
  2771 ;; Return value:  Size  Location     Type
  2772 ;;                  1    wreg      void 
  2773 ;; Registers used:
  2774 ;;		wreg, status,2, status,0
  2775 ;; Tracked objects:
  2776 ;;		On entry : 0/0
  2777 ;;		On exit  : 0/0
  2778 ;;		Unchanged: 0/0
  2779 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2780 ;;      Params:         0       0       0       0       0       0       0
  2781 ;;      Locals:         1       0       0       0       0       0       0
  2782 ;;      Temps:          0       0       0       0       0       0       0
  2783 ;;      Totals:         1       0       0       0       0       0       0
  2784 ;;Total ram usage:        1 bytes
  2785 ;; Hardware stack levels used:    1
  2786 ;; This function calls:
  2787 ;;		Nothing
  2788 ;; This function is called by:
  2789 ;;		_Delay2ms
  2790 ;;		_lcdCommand
  2791 ;;		_lcdData
  2792 ;; This function uses a non-reentrant model
  2793 ;;
  2794                           
  2795                           	psect	text17
  2796  001D48                     __ptext17:
  2797                           	callstack 0
  2798  001D48                     _Delay40us:
  2799                           	callstack 28
  2800  001D48                     
  2801                           ;lcd.c: 31:     unsigned char i;;lcd.c: 32:     for (i = 0; i < 25; i++);
  2802  001D48  0E00               	movlw	0
  2803  001D4A  6E01               	movwf	Delay40us@i^0,c
  2804  001D4C                     l1717:
  2805  001D4C  2A01               	incf	Delay40us@i^0,f,c
  2806  001D4E  0E18               	movlw	24
  2807  001D50  6401               	cpfsgt	Delay40us@i^0,c
  2808  001D52  EFAD  F00E         	goto	u1261
  2809  001D56  EFAF  F00E         	goto	u1260
  2810  001D5A                     u1261:
  2811  001D5A  EFA6  F00E         	goto	l1717
  2812  001D5E                     u1260:
  2813  001D5E  0012               	return		;funcret
  2814  001D60                     __end_of_Delay40us:
  2815                           	callstack 0
  2816                           
  2817 ;; *************** function _itoa *****************
  2818 ;; Defined at:
  2819 ;;		line 121 in file "main.c"
  2820 ;; Parameters:    Size  Location     Type
  2821 ;;  val             2   12[COMRAM] unsigned int 
  2822 ;;  str             2   14[COMRAM] PTR unsigned char 
  2823 ;;		 -> str(6), 
  2824 ;; Auto vars:     Size  Location     Type
  2825 ;;		None
  2826 ;; Return value:  Size  Location     Type
  2827 ;;                  1    wreg      void 
  2828 ;; Registers used:
  2829 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  2830 ;; Tracked objects:
  2831 ;;		On entry : 0/0
  2832 ;;		On exit  : 0/0
  2833 ;;		Unchanged: 0/0
  2834 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2835 ;;      Params:         4       0       0       0       0       0       0
  2836 ;;      Locals:         0       0       0       0       0       0       0
  2837 ;;      Temps:          0       0       0       0       0       0       0
  2838 ;;      Totals:         4       0       0       0       0       0       0
  2839 ;;Total ram usage:        4 bytes
  2840 ;; Hardware stack levels used:    1
  2841 ;; Hardware stack levels required when called:    1
  2842 ;; This function calls:
  2843 ;;		___lwdiv
  2844 ;;		___lwmod
  2845 ;; This function is called by:
  2846 ;;		_celsius
  2847 ;;		_fahr
  2848 ;;		_kelvin
  2849 ;; This function uses a non-reentrant model
  2850 ;;
  2851                           
  2852                           	psect	text18
  2853  0015CA                     __ptext18:
  2854                           	callstack 0
  2855  0015CA                     _itoa:
  2856                           	callstack 28
  2857  0015CA                     
  2858                           ;main.c: 122:     str[0] = (val / 10000) + 0x30;
  2859  0015CA  C00D  F006         	movff	itoa@val,___lwdiv@dividend
  2860  0015CE  C00E  F007         	movff	itoa@val+1,___lwdiv@dividend+1
  2861  0015D2  0E27               	movlw	39
  2862  0015D4  6E09               	movwf	(___lwdiv@divisor+1)^0,c
  2863  0015D6  0E10               	movlw	16
  2864  0015D8  6E08               	movwf	___lwdiv@divisor^0,c
  2865  0015DA  EC4E  F00D         	call	___lwdiv	;wreg free
  2866  0015DE  5006               	movf	?___lwdiv^0,w,c
  2867  0015E0  0F30               	addlw	48
  2868  0015E2  C00F  FFD9         	movff	itoa@str,fsr2l
  2869  0015E6  C010  FFDA         	movff	itoa@str+1,fsr2h
  2870  0015EA  6EDF               	movwf	indf2,c
  2871                           
  2872                           ;main.c: 123:     str[1] = ((val % 10000) / 1000) + 0x30;
  2873  0015EC  EE20 F001          	lfsr	2,1
  2874  0015F0  500F               	movf	itoa@str^0,w,c
  2875  0015F2  26D9               	addwf	fsr2l,f,c
  2876  0015F4  5010               	movf	(itoa@str+1)^0,w,c
  2877  0015F6  22DA               	addwfc	fsr2h,f,c
  2878  0015F8  0E27               	movlw	39
  2879  0015FA  6E04               	movwf	(___lwmod@divisor+1)^0,c
  2880  0015FC  0E10               	movlw	16
  2881  0015FE  6E03               	movwf	___lwmod@divisor^0,c
  2882  001600  C00D  F001         	movff	itoa@val,___lwmod@dividend
  2883  001604  C00E  F002         	movff	itoa@val+1,___lwmod@dividend+1
  2884  001608  EC88  F00D         	call	___lwmod	;wreg free
  2885  00160C  C001  F006         	movff	?___lwmod,___lwdiv@dividend
  2886  001610  C002  F007         	movff	?___lwmod+1,___lwdiv@dividend+1
  2887  001614  0E03               	movlw	3
  2888  001616  6E09               	movwf	(___lwdiv@divisor+1)^0,c
  2889  001618  0EE8               	movlw	232
  2890  00161A  6E08               	movwf	___lwdiv@divisor^0,c
  2891  00161C  EC4E  F00D         	call	___lwdiv	;wreg free
  2892  001620  5006               	movf	?___lwdiv^0,w,c
  2893  001622  0F30               	addlw	48
  2894  001624  6EDF               	movwf	indf2,c
  2895                           
  2896                           ;main.c: 124:     str[2] = ((val % 1000) / 100) + 0x30;
  2897  001626  EE20 F002          	lfsr	2,2
  2898  00162A  500F               	movf	itoa@str^0,w,c
  2899  00162C  26D9               	addwf	fsr2l,f,c
  2900  00162E  5010               	movf	(itoa@str+1)^0,w,c
  2901  001630  22DA               	addwfc	fsr2h,f,c
  2902  001632  0E03               	movlw	3
  2903  001634  6E04               	movwf	(___lwmod@divisor+1)^0,c
  2904  001636  0EE8               	movlw	232
  2905  001638  6E03               	movwf	___lwmod@divisor^0,c
  2906  00163A  C00D  F001         	movff	itoa@val,___lwmod@dividend
  2907  00163E  C00E  F002         	movff	itoa@val+1,___lwmod@dividend+1
  2908  001642  EC88  F00D         	call	___lwmod	;wreg free
  2909  001646  C001  F006         	movff	?___lwmod,___lwdiv@dividend
  2910  00164A  C002  F007         	movff	?___lwmod+1,___lwdiv@dividend+1
  2911  00164E  0E00               	movlw	0
  2912  001650  6E09               	movwf	(___lwdiv@divisor+1)^0,c
  2913  001652  0E64               	movlw	100
  2914  001654  6E08               	movwf	___lwdiv@divisor^0,c
  2915  001656  EC4E  F00D         	call	___lwdiv	;wreg free
  2916  00165A  5006               	movf	?___lwdiv^0,w,c
  2917  00165C  0F30               	addlw	48
  2918  00165E  6EDF               	movwf	indf2,c
  2919                           
  2920                           ;main.c: 125:     str[3] = ((val % 100) / 10) + 0x30;
  2921  001660  EE20 F003          	lfsr	2,3
  2922  001664  500F               	movf	itoa@str^0,w,c
  2923  001666  26D9               	addwf	fsr2l,f,c
  2924  001668  5010               	movf	(itoa@str+1)^0,w,c
  2925  00166A  22DA               	addwfc	fsr2h,f,c
  2926  00166C  0E00               	movlw	0
  2927  00166E  6E04               	movwf	(___lwmod@divisor+1)^0,c
  2928  001670  0E64               	movlw	100
  2929  001672  6E03               	movwf	___lwmod@divisor^0,c
  2930  001674  C00D  F001         	movff	itoa@val,___lwmod@dividend
  2931  001678  C00E  F002         	movff	itoa@val+1,___lwmod@dividend+1
  2932  00167C  EC88  F00D         	call	___lwmod	;wreg free
  2933  001680  C001  F006         	movff	?___lwmod,___lwdiv@dividend
  2934  001684  C002  F007         	movff	?___lwmod+1,___lwdiv@dividend+1
  2935  001688  0E00               	movlw	0
  2936  00168A  6E09               	movwf	(___lwdiv@divisor+1)^0,c
  2937  00168C  0E0A               	movlw	10
  2938  00168E  6E08               	movwf	___lwdiv@divisor^0,c
  2939  001690  EC4E  F00D         	call	___lwdiv	;wreg free
  2940  001694  5006               	movf	?___lwdiv^0,w,c
  2941  001696  0F30               	addlw	48
  2942  001698  6EDF               	movwf	indf2,c
  2943                           
  2944                           ;main.c: 126:     str[4] = (val % 10) + 0x30;
  2945  00169A  EE20 F004          	lfsr	2,4
  2946  00169E  500F               	movf	itoa@str^0,w,c
  2947  0016A0  26D9               	addwf	fsr2l,f,c
  2948  0016A2  5010               	movf	(itoa@str+1)^0,w,c
  2949  0016A4  22DA               	addwfc	fsr2h,f,c
  2950  0016A6  C00D  F001         	movff	itoa@val,___lwmod@dividend
  2951  0016AA  C00E  F002         	movff	itoa@val+1,___lwmod@dividend+1
  2952  0016AE  0E00               	movlw	0
  2953  0016B0  6E04               	movwf	(___lwmod@divisor+1)^0,c
  2954  0016B2  0E0A               	movlw	10
  2955  0016B4  6E03               	movwf	___lwmod@divisor^0,c
  2956  0016B6  EC88  F00D         	call	___lwmod	;wreg free
  2957  0016BA  5001               	movf	?___lwmod^0,w,c
  2958  0016BC  0F30               	addlw	48
  2959  0016BE  6EDF               	movwf	indf2,c
  2960  0016C0                     
  2961                           ;main.c: 127:     str[5] = 0 + 0x30;
  2962  0016C0  EE20 F005          	lfsr	2,5
  2963  0016C4  500F               	movf	itoa@str^0,w,c
  2964  0016C6  26D9               	addwf	fsr2l,f,c
  2965  0016C8  5010               	movf	(itoa@str+1)^0,w,c
  2966  0016CA  22DA               	addwfc	fsr2h,f,c
  2967  0016CC  0E30               	movlw	48
  2968  0016CE  6EDF               	movwf	indf2,c
  2969  0016D0  0012               	return		;funcret
  2970  0016D2                     __end_of_itoa:
  2971                           	callstack 0
  2972                           
  2973 ;; *************** function ___lwmod *****************
  2974 ;; Defined at:
  2975 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\lwmod.c"
  2976 ;; Parameters:    Size  Location     Type
  2977 ;;  dividend        2    0[COMRAM] unsigned int 
  2978 ;;  divisor         2    2[COMRAM] unsigned int 
  2979 ;; Auto vars:     Size  Location     Type
  2980 ;;  counter         1    4[COMRAM] unsigned char 
  2981 ;; Return value:  Size  Location     Type
  2982 ;;                  2    0[COMRAM] unsigned int 
  2983 ;; Registers used:
  2984 ;;		wreg, status,2, status,0
  2985 ;; Tracked objects:
  2986 ;;		On entry : 0/0
  2987 ;;		On exit  : 0/0
  2988 ;;		Unchanged: 0/0
  2989 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2990 ;;      Params:         4       0       0       0       0       0       0
  2991 ;;      Locals:         1       0       0       0       0       0       0
  2992 ;;      Temps:          0       0       0       0       0       0       0
  2993 ;;      Totals:         5       0       0       0       0       0       0
  2994 ;;Total ram usage:        5 bytes
  2995 ;; Hardware stack levels used:    1
  2996 ;; This function calls:
  2997 ;;		Nothing
  2998 ;; This function is called by:
  2999 ;;		_itoa
  3000 ;; This function uses a non-reentrant model
  3001 ;;
  3002                           
  3003                           	psect	text19
  3004  001B10                     __ptext19:
  3005                           	callstack 0
  3006  001B10                     ___lwmod:
  3007                           	callstack 28
  3008  001B10  5003               	movf	___lwmod@divisor^0,w,c
  3009  001B12  1004               	iorwf	(___lwmod@divisor+1)^0,w,c
  3010  001B14  B4D8               	btfsc	status,2,c
  3011  001B16  EF8F  F00D         	goto	u1531
  3012  001B1A  EF91  F00D         	goto	u1530
  3013  001B1E                     u1531:
  3014  001B1E  EFB5  F00D         	goto	l763
  3015  001B22                     u1530:
  3016  001B22  0E01               	movlw	1
  3017  001B24  6E05               	movwf	___lwmod@counter^0,c
  3018  001B26  EF99  F00D         	goto	l1839
  3019  001B2A                     l1837:
  3020  001B2A  90D8               	bcf	status,0,c
  3021  001B2C  3603               	rlcf	___lwmod@divisor^0,f,c
  3022  001B2E  3604               	rlcf	(___lwmod@divisor+1)^0,f,c
  3023  001B30  2A05               	incf	___lwmod@counter^0,f,c
  3024  001B32                     l1839:
  3025  001B32  AE04               	btfss	(___lwmod@divisor+1)^0,7,c
  3026  001B34  EF9E  F00D         	goto	u1541
  3027  001B38  EFA0  F00D         	goto	u1540
  3028  001B3C                     u1541:
  3029  001B3C  EF95  F00D         	goto	l1837
  3030  001B40                     u1540:
  3031  001B40                     l1841:
  3032  001B40  5003               	movf	___lwmod@divisor^0,w,c
  3033  001B42  5C01               	subwf	___lwmod@dividend^0,w,c
  3034  001B44  5004               	movf	(___lwmod@divisor+1)^0,w,c
  3035  001B46  5802               	subwfb	(___lwmod@dividend+1)^0,w,c
  3036  001B48  A0D8               	btfss	status,0,c
  3037  001B4A  EFA9  F00D         	goto	u1551
  3038  001B4E  EFAB  F00D         	goto	u1550
  3039  001B52                     u1551:
  3040  001B52  EFAF  F00D         	goto	l1845
  3041  001B56                     u1550:
  3042  001B56  5003               	movf	___lwmod@divisor^0,w,c
  3043  001B58  5E01               	subwf	___lwmod@dividend^0,f,c
  3044  001B5A  5004               	movf	(___lwmod@divisor+1)^0,w,c
  3045  001B5C  5A02               	subwfb	(___lwmod@dividend+1)^0,f,c
  3046  001B5E                     l1845:
  3047  001B5E  90D8               	bcf	status,0,c
  3048  001B60  3204               	rrcf	(___lwmod@divisor+1)^0,f,c
  3049  001B62  3203               	rrcf	___lwmod@divisor^0,f,c
  3050  001B64  2E05               	decfsz	___lwmod@counter^0,f,c
  3051  001B66  EFA0  F00D         	goto	l1841
  3052  001B6A                     l763:
  3053  001B6A  C001  F001         	movff	___lwmod@dividend,?___lwmod
  3054  001B6E  C002  F002         	movff	___lwmod@dividend+1,?___lwmod+1
  3055  001B72  0012               	return		;funcret
  3056  001B74                     __end_of___lwmod:
  3057                           	callstack 0
  3058                           
  3059 ;; *************** function ___lwdiv *****************
  3060 ;; Defined at:
  3061 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\lwdiv.c"
  3062 ;; Parameters:    Size  Location     Type
  3063 ;;  dividend        2    5[COMRAM] unsigned int 
  3064 ;;  divisor         2    7[COMRAM] unsigned int 
  3065 ;; Auto vars:     Size  Location     Type
  3066 ;;  quotient        2    9[COMRAM] unsigned int 
  3067 ;;  counter         1   11[COMRAM] unsigned char 
  3068 ;; Return value:  Size  Location     Type
  3069 ;;                  2    5[COMRAM] unsigned int 
  3070 ;; Registers used:
  3071 ;;		wreg, status,2, status,0
  3072 ;; Tracked objects:
  3073 ;;		On entry : 0/0
  3074 ;;		On exit  : 0/0
  3075 ;;		Unchanged: 0/0
  3076 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3077 ;;      Params:         4       0       0       0       0       0       0
  3078 ;;      Locals:         3       0       0       0       0       0       0
  3079 ;;      Temps:          0       0       0       0       0       0       0
  3080 ;;      Totals:         7       0       0       0       0       0       0
  3081 ;;Total ram usage:        7 bytes
  3082 ;; Hardware stack levels used:    1
  3083 ;; This function calls:
  3084 ;;		Nothing
  3085 ;; This function is called by:
  3086 ;;		_itoa
  3087 ;; This function uses a non-reentrant model
  3088 ;;
  3089                           
  3090                           	psect	text20
  3091  001A9C                     __ptext20:
  3092                           	callstack 0
  3093  001A9C                     ___lwdiv:
  3094                           	callstack 28
  3095  001A9C  0E00               	movlw	0
  3096  001A9E  6E0B               	movwf	(___lwdiv@quotient+1)^0,c
  3097  001AA0  0E00               	movlw	0
  3098  001AA2  6E0A               	movwf	___lwdiv@quotient^0,c
  3099  001AA4  5008               	movf	___lwdiv@divisor^0,w,c
  3100  001AA6  1009               	iorwf	(___lwdiv@divisor+1)^0,w,c
  3101  001AA8  B4D8               	btfsc	status,2,c
  3102  001AAA  EF59  F00D         	goto	u1501
  3103  001AAE  EF5B  F00D         	goto	u1500
  3104  001AB2                     u1501:
  3105  001AB2  EF83  F00D         	goto	l753
  3106  001AB6                     u1500:
  3107  001AB6  0E01               	movlw	1
  3108  001AB8  6E0C               	movwf	___lwdiv@counter^0,c
  3109  001ABA  EF63  F00D         	goto	l1819
  3110  001ABE                     l1817:
  3111  001ABE  90D8               	bcf	status,0,c
  3112  001AC0  3608               	rlcf	___lwdiv@divisor^0,f,c
  3113  001AC2  3609               	rlcf	(___lwdiv@divisor+1)^0,f,c
  3114  001AC4  2A0C               	incf	___lwdiv@counter^0,f,c
  3115  001AC6                     l1819:
  3116  001AC6  AE09               	btfss	(___lwdiv@divisor+1)^0,7,c
  3117  001AC8  EF68  F00D         	goto	u1511
  3118  001ACC  EF6A  F00D         	goto	u1510
  3119  001AD0                     u1511:
  3120  001AD0  EF5F  F00D         	goto	l1817
  3121  001AD4                     u1510:
  3122  001AD4                     l1821:
  3123  001AD4  90D8               	bcf	status,0,c
  3124  001AD6  360A               	rlcf	___lwdiv@quotient^0,f,c
  3125  001AD8  360B               	rlcf	(___lwdiv@quotient+1)^0,f,c
  3126  001ADA  5008               	movf	___lwdiv@divisor^0,w,c
  3127  001ADC  5C06               	subwf	___lwdiv@dividend^0,w,c
  3128  001ADE  5009               	movf	(___lwdiv@divisor+1)^0,w,c
  3129  001AE0  5807               	subwfb	(___lwdiv@dividend+1)^0,w,c
  3130  001AE2  A0D8               	btfss	status,0,c
  3131  001AE4  EF76  F00D         	goto	u1521
  3132  001AE8  EF78  F00D         	goto	u1520
  3133  001AEC                     u1521:
  3134  001AEC  EF7D  F00D         	goto	l1829
  3135  001AF0                     u1520:
  3136  001AF0  5008               	movf	___lwdiv@divisor^0,w,c
  3137  001AF2  5E06               	subwf	___lwdiv@dividend^0,f,c
  3138  001AF4  5009               	movf	(___lwdiv@divisor+1)^0,w,c
  3139  001AF6  5A07               	subwfb	(___lwdiv@dividend+1)^0,f,c
  3140  001AF8  800A               	bsf	___lwdiv@quotient^0,0,c
  3141  001AFA                     l1829:
  3142  001AFA  90D8               	bcf	status,0,c
  3143  001AFC  3209               	rrcf	(___lwdiv@divisor+1)^0,f,c
  3144  001AFE  3208               	rrcf	___lwdiv@divisor^0,f,c
  3145  001B00  2E0C               	decfsz	___lwdiv@counter^0,f,c
  3146  001B02  EF6A  F00D         	goto	l1821
  3147  001B06                     l753:
  3148  001B06  C00A  F006         	movff	___lwdiv@quotient,?___lwdiv
  3149  001B0A  C00B  F007         	movff	___lwdiv@quotient+1,?___lwdiv+1
  3150  001B0E  0012               	return		;funcret
  3151  001B10                     __end_of___lwdiv:
  3152                           	callstack 0
  3153                           
  3154 ;; *************** function _adcRead *****************
  3155 ;; Defined at:
  3156 ;;		line 40 in file "adc.c"
  3157 ;; Parameters:    Size  Location     Type
  3158 ;;  channel         2    0[COMRAM] unsigned int 
  3159 ;; Auto vars:     Size  Location     Type
  3160 ;;  ADvalor         2    2[COMRAM] unsigned int 
  3161 ;; Return value:  Size  Location     Type
  3162 ;;                  2    0[COMRAM] int 
  3163 ;; Registers used:
  3164 ;;		wreg, status,2, status,0
  3165 ;; Tracked objects:
  3166 ;;		On entry : 0/0
  3167 ;;		On exit  : 0/0
  3168 ;;		Unchanged: 0/0
  3169 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3170 ;;      Params:         2       0       0       0       0       0       0
  3171 ;;      Locals:         2       0       0       0       0       0       0
  3172 ;;      Temps:          0       0       0       0       0       0       0
  3173 ;;      Totals:         4       0       0       0       0       0       0
  3174 ;;Total ram usage:        4 bytes
  3175 ;; Hardware stack levels used:    1
  3176 ;; This function calls:
  3177 ;;		Nothing
  3178 ;; This function is called by:
  3179 ;;		_celsius
  3180 ;;		_fahr
  3181 ;;		_kelvin
  3182 ;; This function uses a non-reentrant model
  3183 ;;
  3184                           
  3185                           	psect	text21
  3186  001C18                     __ptext21:
  3187                           	callstack 0
  3188  001C18                     _adcRead:
  3189                           	callstack 29
  3190  001C18                     
  3191                           ;adc.c: 41:     unsigned int ADvalor;;adc.c: 42:     ADCON0 &= 0b11000011;
  3192  001C18  0EC3               	movlw	195
  3193  001C1A  16C2               	andwf	194,f,c	;volatile
  3194                           
  3195                           ;adc.c: 43:     if (channel < 3) {
  3196  001C1C  5002               	movf	(adcRead@channel+1)^0,w,c
  3197  001C1E  E107               	bnz	u1591
  3198  001C20  0E03               	movlw	3
  3199  001C22  5C01               	subwf	adcRead@channel^0,w,c
  3200  001C24  B0D8               	btfsc	status,0,c
  3201  001C26  EF17  F00E         	goto	u1591
  3202  001C2A  EF19  F00E         	goto	u1590
  3203  001C2E                     u1591:
  3204  001C2E  EF1D  F00E         	goto	l1869
  3205  001C32                     u1590:
  3206  001C32                     
  3207                           ;adc.c: 44:         ADCON0 |= channel << 2;
  3208  001C32  4401               	rlncf	adcRead@channel^0,w,c	;volatile
  3209  001C34  46E8               	rlncf	wreg,f,c
  3210  001C36  0BFC               	andlw	252
  3211  001C38  12C2               	iorwf	194,f,c	;volatile
  3212  001C3A                     l1869:
  3213                           
  3214                           ;adc.c: 47:     ADCON0 |= 0b00000010;
  3215  001C3A  82C2               	bsf	194,1,c	;volatile
  3216  001C3C                     l256:
  3217  001C3C  B2C2               	btfsc	194,1,c	;volatile
  3218  001C3E  EF23  F00E         	goto	u1601
  3219  001C42  EF25  F00E         	goto	u1600
  3220  001C46                     u1601:
  3221  001C46  EF1E  F00E         	goto	l256
  3222  001C4A                     u1600:
  3223  001C4A                     
  3224                           ;adc.c: 51:     ADvalor = ADRESH;
  3225  001C4A  CFC4 F003          	movff	4036,adcRead@ADvalor	;volatile
  3226  001C4E  6A04               	clrf	(adcRead@ADvalor+1)^0,c
  3227  001C50                     
  3228                           ;adc.c: 52:     ADvalor <<= 8;
  3229  001C50  5003               	movf	adcRead@ADvalor^0,w,c
  3230  001C52  6E04               	movwf	(adcRead@ADvalor+1)^0,c
  3231  001C54  6A03               	clrf	adcRead@ADvalor^0,c
  3232  001C56                     
  3233                           ;adc.c: 53:     ADvalor += ADRESL;
  3234  001C56  50C3               	movf	195,w,c	;volatile
  3235  001C58  2603               	addwf	adcRead@ADvalor^0,f,c
  3236  001C5A  0E00               	movlw	0
  3237  001C5C  2204               	addwfc	(adcRead@ADvalor+1)^0,f,c
  3238  001C5E                     
  3239                           ;adc.c: 54:     return ADvalor;
  3240  001C5E  C003  F001         	movff	adcRead@ADvalor,?_adcRead
  3241  001C62  C004  F002         	movff	adcRead@ADvalor+1,?_adcRead+1
  3242  001C66  0012               	return		;funcret
  3243  001C68                     __end_of_adcRead:
  3244                           	callstack 0
  3245                           
  3246 ;; *************** function ___xxtofl *****************
  3247 ;; Defined at:
  3248 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\xxtofl.c"
  3249 ;; Parameters:    Size  Location     Type
  3250 ;;  sign            1    wreg     unsigned char 
  3251 ;;  val             4    4[COMRAM] long 
  3252 ;; Auto vars:     Size  Location     Type
  3253 ;;  sign            1   12[COMRAM] unsigned char 
  3254 ;;  arg             4   14[COMRAM] unsigned long 
  3255 ;;  exp             1   13[COMRAM] unsigned char 
  3256 ;; Return value:  Size  Location     Type
  3257 ;;                  4    4[COMRAM] unsigned char 
  3258 ;; Registers used:
  3259 ;;		wreg, status,2, status,0
  3260 ;; Tracked objects:
  3261 ;;		On entry : 0/0
  3262 ;;		On exit  : 0/0
  3263 ;;		Unchanged: 0/0
  3264 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3265 ;;      Params:         4       0       0       0       0       0       0
  3266 ;;      Locals:         6       0       0       0       0       0       0
  3267 ;;      Temps:          4       0       0       0       0       0       0
  3268 ;;      Totals:        14       0       0       0       0       0       0
  3269 ;;Total ram usage:       14 bytes
  3270 ;; Hardware stack levels used:    1
  3271 ;; This function calls:
  3272 ;;		Nothing
  3273 ;; This function is called by:
  3274 ;;		_celsius
  3275 ;;		_fahr
  3276 ;;		_kelvin
  3277 ;; This function uses a non-reentrant model
  3278 ;;
  3279                           
  3280                           	psect	text22
  3281  000F08                     __ptext22:
  3282                           	callstack 0
  3283  000F08                     ___xxtofl:
  3284                           	callstack 29
  3285                           
  3286                           ;incstack = 0
  3287                           ;___xxtofl@sign stored from wreg
  3288  000F08  6E0D               	movwf	___xxtofl@sign^0,c
  3289  000F0A  500D               	movf	___xxtofl@sign^0,w,c
  3290  000F0C  B4D8               	btfsc	status,2,c
  3291  000F0E  EF8B  F007         	goto	u2131
  3292  000F12  EF8D  F007         	goto	u2130
  3293  000F16                     u2131:
  3294  000F16  EFAF  F007         	goto	l917
  3295  000F1A                     u2130:
  3296  000F1A  BE08               	btfsc	(___xxtofl@val+3)^0,7,c
  3297  000F1C  EF94  F007         	goto	u2140
  3298  000F20  EF92  F007         	goto	u2141
  3299  000F24                     u2141:
  3300  000F24  EFAF  F007         	goto	l917
  3301  000F28                     u2140:
  3302  000F28  C005  F009         	movff	___xxtofl@val,??___xxtofl
  3303  000F2C  C006  F00A         	movff	___xxtofl@val+1,??___xxtofl+1
  3304  000F30  C007  F00B         	movff	___xxtofl@val+2,??___xxtofl+2
  3305  000F34  C008  F00C         	movff	___xxtofl@val+3,??___xxtofl+3
  3306  000F38  1E09               	comf	??___xxtofl^0,f,c
  3307  000F3A  1E0A               	comf	(??___xxtofl+1)^0,f,c
  3308  000F3C  1E0B               	comf	(??___xxtofl+2)^0,f,c
  3309  000F3E  1E0C               	comf	(??___xxtofl+3)^0,f,c
  3310  000F40  2A09               	incf	??___xxtofl^0,f,c
  3311  000F42  0E00               	movlw	0
  3312  000F44  220A               	addwfc	(??___xxtofl+1)^0,f,c
  3313  000F46  220B               	addwfc	(??___xxtofl+2)^0,f,c
  3314  000F48  220C               	addwfc	(??___xxtofl+3)^0,f,c
  3315  000F4A  C009  F00F         	movff	??___xxtofl,___xxtofl@arg
  3316  000F4E  C00A  F010         	movff	??___xxtofl+1,___xxtofl@arg+1
  3317  000F52  C00B  F011         	movff	??___xxtofl+2,___xxtofl@arg+2
  3318  000F56  C00C  F012         	movff	??___xxtofl+3,___xxtofl@arg+3
  3319  000F5A  EFB7  F007         	goto	l2155
  3320  000F5E                     l917:
  3321  000F5E  C005  F00F         	movff	___xxtofl@val,___xxtofl@arg
  3322  000F62  C006  F010         	movff	___xxtofl@val+1,___xxtofl@arg+1
  3323  000F66  C007  F011         	movff	___xxtofl@val+2,___xxtofl@arg+2
  3324  000F6A  C008  F012         	movff	___xxtofl@val+3,___xxtofl@arg+3
  3325  000F6E                     l2155:
  3326  000F6E  5005               	movf	___xxtofl@val^0,w,c
  3327  000F70  1006               	iorwf	(___xxtofl@val+1)^0,w,c
  3328  000F72  1007               	iorwf	(___xxtofl@val+2)^0,w,c
  3329  000F74  1008               	iorwf	(___xxtofl@val+3)^0,w,c
  3330  000F76  A4D8               	btfss	status,2,c
  3331  000F78  EFC0  F007         	goto	u2151
  3332  000F7C  EFC2  F007         	goto	u2150
  3333  000F80                     u2151:
  3334  000F80  EFCC  F007         	goto	l2161
  3335  000F84                     u2150:
  3336  000F84  0E00               	movlw	0
  3337  000F86  6E05               	movwf	?___xxtofl^0,c
  3338  000F88  0E00               	movlw	0
  3339  000F8A  6E06               	movwf	(?___xxtofl+1)^0,c
  3340  000F8C  0E00               	movlw	0
  3341  000F8E  6E07               	movwf	(?___xxtofl+2)^0,c
  3342  000F90  0E00               	movlw	0
  3343  000F92  6E08               	movwf	(?___xxtofl+3)^0,c
  3344  000F94  EF5D  F008         	goto	l920
  3345  000F98                     l2161:
  3346  000F98  0E96               	movlw	150
  3347  000F9A  6E0E               	movwf	___xxtofl@exp^0,c
  3348  000F9C  EFD6  F007         	goto	l2165
  3349  000FA0                     l2163:
  3350  000FA0  2A0E               	incf	___xxtofl@exp^0,f,c
  3351  000FA2  90D8               	bcf	status,0,c
  3352  000FA4  3212               	rrcf	(___xxtofl@arg+3)^0,f,c
  3353  000FA6  3211               	rrcf	(___xxtofl@arg+2)^0,f,c
  3354  000FA8  3210               	rrcf	(___xxtofl@arg+1)^0,f,c
  3355  000FAA  320F               	rrcf	___xxtofl@arg^0,f,c
  3356  000FAC                     l2165:
  3357  000FAC  0E00               	movlw	0
  3358  000FAE  140F               	andwf	___xxtofl@arg^0,w,c
  3359  000FB0  6E09               	movwf	??___xxtofl^0,c
  3360  000FB2  0E00               	movlw	0
  3361  000FB4  1410               	andwf	(___xxtofl@arg+1)^0,w,c
  3362  000FB6  6E0A               	movwf	(??___xxtofl+1)^0,c
  3363  000FB8  0E00               	movlw	0
  3364  000FBA  1411               	andwf	(___xxtofl@arg+2)^0,w,c
  3365  000FBC  6E0B               	movwf	(??___xxtofl+2)^0,c
  3366  000FBE  0EFE               	movlw	254
  3367  000FC0  1412               	andwf	(___xxtofl@arg+3)^0,w,c
  3368  000FC2  6E0C               	movwf	(??___xxtofl+3)^0,c
  3369  000FC4  5009               	movf	??___xxtofl^0,w,c
  3370  000FC6  100A               	iorwf	(??___xxtofl+1)^0,w,c
  3371  000FC8  100B               	iorwf	(??___xxtofl+2)^0,w,c
  3372  000FCA  100C               	iorwf	(??___xxtofl+3)^0,w,c
  3373  000FCC  A4D8               	btfss	status,2,c
  3374  000FCE  EFEB  F007         	goto	u2161
  3375  000FD2  EFED  F007         	goto	u2160
  3376  000FD6                     u2161:
  3377  000FD6  EFD0  F007         	goto	l2163
  3378  000FDA                     u2160:
  3379  000FDA  EFFB  F007         	goto	l924
  3380  000FDE                     l2167:
  3381  000FDE  2A0E               	incf	___xxtofl@exp^0,f,c
  3382  000FE0  0E01               	movlw	1
  3383  000FE2  260F               	addwf	___xxtofl@arg^0,f,c
  3384  000FE4  0E00               	movlw	0
  3385  000FE6  2210               	addwfc	(___xxtofl@arg+1)^0,f,c
  3386  000FE8  2211               	addwfc	(___xxtofl@arg+2)^0,f,c
  3387  000FEA  2212               	addwfc	(___xxtofl@arg+3)^0,f,c
  3388  000FEC  90D8               	bcf	status,0,c
  3389  000FEE  3212               	rrcf	(___xxtofl@arg+3)^0,f,c
  3390  000FF0  3211               	rrcf	(___xxtofl@arg+2)^0,f,c
  3391  000FF2  3210               	rrcf	(___xxtofl@arg+1)^0,f,c
  3392  000FF4  320F               	rrcf	___xxtofl@arg^0,f,c
  3393  000FF6                     l924:
  3394  000FF6  0E00               	movlw	0
  3395  000FF8  140F               	andwf	___xxtofl@arg^0,w,c
  3396  000FFA  6E09               	movwf	??___xxtofl^0,c
  3397  000FFC  0E00               	movlw	0
  3398  000FFE  1410               	andwf	(___xxtofl@arg+1)^0,w,c
  3399  001000  6E0A               	movwf	(??___xxtofl+1)^0,c
  3400  001002  0E00               	movlw	0
  3401  001004  1411               	andwf	(___xxtofl@arg+2)^0,w,c
  3402  001006  6E0B               	movwf	(??___xxtofl+2)^0,c
  3403  001008  0EFF               	movlw	255
  3404  00100A  1412               	andwf	(___xxtofl@arg+3)^0,w,c
  3405  00100C  6E0C               	movwf	(??___xxtofl+3)^0,c
  3406  00100E  5009               	movf	??___xxtofl^0,w,c
  3407  001010  100A               	iorwf	(??___xxtofl+1)^0,w,c
  3408  001012  100B               	iorwf	(??___xxtofl+2)^0,w,c
  3409  001014  100C               	iorwf	(??___xxtofl+3)^0,w,c
  3410  001016  A4D8               	btfss	status,2,c
  3411  001018  EF10  F008         	goto	u2171
  3412  00101C  EF12  F008         	goto	u2170
  3413  001020                     u2171:
  3414  001020  EFEF  F007         	goto	l2167
  3415  001024                     u2170:
  3416  001024  EF1A  F008         	goto	l2175
  3417  001028                     l2173:
  3418  001028  060E               	decf	___xxtofl@exp^0,f,c
  3419  00102A  90D8               	bcf	status,0,c
  3420  00102C  360F               	rlcf	___xxtofl@arg^0,f,c
  3421  00102E  3610               	rlcf	(___xxtofl@arg+1)^0,f,c
  3422  001030  3611               	rlcf	(___xxtofl@arg+2)^0,f,c
  3423  001032  3612               	rlcf	(___xxtofl@arg+3)^0,f,c
  3424  001034                     l2175:
  3425  001034  BE11               	btfsc	(___xxtofl@arg+2)^0,7,c
  3426  001036  EF1F  F008         	goto	u2181
  3427  00103A  EF21  F008         	goto	u2180
  3428  00103E                     u2181:
  3429  00103E  EF29  F008         	goto	l931
  3430  001042                     u2180:
  3431  001042  0E02               	movlw	2
  3432  001044  600E               	cpfslt	___xxtofl@exp^0,c
  3433  001046  EF27  F008         	goto	u2191
  3434  00104A  EF29  F008         	goto	u2190
  3435  00104E                     u2191:
  3436  00104E  EF14  F008         	goto	l2173
  3437  001052                     u2190:
  3438  001052                     l931:
  3439  001052  B00E               	btfsc	___xxtofl@exp^0,0,c
  3440  001054  EF2E  F008         	goto	u2201
  3441  001058  EF30  F008         	goto	u2200
  3442  00105C                     u2201:
  3443  00105C  EF31  F008         	goto	l2181
  3444  001060                     u2200:
  3445  001060  9E11               	bcf	(___xxtofl@arg+2)^0,7,c
  3446  001062                     l2181:
  3447  001062  90D8               	bcf	status,0,c
  3448  001064  320E               	rrcf	___xxtofl@exp^0,f,c
  3449  001066  C00E  F009         	movff	___xxtofl@exp,??___xxtofl
  3450  00106A  6A0A               	clrf	(??___xxtofl+1)^0,c
  3451  00106C  6A0B               	clrf	(??___xxtofl+2)^0,c
  3452  00106E  6A0C               	clrf	(??___xxtofl+3)^0,c
  3453  001070  C009  F00C         	movff	??___xxtofl,??___xxtofl+3
  3454  001074  6A0B               	clrf	(??___xxtofl+2)^0,c
  3455  001076  6A0A               	clrf	(??___xxtofl+1)^0,c
  3456  001078  6A09               	clrf	??___xxtofl^0,c
  3457  00107A  5009               	movf	??___xxtofl^0,w,c
  3458  00107C  120F               	iorwf	___xxtofl@arg^0,f,c
  3459  00107E  500A               	movf	(??___xxtofl+1)^0,w,c
  3460  001080  1210               	iorwf	(___xxtofl@arg+1)^0,f,c
  3461  001082  500B               	movf	(??___xxtofl+2)^0,w,c
  3462  001084  1211               	iorwf	(___xxtofl@arg+2)^0,f,c
  3463  001086  500C               	movf	(??___xxtofl+3)^0,w,c
  3464  001088  1212               	iorwf	(___xxtofl@arg+3)^0,f,c
  3465  00108A  500D               	movf	___xxtofl@sign^0,w,c
  3466  00108C  B4D8               	btfsc	status,2,c
  3467  00108E  EF4B  F008         	goto	u2211
  3468  001092  EF4D  F008         	goto	u2210
  3469  001096                     u2211:
  3470  001096  EF55  F008         	goto	l2191
  3471  00109A                     u2210:
  3472  00109A  BE08               	btfsc	(___xxtofl@val+3)^0,7,c
  3473  00109C  EF54  F008         	goto	u2220
  3474  0010A0  EF52  F008         	goto	u2221
  3475  0010A4                     u2221:
  3476  0010A4  EF55  F008         	goto	l2191
  3477  0010A8                     u2220:
  3478  0010A8  8E12               	bsf	(___xxtofl@arg+3)^0,7,c
  3479  0010AA                     l2191:
  3480  0010AA  C00F  F005         	movff	___xxtofl@arg,?___xxtofl
  3481  0010AE  C010  F006         	movff	___xxtofl@arg+1,?___xxtofl+1
  3482  0010B2  C011  F007         	movff	___xxtofl@arg+2,?___xxtofl+2
  3483  0010B6  C012  F008         	movff	___xxtofl@arg+3,?___xxtofl+3
  3484  0010BA                     l920:
  3485  0010BA  0012               	return		;funcret
  3486  0010BC                     __end_of___xxtofl:
  3487                           	callstack 0
  3488                           
  3489 ;; *************** function ___fltol *****************
  3490 ;; Defined at:
  3491 ;;		line 43 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\fltol.c"
  3492 ;; Parameters:    Size  Location     Type
  3493 ;;  f1              4   43[COMRAM] unsigned char 
  3494 ;; Auto vars:     Size  Location     Type
  3495 ;;  exp1            1   52[COMRAM] unsigned char 
  3496 ;;  sign1           1   51[COMRAM] unsigned char 
  3497 ;; Return value:  Size  Location     Type
  3498 ;;                  4   43[COMRAM] long 
  3499 ;; Registers used:
  3500 ;;		wreg, status,2, status,0
  3501 ;; Tracked objects:
  3502 ;;		On entry : 0/0
  3503 ;;		On exit  : 0/0
  3504 ;;		Unchanged: 0/0
  3505 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3506 ;;      Params:         4       0       0       0       0       0       0
  3507 ;;      Locals:         2       0       0       0       0       0       0
  3508 ;;      Temps:          4       0       0       0       0       0       0
  3509 ;;      Totals:        10       0       0       0       0       0       0
  3510 ;;Total ram usage:       10 bytes
  3511 ;; Hardware stack levels used:    1
  3512 ;; This function calls:
  3513 ;;		Nothing
  3514 ;; This function is called by:
  3515 ;;		_celsius
  3516 ;;		_fahr
  3517 ;;		_kelvin
  3518 ;; This function uses a non-reentrant model
  3519 ;;
  3520                           
  3521                           	psect	text23
  3522  0016D2                     __ptext23:
  3523                           	callstack 0
  3524  0016D2                     ___fltol:
  3525                           	callstack 29
  3526  0016D2  342E               	rlcf	(___fltol@f1+2)^0,w,c
  3527  0016D4  342F               	rlcf	(___fltol@f1+3)^0,w,c
  3528  0016D6  6E35               	movwf	___fltol@exp1^0,c
  3529  0016D8  5035               	movf	___fltol@exp1^0,w,c
  3530  0016DA  A4D8               	btfss	status,2,c
  3531  0016DC  EF72  F00B         	goto	u2061
  3532  0016E0  EF74  F00B         	goto	u2060
  3533  0016E4                     u2061:
  3534  0016E4  EF7E  F00B         	goto	l2111
  3535  0016E8                     u2060:
  3536  0016E8                     l2107:
  3537  0016E8  0E00               	movlw	0
  3538  0016EA  6E2C               	movwf	?___fltol^0,c
  3539  0016EC  0E00               	movlw	0
  3540  0016EE  6E2D               	movwf	(?___fltol+1)^0,c
  3541  0016F0  0E00               	movlw	0
  3542  0016F2  6E2E               	movwf	(?___fltol+2)^0,c
  3543  0016F4  0E00               	movlw	0
  3544  0016F6  6E2F               	movwf	(?___fltol+3)^0,c
  3545  0016F8  EFEB  F00B         	goto	l559
  3546  0016FC                     l2111:
  3547  0016FC  C02C  F030         	movff	___fltol@f1,??___fltol
  3548  001700  C02D  F031         	movff	___fltol@f1+1,??___fltol+1
  3549  001704  C02E  F032         	movff	___fltol@f1+2,??___fltol+2
  3550  001708  C02F  F033         	movff	___fltol@f1+3,??___fltol+3
  3551  00170C  0E20               	movlw	32
  3552  00170E  EF8E  F00B         	goto	u2070
  3553  001712                     u2075:
  3554  001712  90D8               	bcf	status,0,c
  3555  001714  3233               	rrcf	(??___fltol+3)^0,f,c
  3556  001716  3232               	rrcf	(??___fltol+2)^0,f,c
  3557  001718  3231               	rrcf	(??___fltol+1)^0,f,c
  3558  00171A  3230               	rrcf	??___fltol^0,f,c
  3559  00171C                     u2070:
  3560  00171C  2EE8               	decfsz	wreg,f,c
  3561  00171E  EF89  F00B         	goto	u2075
  3562  001722  5030               	movf	??___fltol^0,w,c
  3563  001724  6E34               	movwf	___fltol@sign1^0,c
  3564  001726  8E2E               	bsf	(___fltol@f1+2)^0,7,c
  3565  001728  0EFF               	movlw	255
  3566  00172A  162C               	andwf	___fltol@f1^0,f,c
  3567  00172C  0EFF               	movlw	255
  3568  00172E  162D               	andwf	(___fltol@f1+1)^0,f,c
  3569  001730  0EFF               	movlw	255
  3570  001732  162E               	andwf	(___fltol@f1+2)^0,f,c
  3571  001734  0E00               	movlw	0
  3572  001736  162F               	andwf	(___fltol@f1+3)^0,f,c
  3573  001738  0E96               	movlw	150
  3574  00173A  5E35               	subwf	___fltol@exp1^0,f,c
  3575  00173C  BE35               	btfsc	___fltol@exp1^0,7,c
  3576  00173E  EFA5  F00B         	goto	u2080
  3577  001742  EFA3  F00B         	goto	u2081
  3578  001746                     u2081:
  3579  001746  EFBB  F00B         	goto	l2131
  3580  00174A                     u2080:
  3581  00174A  5035               	movf	___fltol@exp1^0,w,c
  3582  00174C  0A80               	xorlw	128
  3583  00174E  0F97               	addlw	151
  3584  001750  B0D8               	btfsc	status,0,c
  3585  001752  EFAD  F00B         	goto	u2091
  3586  001756  EFAF  F00B         	goto	u2090
  3587  00175A                     u2091:
  3588  00175A  EFB1  F00B         	goto	l2127
  3589  00175E                     u2090:
  3590  00175E  EF74  F00B         	goto	l2107
  3591  001762                     l2127:
  3592  001762  90D8               	bcf	status,0,c
  3593  001764  322F               	rrcf	(___fltol@f1+3)^0,f,c
  3594  001766  322E               	rrcf	(___fltol@f1+2)^0,f,c
  3595  001768  322D               	rrcf	(___fltol@f1+1)^0,f,c
  3596  00176A  322C               	rrcf	___fltol@f1^0,f,c
  3597  00176C  3E35               	incfsz	___fltol@exp1^0,f,c
  3598  00176E  EFB1  F00B         	goto	l2127
  3599  001772  EFD3  F00B         	goto	l2141
  3600  001776                     l2131:
  3601  001776  0E1F               	movlw	31
  3602  001778  6435               	cpfsgt	___fltol@exp1^0,c
  3603  00177A  EFC1  F00B         	goto	u2101
  3604  00177E  EFC3  F00B         	goto	u2100
  3605  001782                     u2101:
  3606  001782  EFCB  F00B         	goto	l2139
  3607  001786                     u2100:
  3608  001786  EF74  F00B         	goto	l2107
  3609  00178A                     l2137:
  3610  00178A  90D8               	bcf	status,0,c
  3611  00178C  362C               	rlcf	___fltol@f1^0,f,c
  3612  00178E  362D               	rlcf	(___fltol@f1+1)^0,f,c
  3613  001790  362E               	rlcf	(___fltol@f1+2)^0,f,c
  3614  001792  362F               	rlcf	(___fltol@f1+3)^0,f,c
  3615  001794  0635               	decf	___fltol@exp1^0,f,c
  3616  001796                     l2139:
  3617  001796  5035               	movf	___fltol@exp1^0,w,c
  3618  001798  A4D8               	btfss	status,2,c
  3619  00179A  EFD1  F00B         	goto	u2111
  3620  00179E  EFD3  F00B         	goto	u2110
  3621  0017A2                     u2111:
  3622  0017A2  EFC5  F00B         	goto	l2137
  3623  0017A6                     u2110:
  3624  0017A6                     l2141:
  3625  0017A6  5034               	movf	___fltol@sign1^0,w,c
  3626  0017A8  B4D8               	btfsc	status,2,c
  3627  0017AA  EFD9  F00B         	goto	u2121
  3628  0017AE  EFDB  F00B         	goto	u2120
  3629  0017B2                     u2121:
  3630  0017B2  EFE3  F00B         	goto	l2145
  3631  0017B6                     u2120:
  3632  0017B6  1E2F               	comf	(___fltol@f1+3)^0,f,c
  3633  0017B8  1E2E               	comf	(___fltol@f1+2)^0,f,c
  3634  0017BA  1E2D               	comf	(___fltol@f1+1)^0,f,c
  3635  0017BC  6C2C               	negf	___fltol@f1^0,c
  3636  0017BE  0E00               	movlw	0
  3637  0017C0  222D               	addwfc	(___fltol@f1+1)^0,f,c
  3638  0017C2  222E               	addwfc	(___fltol@f1+2)^0,f,c
  3639  0017C4  222F               	addwfc	(___fltol@f1+3)^0,f,c
  3640  0017C6                     l2145:
  3641  0017C6  C02C  F02C         	movff	___fltol@f1,?___fltol
  3642  0017CA  C02D  F02D         	movff	___fltol@f1+1,?___fltol+1
  3643  0017CE  C02E  F02E         	movff	___fltol@f1+2,?___fltol+2
  3644  0017D2  C02F  F02F         	movff	___fltol@f1+3,?___fltol+3
  3645  0017D6                     l559:
  3646  0017D6  0012               	return		;funcret
  3647  0017D8                     __end_of___fltol:
  3648                           	callstack 0
  3649                           
  3650 ;; *************** function ___flmul *****************
  3651 ;; Defined at:
  3652 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\sprcmul.c"
  3653 ;; Parameters:    Size  Location     Type
  3654 ;;  b               4   18[COMRAM] long 
  3655 ;;  a               4   22[COMRAM] long 
  3656 ;; Auto vars:     Size  Location     Type
  3657 ;;  prod            4   37[COMRAM] struct .
  3658 ;;  grs             4   31[COMRAM] unsigned long 
  3659 ;;  temp            2   41[COMRAM] struct .
  3660 ;;  bexp            1   36[COMRAM] unsigned char 
  3661 ;;  aexp            1   35[COMRAM] unsigned char 
  3662 ;;  sign            1   30[COMRAM] unsigned char 
  3663 ;; Return value:  Size  Location     Type
  3664 ;;                  4   18[COMRAM] unsigned char 
  3665 ;; Registers used:
  3666 ;;		wreg, status,2, status,0, prodl, prodh
  3667 ;; Tracked objects:
  3668 ;;		On entry : 0/0
  3669 ;;		On exit  : 0/0
  3670 ;;		Unchanged: 0/0
  3671 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3672 ;;      Params:         8       0       0       0       0       0       0
  3673 ;;      Locals:        13       0       0       0       0       0       0
  3674 ;;      Temps:          4       0       0       0       0       0       0
  3675 ;;      Totals:        25       0       0       0       0       0       0
  3676 ;;Total ram usage:       25 bytes
  3677 ;; Hardware stack levels used:    1
  3678 ;; This function calls:
  3679 ;;		Nothing
  3680 ;; This function is called by:
  3681 ;;		_celsius
  3682 ;;		_fahr
  3683 ;;		_kelvin
  3684 ;; This function uses a non-reentrant model
  3685 ;;
  3686                           
  3687                           	psect	text24
  3688  000642                     __ptext24:
  3689                           	callstack 0
  3690  000642                     ___flmul:
  3691                           	callstack 29
  3692  000642  5016               	movf	(___flmul@b+3)^0,w,c
  3693  000644  0B80               	andlw	128
  3694  000646  6E1F               	movwf	___flmul@sign^0,c
  3695  000648  5016               	movf	(___flmul@b+3)^0,w,c
  3696  00064A  2416               	addwf	(___flmul@b+3)^0,w,c
  3697  00064C  6E25               	movwf	___flmul@bexp^0,c
  3698  00064E  AE15               	btfss	(___flmul@b+2)^0,7,c
  3699  000650  EF2C  F003         	goto	u1811
  3700  000654  EF2E  F003         	goto	u1810
  3701  000658                     u1811:
  3702  000658  EF2F  F003         	goto	l1937
  3703  00065C                     u1810:
  3704  00065C  8025               	bsf	___flmul@bexp^0,0,c
  3705  00065E                     l1937:
  3706  00065E  5025               	movf	___flmul@bexp^0,w,c
  3707  000660  B4D8               	btfsc	status,2,c
  3708  000662  EF35  F003         	goto	u1821
  3709  000666  EF37  F003         	goto	u1820
  3710  00066A                     u1821:
  3711  00066A  EF4A  F003         	goto	l1945
  3712  00066E                     u1820:
  3713  00066E  2825               	incf	___flmul@bexp^0,w,c
  3714  000670  A4D8               	btfss	status,2,c
  3715  000672  EF3D  F003         	goto	u1831
  3716  000676  EF3F  F003         	goto	u1830
  3717  00067A                     u1831:
  3718  00067A  EF47  F003         	goto	l1943
  3719  00067E                     u1830:
  3720  00067E  0E00               	movlw	0
  3721  000680  6E13               	movwf	___flmul@b^0,c
  3722  000682  0E00               	movlw	0
  3723  000684  6E14               	movwf	(___flmul@b+1)^0,c
  3724  000686  0E00               	movlw	0
  3725  000688  6E15               	movwf	(___flmul@b+2)^0,c
  3726  00068A  0E00               	movlw	0
  3727  00068C  6E16               	movwf	(___flmul@b+3)^0,c
  3728  00068E                     l1943:
  3729  00068E  8E15               	bsf	(___flmul@b+2)^0,7,c
  3730  000690  EF52  F003         	goto	l1947
  3731  000694                     l1945:
  3732  000694  0E00               	movlw	0
  3733  000696  6E13               	movwf	___flmul@b^0,c
  3734  000698  0E00               	movlw	0
  3735  00069A  6E14               	movwf	(___flmul@b+1)^0,c
  3736  00069C  0E00               	movlw	0
  3737  00069E  6E15               	movwf	(___flmul@b+2)^0,c
  3738  0006A0  0E00               	movlw	0
  3739  0006A2  6E16               	movwf	(___flmul@b+3)^0,c
  3740  0006A4                     l1947:
  3741  0006A4  501A               	movf	(___flmul@a+3)^0,w,c
  3742  0006A6  0B80               	andlw	128
  3743  0006A8  1A1F               	xorwf	___flmul@sign^0,f,c
  3744  0006AA  501A               	movf	(___flmul@a+3)^0,w,c
  3745  0006AC  241A               	addwf	(___flmul@a+3)^0,w,c
  3746  0006AE  6E24               	movwf	___flmul@aexp^0,c
  3747  0006B0  AE19               	btfss	(___flmul@a+2)^0,7,c
  3748  0006B2  EF5D  F003         	goto	u1841
  3749  0006B6  EF5F  F003         	goto	u1840
  3750  0006BA                     u1841:
  3751  0006BA  EF60  F003         	goto	l1955
  3752  0006BE                     u1840:
  3753  0006BE  8024               	bsf	___flmul@aexp^0,0,c
  3754  0006C0                     l1955:
  3755  0006C0  5024               	movf	___flmul@aexp^0,w,c
  3756  0006C2  B4D8               	btfsc	status,2,c
  3757  0006C4  EF66  F003         	goto	u1851
  3758  0006C8  EF68  F003         	goto	u1850
  3759  0006CC                     u1851:
  3760  0006CC  EF7B  F003         	goto	l1963
  3761  0006D0                     u1850:
  3762  0006D0  2824               	incf	___flmul@aexp^0,w,c
  3763  0006D2  A4D8               	btfss	status,2,c
  3764  0006D4  EF6E  F003         	goto	u1861
  3765  0006D8  EF70  F003         	goto	u1860
  3766  0006DC                     u1861:
  3767  0006DC  EF78  F003         	goto	l1961
  3768  0006E0                     u1860:
  3769  0006E0  0E00               	movlw	0
  3770  0006E2  6E17               	movwf	___flmul@a^0,c
  3771  0006E4  0E00               	movlw	0
  3772  0006E6  6E18               	movwf	(___flmul@a+1)^0,c
  3773  0006E8  0E00               	movlw	0
  3774  0006EA  6E19               	movwf	(___flmul@a+2)^0,c
  3775  0006EC  0E00               	movlw	0
  3776  0006EE  6E1A               	movwf	(___flmul@a+3)^0,c
  3777  0006F0                     l1961:
  3778  0006F0  8E19               	bsf	(___flmul@a+2)^0,7,c
  3779  0006F2  EF83  F003         	goto	l876
  3780  0006F6                     l1963:
  3781  0006F6  0E00               	movlw	0
  3782  0006F8  6E17               	movwf	___flmul@a^0,c
  3783  0006FA  0E00               	movlw	0
  3784  0006FC  6E18               	movwf	(___flmul@a+1)^0,c
  3785  0006FE  0E00               	movlw	0
  3786  000700  6E19               	movwf	(___flmul@a+2)^0,c
  3787  000702  0E00               	movlw	0
  3788  000704  6E1A               	movwf	(___flmul@a+3)^0,c
  3789  000706                     l876:
  3790  000706  5024               	movf	___flmul@aexp^0,w,c
  3791  000708  B4D8               	btfsc	status,2,c
  3792  00070A  EF89  F003         	goto	u1871
  3793  00070E  EF8B  F003         	goto	u1870
  3794  000712                     u1871:
  3795  000712  EF93  F003         	goto	l1967
  3796  000716                     u1870:
  3797  000716  5025               	movf	___flmul@bexp^0,w,c
  3798  000718  A4D8               	btfss	status,2,c
  3799  00071A  EF91  F003         	goto	u1881
  3800  00071E  EF93  F003         	goto	u1880
  3801  000722                     u1881:
  3802  000722  EF9D  F003         	goto	l1971
  3803  000726                     u1880:
  3804  000726                     l1967:
  3805  000726  0E00               	movlw	0
  3806  000728  6E13               	movwf	?___flmul^0,c
  3807  00072A  0E00               	movlw	0
  3808  00072C  6E14               	movwf	(?___flmul+1)^0,c
  3809  00072E  0E00               	movlw	0
  3810  000730  6E15               	movwf	(?___flmul+2)^0,c
  3811  000732  0E00               	movlw	0
  3812  000734  6E16               	movwf	(?___flmul+3)^0,c
  3813  000736  EF35  F005         	goto	l880
  3814  00073A                     l1971:
  3815  00073A  5019               	movf	(___flmul@a+2)^0,w,c
  3816  00073C  0213               	mulwf	___flmul@b^0,c
  3817  00073E  CFF3 F02A          	movff	prodl,___flmul@temp
  3818  000742  CFF4 F02B          	movff	prodh,___flmul@temp+1
  3819  000746  502A               	movf	___flmul@temp^0,w,c
  3820  000748  6E20               	movwf	___flmul@grs^0,c
  3821  00074A  6A21               	clrf	(___flmul@grs+1)^0,c
  3822  00074C  6A22               	clrf	(___flmul@grs+2)^0,c
  3823  00074E  6A23               	clrf	(___flmul@grs+3)^0,c
  3824  000750  502B               	movf	(___flmul@temp+1)^0,w,c
  3825  000752  6E26               	movwf	___flmul@prod^0,c
  3826  000754  6A27               	clrf	(___flmul@prod+1)^0,c
  3827  000756  6A28               	clrf	(___flmul@prod+2)^0,c
  3828  000758  6A29               	clrf	(___flmul@prod+3)^0,c
  3829  00075A  5018               	movf	(___flmul@a+1)^0,w,c
  3830  00075C  0214               	mulwf	(___flmul@b+1)^0,c
  3831  00075E  CFF3 F02A          	movff	prodl,___flmul@temp
  3832  000762  CFF4 F02B          	movff	prodh,___flmul@temp+1
  3833  000766  502A               	movf	___flmul@temp^0,w,c
  3834  000768  2620               	addwf	___flmul@grs^0,f,c
  3835  00076A  0E00               	movlw	0
  3836  00076C  2221               	addwfc	(___flmul@grs+1)^0,f,c
  3837  00076E  2222               	addwfc	(___flmul@grs+2)^0,f,c
  3838  000770  2223               	addwfc	(___flmul@grs+3)^0,f,c
  3839  000772  502B               	movf	(___flmul@temp+1)^0,w,c
  3840  000774  2626               	addwf	___flmul@prod^0,f,c
  3841  000776  0E00               	movlw	0
  3842  000778  2227               	addwfc	(___flmul@prod+1)^0,f,c
  3843  00077A  2228               	addwfc	(___flmul@prod+2)^0,f,c
  3844  00077C  2229               	addwfc	(___flmul@prod+3)^0,f,c
  3845  00077E  5017               	movf	___flmul@a^0,w,c
  3846  000780  0215               	mulwf	(___flmul@b+2)^0,c
  3847  000782  CFF3 F02A          	movff	prodl,___flmul@temp
  3848  000786  CFF4 F02B          	movff	prodh,___flmul@temp+1
  3849  00078A  502A               	movf	___flmul@temp^0,w,c
  3850  00078C  2620               	addwf	___flmul@grs^0,f,c
  3851  00078E  0E00               	movlw	0
  3852  000790  2221               	addwfc	(___flmul@grs+1)^0,f,c
  3853  000792  2222               	addwfc	(___flmul@grs+2)^0,f,c
  3854  000794  2223               	addwfc	(___flmul@grs+3)^0,f,c
  3855  000796  502B               	movf	(___flmul@temp+1)^0,w,c
  3856  000798  2626               	addwf	___flmul@prod^0,f,c
  3857  00079A  0E00               	movlw	0
  3858  00079C  2227               	addwfc	(___flmul@prod+1)^0,f,c
  3859  00079E  2228               	addwfc	(___flmul@prod+2)^0,f,c
  3860  0007A0  2229               	addwfc	(___flmul@prod+3)^0,f,c
  3861  0007A2  C022  F023         	movff	___flmul@grs+2,___flmul@grs+3
  3862  0007A6  C021  F022         	movff	___flmul@grs+1,___flmul@grs+2
  3863  0007AA  C020  F021         	movff	___flmul@grs,___flmul@grs+1
  3864  0007AE  6A20               	clrf	___flmul@grs^0,c
  3865  0007B0  5017               	movf	___flmul@a^0,w,c
  3866  0007B2  0214               	mulwf	(___flmul@b+1)^0,c
  3867  0007B4  CFF3 F02A          	movff	prodl,___flmul@temp
  3868  0007B8  CFF4 F02B          	movff	prodh,___flmul@temp+1
  3869  0007BC  502A               	movf	___flmul@temp^0,w,c
  3870  0007BE  2620               	addwf	___flmul@grs^0,f,c
  3871  0007C0  502B               	movf	(___flmul@temp+1)^0,w,c
  3872  0007C2  2221               	addwfc	(___flmul@grs+1)^0,f,c
  3873  0007C4  0E00               	movlw	0
  3874  0007C6  2222               	addwfc	(___flmul@grs+2)^0,f,c
  3875  0007C8  0E00               	movlw	0
  3876  0007CA  2223               	addwfc	(___flmul@grs+3)^0,f,c
  3877  0007CC  5018               	movf	(___flmul@a+1)^0,w,c
  3878  0007CE  0213               	mulwf	___flmul@b^0,c
  3879  0007D0  CFF3 F02A          	movff	prodl,___flmul@temp
  3880  0007D4  CFF4 F02B          	movff	prodh,___flmul@temp+1
  3881  0007D8  502A               	movf	___flmul@temp^0,w,c
  3882  0007DA  2620               	addwf	___flmul@grs^0,f,c
  3883  0007DC  502B               	movf	(___flmul@temp+1)^0,w,c
  3884  0007DE  2221               	addwfc	(___flmul@grs+1)^0,f,c
  3885  0007E0  0E00               	movlw	0
  3886  0007E2  2222               	addwfc	(___flmul@grs+2)^0,f,c
  3887  0007E4  0E00               	movlw	0
  3888  0007E6  2223               	addwfc	(___flmul@grs+3)^0,f,c
  3889  0007E8  C022  F023         	movff	___flmul@grs+2,___flmul@grs+3
  3890  0007EC  C021  F022         	movff	___flmul@grs+1,___flmul@grs+2
  3891  0007F0  C020  F021         	movff	___flmul@grs,___flmul@grs+1
  3892  0007F4  6A20               	clrf	___flmul@grs^0,c
  3893  0007F6  5017               	movf	___flmul@a^0,w,c
  3894  0007F8  0213               	mulwf	___flmul@b^0,c
  3895  0007FA  CFF3 F02A          	movff	prodl,___flmul@temp
  3896  0007FE  CFF4 F02B          	movff	prodh,___flmul@temp+1
  3897  000802  502A               	movf	___flmul@temp^0,w,c
  3898  000804  2620               	addwf	___flmul@grs^0,f,c
  3899  000806  502B               	movf	(___flmul@temp+1)^0,w,c
  3900  000808  2221               	addwfc	(___flmul@grs+1)^0,f,c
  3901  00080A  0E00               	movlw	0
  3902  00080C  2222               	addwfc	(___flmul@grs+2)^0,f,c
  3903  00080E  0E00               	movlw	0
  3904  000810  2223               	addwfc	(___flmul@grs+3)^0,f,c
  3905  000812  5019               	movf	(___flmul@a+2)^0,w,c
  3906  000814  0214               	mulwf	(___flmul@b+1)^0,c
  3907  000816  CFF3 F02A          	movff	prodl,___flmul@temp
  3908  00081A  CFF4 F02B          	movff	prodh,___flmul@temp+1
  3909  00081E  502A               	movf	___flmul@temp^0,w,c
  3910  000820  2626               	addwf	___flmul@prod^0,f,c
  3911  000822  502B               	movf	(___flmul@temp+1)^0,w,c
  3912  000824  2227               	addwfc	(___flmul@prod+1)^0,f,c
  3913  000826  0E00               	movlw	0
  3914  000828  2228               	addwfc	(___flmul@prod+2)^0,f,c
  3915  00082A  0E00               	movlw	0
  3916  00082C  2229               	addwfc	(___flmul@prod+3)^0,f,c
  3917  00082E  5018               	movf	(___flmul@a+1)^0,w,c
  3918  000830  0215               	mulwf	(___flmul@b+2)^0,c
  3919  000832  CFF3 F02A          	movff	prodl,___flmul@temp
  3920  000836  CFF4 F02B          	movff	prodh,___flmul@temp+1
  3921  00083A  502A               	movf	___flmul@temp^0,w,c
  3922  00083C  2626               	addwf	___flmul@prod^0,f,c
  3923  00083E  502B               	movf	(___flmul@temp+1)^0,w,c
  3924  000840  2227               	addwfc	(___flmul@prod+1)^0,f,c
  3925  000842  0E00               	movlw	0
  3926  000844  2228               	addwfc	(___flmul@prod+2)^0,f,c
  3927  000846  0E00               	movlw	0
  3928  000848  2229               	addwfc	(___flmul@prod+3)^0,f,c
  3929  00084A  5019               	movf	(___flmul@a+2)^0,w,c
  3930  00084C  0215               	mulwf	(___flmul@b+2)^0,c
  3931  00084E  CFF3 F02A          	movff	prodl,___flmul@temp
  3932  000852  CFF4 F02B          	movff	prodh,___flmul@temp+1
  3933  000856  502A               	movf	___flmul@temp^0,w,c
  3934  000858  6E1B               	movwf	??___flmul^0,c
  3935  00085A  502B               	movf	(___flmul@temp+1)^0,w,c
  3936  00085C  6E1C               	movwf	(??___flmul+1)^0,c
  3937  00085E  6A1D               	clrf	(??___flmul+2)^0,c
  3938  000860  6A1E               	clrf	(??___flmul+3)^0,c
  3939  000862  C01D  F01E         	movff	??___flmul+2,??___flmul+3
  3940  000866  C01C  F01D         	movff	??___flmul+1,??___flmul+2
  3941  00086A  C01B  F01C         	movff	??___flmul,??___flmul+1
  3942  00086E  6A1B               	clrf	??___flmul^0,c
  3943  000870  501B               	movf	??___flmul^0,w,c
  3944  000872  2626               	addwf	___flmul@prod^0,f,c
  3945  000874  501C               	movf	(??___flmul+1)^0,w,c
  3946  000876  2227               	addwfc	(___flmul@prod+1)^0,f,c
  3947  000878  501D               	movf	(??___flmul+2)^0,w,c
  3948  00087A  2228               	addwfc	(___flmul@prod+2)^0,f,c
  3949  00087C  501E               	movf	(??___flmul+3)^0,w,c
  3950  00087E  2229               	addwfc	(___flmul@prod+3)^0,f,c
  3951  000880  C020  F01B         	movff	___flmul@grs,??___flmul
  3952  000884  C021  F01C         	movff	___flmul@grs+1,??___flmul+1
  3953  000888  C022  F01D         	movff	___flmul@grs+2,??___flmul+2
  3954  00088C  C023  F01E         	movff	___flmul@grs+3,??___flmul+3
  3955  000890  0E19               	movlw	25
  3956  000892  EF50  F004         	goto	u1890
  3957  000896                     u1895:
  3958  000896  90D8               	bcf	status,0,c
  3959  000898  321E               	rrcf	(??___flmul+3)^0,f,c
  3960  00089A  321D               	rrcf	(??___flmul+2)^0,f,c
  3961  00089C  321C               	rrcf	(??___flmul+1)^0,f,c
  3962  00089E  321B               	rrcf	??___flmul^0,f,c
  3963  0008A0                     u1890:
  3964  0008A0  2EE8               	decfsz	wreg,f,c
  3965  0008A2  EF4B  F004         	goto	u1895
  3966  0008A6  501B               	movf	??___flmul^0,w,c
  3967  0008A8  2626               	addwf	___flmul@prod^0,f,c
  3968  0008AA  501C               	movf	(??___flmul+1)^0,w,c
  3969  0008AC  2227               	addwfc	(___flmul@prod+1)^0,f,c
  3970  0008AE  501D               	movf	(??___flmul+2)^0,w,c
  3971  0008B0  2228               	addwfc	(___flmul@prod+2)^0,f,c
  3972  0008B2  501E               	movf	(??___flmul+3)^0,w,c
  3973  0008B4  2229               	addwfc	(___flmul@prod+3)^0,f,c
  3974  0008B6  C022  F023         	movff	___flmul@grs+2,___flmul@grs+3
  3975  0008BA  C021  F022         	movff	___flmul@grs+1,___flmul@grs+2
  3976  0008BE  C020  F021         	movff	___flmul@grs,___flmul@grs+1
  3977  0008C2  6A20               	clrf	___flmul@grs^0,c
  3978  0008C4  5024               	movf	___flmul@aexp^0,w,c
  3979  0008C6  C025  F01B         	movff	___flmul@bexp,??___flmul
  3980  0008CA  6A1C               	clrf	(??___flmul+1)^0,c
  3981  0008CC  261B               	addwf	??___flmul^0,f,c
  3982  0008CE  0E00               	movlw	0
  3983  0008D0  221C               	addwfc	(??___flmul+1)^0,f,c
  3984  0008D2  0E82               	movlw	130
  3985  0008D4  241B               	addwf	??___flmul^0,w,c
  3986  0008D6  6E2A               	movwf	___flmul@temp^0,c
  3987  0008D8  0EFF               	movlw	255
  3988  0008DA  201C               	addwfc	(??___flmul+1)^0,w,c
  3989  0008DC  6E2B               	movwf	(___flmul@temp+1)^0,c
  3990  0008DE  EF86  F004         	goto	l2019
  3991  0008E2                     l2013:
  3992  0008E2  90D8               	bcf	status,0,c
  3993  0008E4  3626               	rlcf	___flmul@prod^0,f,c
  3994  0008E6  3627               	rlcf	(___flmul@prod+1)^0,f,c
  3995  0008E8  3628               	rlcf	(___flmul@prod+2)^0,f,c
  3996  0008EA  3629               	rlcf	(___flmul@prod+3)^0,f,c
  3997  0008EC  AE23               	btfss	(___flmul@grs+3)^0,7,c
  3998  0008EE  EF7B  F004         	goto	u1901
  3999  0008F2  EF7D  F004         	goto	u1900
  4000  0008F6                     u1901:
  4001  0008F6  EF7E  F004         	goto	l883
  4002  0008FA                     u1900:
  4003  0008FA  8026               	bsf	___flmul@prod^0,0,c
  4004  0008FC                     l883:
  4005  0008FC  90D8               	bcf	status,0,c
  4006  0008FE  3620               	rlcf	___flmul@grs^0,f,c
  4007  000900  3621               	rlcf	(___flmul@grs+1)^0,f,c
  4008  000902  3622               	rlcf	(___flmul@grs+2)^0,f,c
  4009  000904  3623               	rlcf	(___flmul@grs+3)^0,f,c
  4010  000906  062A               	decf	___flmul@temp^0,f,c
  4011  000908  A0D8               	btfss	status,0,c
  4012  00090A  062B               	decf	(___flmul@temp+1)^0,f,c
  4013  00090C                     l2019:
  4014  00090C  AE28               	btfss	(___flmul@prod+2)^0,7,c
  4015  00090E  EF8B  F004         	goto	u1911
  4016  000912  EF8D  F004         	goto	u1910
  4017  000916                     u1911:
  4018  000916  EF71  F004         	goto	l2013
  4019  00091A                     u1910:
  4020  00091A  0E00               	movlw	0
  4021  00091C  6E24               	movwf	___flmul@aexp^0,c
  4022  00091E  AE23               	btfss	(___flmul@grs+3)^0,7,c
  4023  000920  EF94  F004         	goto	u1921
  4024  000924  EF96  F004         	goto	u1920
  4025  000928                     u1921:
  4026  000928  EFBA  F004         	goto	l885
  4027  00092C                     u1920:
  4028  00092C  0EFF               	movlw	255
  4029  00092E  1420               	andwf	___flmul@grs^0,w,c
  4030  000930  6E1B               	movwf	??___flmul^0,c
  4031  000932  0EFF               	movlw	255
  4032  000934  1421               	andwf	(___flmul@grs+1)^0,w,c
  4033  000936  6E1C               	movwf	(??___flmul+1)^0,c
  4034  000938  0EFF               	movlw	255
  4035  00093A  1422               	andwf	(___flmul@grs+2)^0,w,c
  4036  00093C  6E1D               	movwf	(??___flmul+2)^0,c
  4037  00093E  0E7F               	movlw	127
  4038  000940  1423               	andwf	(___flmul@grs+3)^0,w,c
  4039  000942  6E1E               	movwf	(??___flmul+3)^0,c
  4040  000944  501B               	movf	??___flmul^0,w,c
  4041  000946  101C               	iorwf	(??___flmul+1)^0,w,c
  4042  000948  101D               	iorwf	(??___flmul+2)^0,w,c
  4043  00094A  101E               	iorwf	(??___flmul+3)^0,w,c
  4044  00094C  B4D8               	btfsc	status,2,c
  4045  00094E  EFAB  F004         	goto	u1931
  4046  000952  EFAD  F004         	goto	u1930
  4047  000956                     u1931:
  4048  000956  EFB1  F004         	goto	l886
  4049  00095A                     u1930:
  4050  00095A                     l2027:
  4051  00095A  0E01               	movlw	1
  4052  00095C  6E24               	movwf	___flmul@aexp^0,c
  4053  00095E  EFBA  F004         	goto	l885
  4054  000962                     l886:
  4055  000962  A026               	btfss	___flmul@prod^0,0,c
  4056  000964  EFB6  F004         	goto	u1941
  4057  000968  EFB8  F004         	goto	u1940
  4058  00096C                     u1941:
  4059  00096C  EFBA  F004         	goto	l885
  4060  000970                     u1940:
  4061  000970  EFAD  F004         	goto	l2027
  4062  000974                     l885:
  4063  000974  5024               	movf	___flmul@aexp^0,w,c
  4064  000976  B4D8               	btfsc	status,2,c
  4065  000978  EFC0  F004         	goto	u1951
  4066  00097C  EFC2  F004         	goto	u1950
  4067  000980                     u1951:
  4068  000980  EFE6  F004         	goto	l2039
  4069  000984                     u1950:
  4070  000984  0E01               	movlw	1
  4071  000986  2626               	addwf	___flmul@prod^0,f,c
  4072  000988  0E00               	movlw	0
  4073  00098A  2227               	addwfc	(___flmul@prod+1)^0,f,c
  4074  00098C  2228               	addwfc	(___flmul@prod+2)^0,f,c
  4075  00098E  2229               	addwfc	(___flmul@prod+3)^0,f,c
  4076  000990  A029               	btfss	(___flmul@prod+3)^0,0,c
  4077  000992  EFCD  F004         	goto	u1961
  4078  000996  EFCF  F004         	goto	u1960
  4079  00099A                     u1961:
  4080  00099A  EFE6  F004         	goto	l2039
  4081  00099E                     u1960:
  4082  00099E  C026  F01B         	movff	___flmul@prod,??___flmul
  4083  0009A2  C027  F01C         	movff	___flmul@prod+1,??___flmul+1
  4084  0009A6  C028  F01D         	movff	___flmul@prod+2,??___flmul+2
  4085  0009AA  C029  F01E         	movff	___flmul@prod+3,??___flmul+3
  4086  0009AE  341E               	rlcf	(??___flmul+3)^0,w,c
  4087  0009B0  321E               	rrcf	(??___flmul+3)^0,f,c
  4088  0009B2  321D               	rrcf	(??___flmul+2)^0,f,c
  4089  0009B4  321C               	rrcf	(??___flmul+1)^0,f,c
  4090  0009B6  321B               	rrcf	??___flmul^0,f,c
  4091  0009B8  C01B  F026         	movff	??___flmul,___flmul@prod
  4092  0009BC  C01C  F027         	movff	??___flmul+1,___flmul@prod+1
  4093  0009C0  C01D  F028         	movff	??___flmul+2,___flmul@prod+2
  4094  0009C4  C01E  F029         	movff	??___flmul+3,___flmul@prod+3
  4095  0009C8  4A2A               	infsnz	___flmul@temp^0,f,c
  4096  0009CA  2A2B               	incf	(___flmul@temp+1)^0,f,c
  4097  0009CC                     l2039:
  4098  0009CC  BE2B               	btfsc	(___flmul@temp+1)^0,7,c
  4099  0009CE  EFF1  F004         	goto	u1971
  4100  0009D2  502B               	movf	(___flmul@temp+1)^0,w,c
  4101  0009D4  E108               	bnz	u1970
  4102  0009D6  282A               	incf	___flmul@temp^0,w,c
  4103  0009D8  A0D8               	btfss	status,0,c
  4104  0009DA  EFF1  F004         	goto	u1971
  4105  0009DE  EFF3  F004         	goto	u1970
  4106  0009E2                     u1971:
  4107  0009E2  EFFD  F004         	goto	l2043
  4108  0009E6                     u1970:
  4109  0009E6  0E00               	movlw	0
  4110  0009E8  6E26               	movwf	___flmul@prod^0,c
  4111  0009EA  0E00               	movlw	0
  4112  0009EC  6E27               	movwf	(___flmul@prod+1)^0,c
  4113  0009EE  0E80               	movlw	128
  4114  0009F0  6E28               	movwf	(___flmul@prod+2)^0,c
  4115  0009F2  0E7F               	movlw	127
  4116  0009F4  6E29               	movwf	(___flmul@prod+3)^0,c
  4117  0009F6  EF2B  F005         	goto	l2055
  4118  0009FA                     l2043:
  4119  0009FA  BE2B               	btfsc	(___flmul@temp+1)^0,7,c
  4120  0009FC  EF0A  F005         	goto	u1980
  4121  000A00  502B               	movf	(___flmul@temp+1)^0,w,c
  4122  000A02  E106               	bnz	u1981
  4123  000A04  042A               	decf	___flmul@temp^0,w,c
  4124  000A06  B0D8               	btfsc	status,0,c
  4125  000A08  EF08  F005         	goto	u1981
  4126  000A0C  EF0A  F005         	goto	u1980
  4127  000A10                     u1981:
  4128  000A10  EF16  F005         	goto	l893
  4129  000A14                     u1980:
  4130  000A14  0E00               	movlw	0
  4131  000A16  6E26               	movwf	___flmul@prod^0,c
  4132  000A18  0E00               	movlw	0
  4133  000A1A  6E27               	movwf	(___flmul@prod+1)^0,c
  4134  000A1C  0E00               	movlw	0
  4135  000A1E  6E28               	movwf	(___flmul@prod+2)^0,c
  4136  000A20  0E00               	movlw	0
  4137  000A22  6E29               	movwf	(___flmul@prod+3)^0,c
  4138  000A24  0E00               	movlw	0
  4139  000A26  6E1F               	movwf	___flmul@sign^0,c
  4140  000A28  EF2B  F005         	goto	l2055
  4141  000A2C                     l893:
  4142  000A2C  C02A  F025         	movff	___flmul@temp,___flmul@bexp
  4143  000A30  0EFF               	movlw	255
  4144  000A32  1626               	andwf	___flmul@prod^0,f,c
  4145  000A34  0EFF               	movlw	255
  4146  000A36  1627               	andwf	(___flmul@prod+1)^0,f,c
  4147  000A38  0E7F               	movlw	127
  4148  000A3A  1628               	andwf	(___flmul@prod+2)^0,f,c
  4149  000A3C  0E00               	movlw	0
  4150  000A3E  1629               	andwf	(___flmul@prod+3)^0,f,c
  4151  000A40  A025               	btfss	___flmul@bexp^0,0,c
  4152  000A42  EF25  F005         	goto	u1991
  4153  000A46  EF27  F005         	goto	u1990
  4154  000A4A                     u1991:
  4155  000A4A  EF28  F005         	goto	l2053
  4156  000A4E                     u1990:
  4157  000A4E  8E28               	bsf	(___flmul@prod+2)^0,7,c
  4158  000A50                     l2053:
  4159  000A50  90D8               	bcf	status,0,c
  4160  000A52  3025               	rrcf	___flmul@bexp^0,w,c
  4161  000A54  6E29               	movwf	(___flmul@prod+3)^0,c
  4162  000A56                     l2055:
  4163  000A56  501F               	movf	___flmul@sign^0,w,c
  4164  000A58  1229               	iorwf	(___flmul@prod+3)^0,f,c
  4165  000A5A  C026  F013         	movff	___flmul@prod,?___flmul
  4166  000A5E  C027  F014         	movff	___flmul@prod+1,?___flmul+1
  4167  000A62  C028  F015         	movff	___flmul@prod+2,?___flmul+2
  4168  000A66  C029  F016         	movff	___flmul@prod+3,?___flmul+3
  4169  000A6A                     l880:
  4170  000A6A  0012               	return		;funcret
  4171  000A6C                     __end_of___flmul:
  4172                           	callstack 0
  4173                           
  4174 ;; *************** function _adcInit *****************
  4175 ;; Defined at:
  4176 ;;		line 25 in file "adc.c"
  4177 ;; Parameters:    Size  Location     Type
  4178 ;;		None
  4179 ;; Auto vars:     Size  Location     Type
  4180 ;;		None
  4181 ;; Return value:  Size  Location     Type
  4182 ;;                  1    wreg      void 
  4183 ;; Registers used:
  4184 ;;		wreg, status,2, status,0, cstack
  4185 ;; Tracked objects:
  4186 ;;		On entry : 0/0
  4187 ;;		On exit  : 0/0
  4188 ;;		Unchanged: 0/0
  4189 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4190 ;;      Params:         0       0       0       0       0       0       0
  4191 ;;      Locals:         0       0       0       0       0       0       0
  4192 ;;      Temps:          0       0       0       0       0       0       0
  4193 ;;      Totals:         0       0       0       0       0       0       0
  4194 ;;Total ram usage:        0 bytes
  4195 ;; Hardware stack levels used:    1
  4196 ;; Hardware stack levels required when called:    1
  4197 ;; This function calls:
  4198 ;;		_pinMode
  4199 ;; This function is called by:
  4200 ;;		_main
  4201 ;; This function uses a non-reentrant model
  4202 ;;
  4203                           
  4204                           	psect	text25
  4205  001CD6                     __ptext25:
  4206                           	callstack 0
  4207  001CD6                     _adcInit:
  4208                           	callstack 29
  4209  001CD6                     
  4210                           ;adc.c: 27:     pinMode(PIN_A0, 1);
  4211  001CD6  0E00               	movlw	0
  4212  001CD8  6E02               	movwf	(pinMode@pin+1)^0,c
  4213  001CDA  0E00               	movlw	0
  4214  001CDC  6E01               	movwf	pinMode@pin^0,c
  4215  001CDE  0E00               	movlw	0
  4216  001CE0  6E04               	movwf	(pinMode@type+1)^0,c
  4217  001CE2  0E01               	movlw	1
  4218  001CE4  6E03               	movwf	pinMode@type^0,c
  4219  001CE6  EC5D  F006         	call	_pinMode	;wreg free
  4220                           
  4221                           ;adc.c: 28:     pinMode(PIN_A1, 1);
  4222  001CEA  0E00               	movlw	0
  4223  001CEC  6E02               	movwf	(pinMode@pin+1)^0,c
  4224  001CEE  0E01               	movlw	1
  4225  001CF0  6E01               	movwf	pinMode@pin^0,c
  4226  001CF2  0E00               	movlw	0
  4227  001CF4  6E04               	movwf	(pinMode@type+1)^0,c
  4228  001CF6  0E01               	movlw	1
  4229  001CF8  6E03               	movwf	pinMode@type^0,c
  4230  001CFA  EC5D  F006         	call	_pinMode	;wreg free
  4231  001CFE                     
  4232                           ;adc.c: 33:     ((ADCON0) |= (1<<(0)));
  4233  001CFE  80C2               	bsf	194,0,c	;volatile
  4234  001D00                     
  4235                           ;adc.c: 36:     ADCON2 = 0b10101010;
  4236  001D00  0EAA               	movlw	170
  4237  001D02  6EC0               	movwf	192,c	;volatile
  4238  001D04  0012               	return		;funcret
  4239  001D06                     __end_of_adcInit:
  4240                           	callstack 0
  4241                           
  4242 ;; *************** function _pinMode *****************
  4243 ;; Defined at:
  4244 ;;		line 54 in file "io.c"
  4245 ;; Parameters:    Size  Location     Type
  4246 ;;  pin             2    0[COMRAM] int 
  4247 ;;  type            2    2[COMRAM] int 
  4248 ;; Auto vars:     Size  Location     Type
  4249 ;;		None
  4250 ;; Return value:  Size  Location     Type
  4251 ;;                  1    wreg      void 
  4252 ;; Registers used:
  4253 ;;		wreg, status,2, status,0
  4254 ;; Tracked objects:
  4255 ;;		On entry : 0/0
  4256 ;;		On exit  : 0/0
  4257 ;;		Unchanged: 0/0
  4258 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4259 ;;      Params:         4       0       0       0       0       0       0
  4260 ;;      Locals:         0       0       0       0       0       0       0
  4261 ;;      Temps:          2       0       0       0       0       0       0
  4262 ;;      Totals:         6       0       0       0       0       0       0
  4263 ;;Total ram usage:        6 bytes
  4264 ;; Hardware stack levels used:    1
  4265 ;; This function calls:
  4266 ;;		Nothing
  4267 ;; This function is called by:
  4268 ;;		_lcdInit
  4269 ;;		_adcInit
  4270 ;; This function uses a non-reentrant model
  4271 ;;
  4272                           
  4273                           	psect	text26
  4274  000CBA                     __ptext26:
  4275                           	callstack 0
  4276  000CBA                     _pinMode:
  4277                           	callstack 29
  4278  000CBA                     
  4279                           ;io.c: 56:     if(pin <8){
  4280  000CBA  BE02               	btfsc	(pinMode@pin+1)^0,7,c
  4281  000CBC  EF6B  F006         	goto	u1610
  4282  000CC0  5002               	movf	(pinMode@pin+1)^0,w,c
  4283  000CC2  E107               	bnz	u1611
  4284  000CC4  0E08               	movlw	8
  4285  000CC6  5C01               	subwf	pinMode@pin^0,w,c
  4286  000CC8  B0D8               	btfsc	status,0,c
  4287  000CCA  EF69  F006         	goto	u1611
  4288  000CCE  EF6B  F006         	goto	u1610
  4289  000CD2                     u1611:
  4290  000CD2  EF95  F006         	goto	l1893
  4291  000CD6                     u1610:
  4292  000CD6                     
  4293                           ;io.c: 57:         if (type){ ((TRISA) |= (1<<(pin)));}
  4294  000CD6  5003               	movf	pinMode@type^0,w,c
  4295  000CD8  1004               	iorwf	(pinMode@type+1)^0,w,c
  4296  000CDA  B4D8               	btfsc	status,2,c
  4297  000CDC  EF72  F006         	goto	u1621
  4298  000CE0  EF74  F006         	goto	u1620
  4299  000CE4                     u1621:
  4300  000CE4  EF84  F006         	goto	l1891
  4301  000CE8                     u1620:
  4302  000CE8  C001  F005         	movff	pinMode@pin,??_pinMode
  4303  000CEC  0E01               	movlw	1
  4304  000CEE  6E06               	movwf	(??_pinMode+1)^0,c
  4305  000CF0  2A05               	incf	??_pinMode^0,f,c
  4306  000CF2  EF7D  F006         	goto	u1634
  4307  000CF6                     u1635:
  4308  000CF6  90D8               	bcf	status,0,c
  4309  000CF8  3606               	rlcf	(??_pinMode+1)^0,f,c
  4310  000CFA                     u1634:
  4311  000CFA  2E05               	decfsz	??_pinMode^0,f,c
  4312  000CFC  EF7B  F006         	goto	u1635
  4313  000D00  5006               	movf	(??_pinMode+1)^0,w,c
  4314  000D02  1292               	iorwf	146,f,c	;volatile
  4315  000D04  EF83  F007         	goto	l158
  4316  000D08                     l1891:
  4317  000D08  C001  F005         	movff	pinMode@pin,??_pinMode
  4318  000D0C  0E01               	movlw	1
  4319  000D0E  6E06               	movwf	(??_pinMode+1)^0,c
  4320  000D10  2A05               	incf	??_pinMode^0,f,c
  4321  000D12  EF8D  F006         	goto	u1644
  4322  000D16                     u1645:
  4323  000D16  90D8               	bcf	status,0,c
  4324  000D18  3606               	rlcf	(??_pinMode+1)^0,f,c
  4325  000D1A                     u1644:
  4326  000D1A  2E05               	decfsz	??_pinMode^0,f,c
  4327  000D1C  EF8B  F006         	goto	u1645
  4328  000D20  5006               	movf	(??_pinMode+1)^0,w,c
  4329  000D22  0AFF               	xorlw	255
  4330  000D24  1692               	andwf	146,f,c	;volatile
  4331  000D26  EF83  F007         	goto	l158
  4332  000D2A                     l1893:
  4333  000D2A  BE02               	btfsc	(pinMode@pin+1)^0,7,c
  4334  000D2C  EFA3  F006         	goto	u1650
  4335  000D30  5002               	movf	(pinMode@pin+1)^0,w,c
  4336  000D32  E107               	bnz	u1651
  4337  000D34  0E10               	movlw	16
  4338  000D36  5C01               	subwf	pinMode@pin^0,w,c
  4339  000D38  B0D8               	btfsc	status,0,c
  4340  000D3A  EFA1  F006         	goto	u1651
  4341  000D3E  EFA3  F006         	goto	u1650
  4342  000D42                     u1651:
  4343  000D42  EFD1  F006         	goto	l1901
  4344  000D46                     u1650:
  4345  000D46                     
  4346                           ;io.c: 60:         if (type){ ((TRISB) |= (1<<(pin-8)));}
  4347  000D46  5003               	movf	pinMode@type^0,w,c
  4348  000D48  1004               	iorwf	(pinMode@type+1)^0,w,c
  4349  000D4A  B4D8               	btfsc	status,2,c
  4350  000D4C  EFAA  F006         	goto	u1661
  4351  000D50  EFAC  F006         	goto	u1660
  4352  000D54                     u1661:
  4353  000D54  EFBE  F006         	goto	l1899
  4354  000D58                     u1660:
  4355  000D58  C001  F005         	movff	pinMode@pin,??_pinMode
  4356  000D5C  0EF8               	movlw	-8
  4357  000D5E  2605               	addwf	??_pinMode^0,f,c
  4358  000D60  0E01               	movlw	1
  4359  000D62  6E06               	movwf	(??_pinMode+1)^0,c
  4360  000D64  2A05               	incf	??_pinMode^0,f,c
  4361  000D66  EFB7  F006         	goto	u1674
  4362  000D6A                     u1675:
  4363  000D6A  90D8               	bcf	status,0,c
  4364  000D6C  3606               	rlcf	(??_pinMode+1)^0,f,c
  4365  000D6E                     u1674:
  4366  000D6E  2E05               	decfsz	??_pinMode^0,f,c
  4367  000D70  EFB5  F006         	goto	u1675
  4368  000D74  5006               	movf	(??_pinMode+1)^0,w,c
  4369  000D76  1293               	iorwf	147,f,c	;volatile
  4370  000D78  EF83  F007         	goto	l158
  4371  000D7C                     l1899:
  4372  000D7C  C001  F005         	movff	pinMode@pin,??_pinMode
  4373  000D80  0EF8               	movlw	-8
  4374  000D82  2605               	addwf	??_pinMode^0,f,c
  4375  000D84  0E01               	movlw	1
  4376  000D86  6E06               	movwf	(??_pinMode+1)^0,c
  4377  000D88  2A05               	incf	??_pinMode^0,f,c
  4378  000D8A  EFC9  F006         	goto	u1684
  4379  000D8E                     u1685:
  4380  000D8E  90D8               	bcf	status,0,c
  4381  000D90  3606               	rlcf	(??_pinMode+1)^0,f,c
  4382  000D92                     u1684:
  4383  000D92  2E05               	decfsz	??_pinMode^0,f,c
  4384  000D94  EFC7  F006         	goto	u1685
  4385  000D98  5006               	movf	(??_pinMode+1)^0,w,c
  4386  000D9A  0AFF               	xorlw	255
  4387  000D9C  1693               	andwf	147,f,c	;volatile
  4388  000D9E  EF83  F007         	goto	l158
  4389  000DA2                     l1901:
  4390  000DA2  BE02               	btfsc	(pinMode@pin+1)^0,7,c
  4391  000DA4  EFDF  F006         	goto	u1690
  4392  000DA8  5002               	movf	(pinMode@pin+1)^0,w,c
  4393  000DAA  E107               	bnz	u1691
  4394  000DAC  0E18               	movlw	24
  4395  000DAE  5C01               	subwf	pinMode@pin^0,w,c
  4396  000DB0  B0D8               	btfsc	status,0,c
  4397  000DB2  EFDD  F006         	goto	u1691
  4398  000DB6  EFDF  F006         	goto	u1690
  4399  000DBA                     u1691:
  4400  000DBA  EF0D  F007         	goto	l1909
  4401  000DBE                     u1690:
  4402  000DBE                     
  4403                           ;io.c: 63:         if (type){ ((TRISC) |= (1<<(pin-16)));}
  4404  000DBE  5003               	movf	pinMode@type^0,w,c
  4405  000DC0  1004               	iorwf	(pinMode@type+1)^0,w,c
  4406  000DC2  B4D8               	btfsc	status,2,c
  4407  000DC4  EFE6  F006         	goto	u1701
  4408  000DC8  EFE8  F006         	goto	u1700
  4409  000DCC                     u1701:
  4410  000DCC  EFFA  F006         	goto	l1907
  4411  000DD0                     u1700:
  4412  000DD0  C001  F005         	movff	pinMode@pin,??_pinMode
  4413  000DD4  0EF0               	movlw	-16
  4414  000DD6  2605               	addwf	??_pinMode^0,f,c
  4415  000DD8  0E01               	movlw	1
  4416  000DDA  6E06               	movwf	(??_pinMode+1)^0,c
  4417  000DDC  2A05               	incf	??_pinMode^0,f,c
  4418  000DDE  EFF3  F006         	goto	u1714
  4419  000DE2                     u1715:
  4420  000DE2  90D8               	bcf	status,0,c
  4421  000DE4  3606               	rlcf	(??_pinMode+1)^0,f,c
  4422  000DE6                     u1714:
  4423  000DE6  2E05               	decfsz	??_pinMode^0,f,c
  4424  000DE8  EFF1  F006         	goto	u1715
  4425  000DEC  5006               	movf	(??_pinMode+1)^0,w,c
  4426  000DEE  1294               	iorwf	148,f,c	;volatile
  4427  000DF0  EF83  F007         	goto	l158
  4428  000DF4                     l1907:
  4429  000DF4  C001  F005         	movff	pinMode@pin,??_pinMode
  4430  000DF8  0EF0               	movlw	-16
  4431  000DFA  2605               	addwf	??_pinMode^0,f,c
  4432  000DFC  0E01               	movlw	1
  4433  000DFE  6E06               	movwf	(??_pinMode+1)^0,c
  4434  000E00  2A05               	incf	??_pinMode^0,f,c
  4435  000E02  EF05  F007         	goto	u1724
  4436  000E06                     u1725:
  4437  000E06  90D8               	bcf	status,0,c
  4438  000E08  3606               	rlcf	(??_pinMode+1)^0,f,c
  4439  000E0A                     u1724:
  4440  000E0A  2E05               	decfsz	??_pinMode^0,f,c
  4441  000E0C  EF03  F007         	goto	u1725
  4442  000E10  5006               	movf	(??_pinMode+1)^0,w,c
  4443  000E12  0AFF               	xorlw	255
  4444  000E14  1694               	andwf	148,f,c	;volatile
  4445  000E16  EF83  F007         	goto	l158
  4446  000E1A                     l1909:
  4447  000E1A  BE02               	btfsc	(pinMode@pin+1)^0,7,c
  4448  000E1C  EF1B  F007         	goto	u1730
  4449  000E20  5002               	movf	(pinMode@pin+1)^0,w,c
  4450  000E22  E107               	bnz	u1731
  4451  000E24  0E20               	movlw	32
  4452  000E26  5C01               	subwf	pinMode@pin^0,w,c
  4453  000E28  B0D8               	btfsc	status,0,c
  4454  000E2A  EF19  F007         	goto	u1731
  4455  000E2E  EF1B  F007         	goto	u1730
  4456  000E32                     u1731:
  4457  000E32  EF49  F007         	goto	l1917
  4458  000E36                     u1730:
  4459  000E36                     
  4460                           ;io.c: 66:         if (type){ ((TRISD) |= (1<<(pin-24)));}
  4461  000E36  5003               	movf	pinMode@type^0,w,c
  4462  000E38  1004               	iorwf	(pinMode@type+1)^0,w,c
  4463  000E3A  B4D8               	btfsc	status,2,c
  4464  000E3C  EF22  F007         	goto	u1741
  4465  000E40  EF24  F007         	goto	u1740
  4466  000E44                     u1741:
  4467  000E44  EF36  F007         	goto	l1915
  4468  000E48                     u1740:
  4469  000E48  C001  F005         	movff	pinMode@pin,??_pinMode
  4470  000E4C  0EE8               	movlw	-24
  4471  000E4E  2605               	addwf	??_pinMode^0,f,c
  4472  000E50  0E01               	movlw	1
  4473  000E52  6E06               	movwf	(??_pinMode+1)^0,c
  4474  000E54  2A05               	incf	??_pinMode^0,f,c
  4475  000E56  EF2F  F007         	goto	u1754
  4476  000E5A                     u1755:
  4477  000E5A  90D8               	bcf	status,0,c
  4478  000E5C  3606               	rlcf	(??_pinMode+1)^0,f,c
  4479  000E5E                     u1754:
  4480  000E5E  2E05               	decfsz	??_pinMode^0,f,c
  4481  000E60  EF2D  F007         	goto	u1755
  4482  000E64  5006               	movf	(??_pinMode+1)^0,w,c
  4483  000E66  1295               	iorwf	149,f,c	;volatile
  4484  000E68  EF83  F007         	goto	l158
  4485  000E6C                     l1915:
  4486  000E6C  C001  F005         	movff	pinMode@pin,??_pinMode
  4487  000E70  0EE8               	movlw	-24
  4488  000E72  2605               	addwf	??_pinMode^0,f,c
  4489  000E74  0E01               	movlw	1
  4490  000E76  6E06               	movwf	(??_pinMode+1)^0,c
  4491  000E78  2A05               	incf	??_pinMode^0,f,c
  4492  000E7A  EF41  F007         	goto	u1764
  4493  000E7E                     u1765:
  4494  000E7E  90D8               	bcf	status,0,c
  4495  000E80  3606               	rlcf	(??_pinMode+1)^0,f,c
  4496  000E82                     u1764:
  4497  000E82  2E05               	decfsz	??_pinMode^0,f,c
  4498  000E84  EF3F  F007         	goto	u1765
  4499  000E88  5006               	movf	(??_pinMode+1)^0,w,c
  4500  000E8A  0AFF               	xorlw	255
  4501  000E8C  1695               	andwf	149,f,c	;volatile
  4502  000E8E  EF83  F007         	goto	l158
  4503  000E92                     l1917:
  4504  000E92  BE02               	btfsc	(pinMode@pin+1)^0,7,c
  4505  000E94  EF57  F007         	goto	u1770
  4506  000E98  5002               	movf	(pinMode@pin+1)^0,w,c
  4507  000E9A  E107               	bnz	u1771
  4508  000E9C  0E28               	movlw	40
  4509  000E9E  5C01               	subwf	pinMode@pin^0,w,c
  4510  000EA0  B0D8               	btfsc	status,0,c
  4511  000EA2  EF55  F007         	goto	u1771
  4512  000EA6  EF57  F007         	goto	u1770
  4513  000EAA                     u1771:
  4514  000EAA  EF83  F007         	goto	l158
  4515  000EAE                     u1770:
  4516  000EAE                     
  4517                           ;io.c: 69:         if (type){ ((TRISE) |= (1<<(pin-32)));}
  4518  000EAE  5003               	movf	pinMode@type^0,w,c
  4519  000EB0  1004               	iorwf	(pinMode@type+1)^0,w,c
  4520  000EB2  B4D8               	btfsc	status,2,c
  4521  000EB4  EF5E  F007         	goto	u1781
  4522  000EB8  EF60  F007         	goto	u1780
  4523  000EBC                     u1781:
  4524  000EBC  EF72  F007         	goto	l1923
  4525  000EC0                     u1780:
  4526  000EC0  C001  F005         	movff	pinMode@pin,??_pinMode
  4527  000EC4  0EE0               	movlw	-32
  4528  000EC6  2605               	addwf	??_pinMode^0,f,c
  4529  000EC8  0E01               	movlw	1
  4530  000ECA  6E06               	movwf	(??_pinMode+1)^0,c
  4531  000ECC  2A05               	incf	??_pinMode^0,f,c
  4532  000ECE  EF6B  F007         	goto	u1794
  4533  000ED2                     u1795:
  4534  000ED2  90D8               	bcf	status,0,c
  4535  000ED4  3606               	rlcf	(??_pinMode+1)^0,f,c
  4536  000ED6                     u1794:
  4537  000ED6  2E05               	decfsz	??_pinMode^0,f,c
  4538  000ED8  EF69  F007         	goto	u1795
  4539  000EDC  5006               	movf	(??_pinMode+1)^0,w,c
  4540  000EDE  1296               	iorwf	150,f,c	;volatile
  4541  000EE0  EF83  F007         	goto	l158
  4542  000EE4                     l1923:
  4543  000EE4  C001  F005         	movff	pinMode@pin,??_pinMode
  4544  000EE8  0EE0               	movlw	-32
  4545  000EEA  2605               	addwf	??_pinMode^0,f,c
  4546  000EEC  0E01               	movlw	1
  4547  000EEE  6E06               	movwf	(??_pinMode+1)^0,c
  4548  000EF0  2A05               	incf	??_pinMode^0,f,c
  4549  000EF2  EF7D  F007         	goto	u1804
  4550  000EF6                     u1805:
  4551  000EF6  90D8               	bcf	status,0,c
  4552  000EF8  3606               	rlcf	(??_pinMode+1)^0,f,c
  4553  000EFA                     u1804:
  4554  000EFA  2E05               	decfsz	??_pinMode^0,f,c
  4555  000EFC  EF7B  F007         	goto	u1805
  4556  000F00  5006               	movf	(??_pinMode+1)^0,w,c
  4557  000F02  0AFF               	xorlw	255
  4558  000F04  1696               	andwf	150,f,c	;volatile
  4559  000F06                     l158:
  4560  000F06  0012               	return		;funcret
  4561  000F08                     __end_of_pinMode:
  4562                           	callstack 0
  4563                           
  4564                           	psect	rparam
  4565  0000                     
  4566                           	psect	idloc
  4567                           
  4568                           ;Config register IDLOC0 @ 0x200000
  4569                           ;	unspecified, using default values
  4570  200000                     	org	2097152
  4571  200000  FF                 	db	255
  4572                           
  4573                           ;Config register IDLOC1 @ 0x200001
  4574                           ;	unspecified, using default values
  4575  200001                     	org	2097153
  4576  200001  FF                 	db	255
  4577                           
  4578                           ;Config register IDLOC2 @ 0x200002
  4579                           ;	unspecified, using default values
  4580  200002                     	org	2097154
  4581  200002  FF                 	db	255
  4582                           
  4583                           ;Config register IDLOC3 @ 0x200003
  4584                           ;	unspecified, using default values
  4585  200003                     	org	2097155
  4586  200003  FF                 	db	255
  4587                           
  4588                           ;Config register IDLOC4 @ 0x200004
  4589                           ;	unspecified, using default values
  4590  200004                     	org	2097156
  4591  200004  FF                 	db	255
  4592                           
  4593                           ;Config register IDLOC5 @ 0x200005
  4594                           ;	unspecified, using default values
  4595  200005                     	org	2097157
  4596  200005  FF                 	db	255
  4597                           
  4598                           ;Config register IDLOC6 @ 0x200006
  4599                           ;	unspecified, using default values
  4600  200006                     	org	2097158
  4601  200006  FF                 	db	255
  4602                           
  4603                           ;Config register IDLOC7 @ 0x200007
  4604                           ;	unspecified, using default values
  4605  200007                     	org	2097159
  4606  200007  FF                 	db	255
  4607                           
  4608                           	psect	config
  4609                           
  4610                           ; Padding undefined space
  4611  300000                     	org	3145728
  4612  300000  FF                 	db	255
  4613                           
  4614                           ;Config register CONFIG1H @ 0x300001
  4615                           ;	Oscillator Selection bits
  4616                           ;	OSC = HS, HS oscillator
  4617                           ;	Fail-Safe Clock Monitor Enable bit
  4618                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
  4619                           ;	Internal/External Oscillator Switchover bit
  4620                           ;	IESO = OFF, Oscillator Switchover mode disabled
  4621  300001                     	org	3145729
  4622  300001  02                 	db	2
  4623                           
  4624                           ;Config register CONFIG2L @ 0x300002
  4625                           ;	Power-up Timer Enable bit
  4626                           ;	PWRT = OFF, PWRT disabled
  4627                           ;	Brown-out Reset Enable bits
  4628                           ;	BOREN = OFF, Brown-out Reset disabled in hardware and software
  4629                           ;	Brown Out Reset Voltage bits
  4630                           ;	BORV = 0x2E, user specified literal
  4631  300002                     	org	3145730
  4632  300002  71                 	db	369
  4633                           
  4634                           ;Config register CONFIG2H @ 0x300003
  4635                           ;	Watchdog Timer Enable bit
  4636                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
  4637                           ;	Watchdog Timer Postscale Select bits
  4638                           ;	WDTPS = 1, 1:1
  4639  300003                     	org	3145731
  4640  300003  00                 	db	0
  4641                           
  4642                           ; Padding undefined space
  4643  300004                     	org	3145732
  4644  300004  FF                 	db	255
  4645                           
  4646                           ;Config register CONFIG3H @ 0x300005
  4647                           ;	CCP2 MUX bit
  4648                           ;	CCP2MX = PORTC, CCP2 input/output is multiplexed with RC1
  4649                           ;	PORTB A/D Enable bit
  4650                           ;	PBADEN = ON, PORTB<4:0> pins are configured as analog input channels on Reset
  4651                           ;	Low-Power Timer1 Oscillator Enable bit
  4652                           ;	LPT1OSC = OFF, Timer1 configured for higher power operation
  4653                           ;	MCLR Pin Enable bit
  4654                           ;	MCLRE = ON, MCLR pin enabled; RE3 input pin disabled
  4655  300005                     	org	3145733
  4656  300005  83                 	db	131
  4657                           
  4658                           ;Config register CONFIG4L @ 0x300006
  4659                           ;	Stack Full/Underflow Reset Enable bit
  4660                           ;	STVREN = OFF, Stack full/underflow will not cause Reset
  4661                           ;	Single-Supply ICSP Enable bit
  4662                           ;	LVP = OFF, Single-Supply ICSP disabled
  4663                           ;	Extended Instruction Set Enable bit
  4664                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
  4665                           ;	Background Debugger Enable bit
  4666                           ;	DEBUG = OFF, Background debugger disabled, RB6 and RB7 configured as general purpose I
      +                          /O pins
  4667  300006                     	org	3145734
  4668  300006  80                 	db	128
  4669                           
  4670                           ; Padding undefined space
  4671  300007                     	org	3145735
  4672  300007  FF                 	db	255
  4673                           
  4674                           ;Config register CONFIG5L @ 0x300008
  4675                           ;	Code Protection bit
  4676                           ;	CP0 = OFF, Block 0 (000800-001FFFh) not code-protected
  4677                           ;	Code Protection bit
  4678                           ;	CP1 = OFF, Block 1 (002000-003FFFh) not code-protected
  4679                           ;	Code Protection bit
  4680                           ;	CP2 = OFF, Block 2 (004000-005FFFh) not code-protected
  4681                           ;	Code Protection bit
  4682                           ;	CP3 = OFF, Block 3 (006000-007FFFh) not code-protected
  4683  300008                     	org	3145736
  4684  300008  0F                 	db	15
  4685                           
  4686                           ;Config register CONFIG5H @ 0x300009
  4687                           ;	Boot Block Code Protection bit
  4688                           ;	CPB = OFF, Boot block (000000-0007FFh) not code-protected
  4689                           ;	Data EEPROM Code Protection bit
  4690                           ;	CPD = OFF, Data EEPROM not code-protected
  4691  300009                     	org	3145737
  4692  300009  C0                 	db	192
  4693                           
  4694                           ;Config register CONFIG6L @ 0x30000A
  4695                           ;	Write Protection bit
  4696                           ;	WRT0 = OFF, Block 0 (000800-001FFFh) not write-protected
  4697                           ;	Write Protection bit
  4698                           ;	WRT1 = OFF, Block 1 (002000-003FFFh) not write-protected
  4699                           ;	Write Protection bit
  4700                           ;	WRT2 = OFF, Block 2 (004000-005FFFh) not write-protected
  4701                           ;	Write Protection bit
  4702                           ;	WRT3 = OFF, Block 3 (006000-007FFFh) not write-protected
  4703  30000A                     	org	3145738
  4704  30000A  0F                 	db	15
  4705                           
  4706                           ;Config register CONFIG6H @ 0x30000B
  4707                           ;	Configuration Register Write Protection bit
  4708                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) not write-protected
  4709                           ;	Boot Block Write Protection bit
  4710                           ;	WRTB = OFF, Boot block (000000-0007FFh) not write-protected
  4711                           ;	Data EEPROM Write Protection bit
  4712                           ;	WRTD = OFF, Data EEPROM not write-protected
  4713  30000B                     	org	3145739
  4714  30000B  E0                 	db	224
  4715                           
  4716                           ;Config register CONFIG7L @ 0x30000C
  4717                           ;	Table Read Protection bit
  4718                           ;	EBTR0 = OFF, Block 0 (000800-001FFFh) not protected from table reads executed in other
      +                           blocks
  4719                           ;	Table Read Protection bit
  4720                           ;	EBTR1 = OFF, Block 1 (002000-003FFFh) not protected from table reads executed in other
      +                           blocks
  4721                           ;	Table Read Protection bit
  4722                           ;	EBTR2 = OFF, Block 2 (004000-005FFFh) not protected from table reads executed in other
      +                           blocks
  4723                           ;	Table Read Protection bit
  4724                           ;	EBTR3 = OFF, Block 3 (006000-007FFFh) not protected from table reads executed in other
      +                           blocks
  4725  30000C                     	org	3145740
  4726  30000C  0F                 	db	15
  4727                           
  4728                           ;Config register CONFIG7H @ 0x30000D
  4729                           ;	Boot Block Table Read Protection bit
  4730                           ;	EBTRB = OFF, Boot block (000000-0007FFh) not protected from table reads executed in ot
      +                          her blocks
  4731  30000D                     	org	3145741
  4732  30000D  40                 	db	64
  4733                           tosu	equ	0xFFF
  4734                           tosh	equ	0xFFE
  4735                           tosl	equ	0xFFD
  4736                           stkptr	equ	0xFFC
  4737                           pclatu	equ	0xFFB
  4738                           pclath	equ	0xFFA
  4739                           pcl	equ	0xFF9
  4740                           tblptru	equ	0xFF8
  4741                           tblptrh	equ	0xFF7
  4742                           tblptrl	equ	0xFF6
  4743                           tablat	equ	0xFF5
  4744                           prodh	equ	0xFF4
  4745                           prodl	equ	0xFF3
  4746                           indf0	equ	0xFEF
  4747                           postinc0	equ	0xFEE
  4748                           postdec0	equ	0xFED
  4749                           preinc0	equ	0xFEC
  4750                           plusw0	equ	0xFEB
  4751                           fsr0h	equ	0xFEA
  4752                           fsr0l	equ	0xFE9
  4753                           wreg	equ	0xFE8
  4754                           indf1	equ	0xFE7
  4755                           postinc1	equ	0xFE6
  4756                           postdec1	equ	0xFE5
  4757                           preinc1	equ	0xFE4
  4758                           plusw1	equ	0xFE3
  4759                           fsr1h	equ	0xFE2
  4760                           fsr1l	equ	0xFE1
  4761                           bsr	equ	0xFE0
  4762                           indf2	equ	0xFDF
  4763                           postinc2	equ	0xFDE
  4764                           postdec2	equ	0xFDD
  4765                           preinc2	equ	0xFDC
  4766                           plusw2	equ	0xFDB
  4767                           fsr2h	equ	0xFDA
  4768                           fsr2l	equ	0xFD9
  4769                           status	equ	0xFD8

Data Sizes:
    Strings     64
    Constant    0
    Data        3
    BSS         14
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          127     63      80
    BANK0           128      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0

Pointer List with Targets:

    lcdPrint@str	PTR const unsigned char  size(2) Largest target is 17
		 -> STR_9(CODE[5]), STR_8(CODE[2]), STR_7(CODE[17]), STR_6(CODE[4]), 
		 -> STR_5(CODE[2]), STR_4(CODE[17]), STR_3(CODE[4]), STR_2(CODE[2]), 
		 -> STR_1(CODE[17]), 

    itoa@str	PTR unsigned char  size(2) Largest target is 6
		 -> str(COMRAM[6]), 


Critical Paths under _main in COMRAM

    _main->_fahr
    _main->_kelvin
    _readButton->_kpRead
    _lcdInit->_lcdCommand
    _kelvin->___fltol
    _fahr->___fltol
    ___awdiv->___wmul
    _celsius->___fltol
    _lcdSetCursor->_lcdCommand
    _lcdCommand->_digitalWrite
    _Delay2ms->_Delay40us
    _lcdPrint->_lcdData
    _lcdData->_digitalWrite
    _itoa->___lwdiv
    ___lwdiv->___lwmod
    ___xxtofl->_adcRead
    ___fltol->___flmul
    ___flmul->___xxtofl
    _adcInit->_pinMode

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0   41810
                                             61 COMRAM     2     2      0
                            _adcInit
                            _celsius
                               _fahr
                             _kelvin
                         _kpDebounce
                             _kpInit
                            _lcdInit
                         _readButton
 ---------------------------------------------------------------------------------
 (1) _readButton                                           2     2      0       0
                                              2 COMRAM     2     2      0
                             _kpRead
 ---------------------------------------------------------------------------------
 (2) _kpRead                                               2     0      2       0
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _lcdInit                                              0     0      0    2723
                           _Delay2ms
                         _lcdCommand
                            _pinMode
 ---------------------------------------------------------------------------------
 (1) _kpInit                                               0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _kpDebounce                                          10    10      0     210
                                              0 COMRAM    10    10      0
 ---------------------------------------------------------------------------------
 (1) _kelvin                                               8     8      0   12363
                                             53 COMRAM     8     8      0
                            ___flmul
                            ___fltol
                           ___xxtofl
                            _adcRead
                               _itoa
                            _lcdData
                           _lcdPrint
                       _lcdSetCursor
 ---------------------------------------------------------------------------------
 (1) _fahr                                                 8     8      0   13126
                                             53 COMRAM     8     8      0
                            ___awdiv
                            ___flmul
                            ___fltol
                             ___wmul
                           ___xxtofl
                            _adcRead
                               _itoa
                            _lcdData
                           _lcdPrint
                       _lcdSetCursor
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4     311
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (2) ___awdiv                                              8     4      4     452
                                              6 COMRAM     8     4      4
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (1) _celsius                                              6     6      0   12340
                                             53 COMRAM     6     6      0
                            ___flmul
                            ___fltol
                           ___xxtofl
                            _adcRead
                               _itoa
                            _lcdData
                           _lcdPrint
                       _lcdSetCursor
 ---------------------------------------------------------------------------------
 (2) _lcdSetCursor                                         4     0      4    2583
                                              8 COMRAM     4     0      4
                         _lcdCommand
 ---------------------------------------------------------------------------------
 (2) _lcdCommand                                           2     2      0    1583
                                              6 COMRAM     2     2      0
                           _Delay2ms
                          _Delay40us
                       _digitalWrite
 ---------------------------------------------------------------------------------
 (3) _Delay2ms                                             1     1      0      92
                                              1 COMRAM     1     1      0
                          _Delay40us
 ---------------------------------------------------------------------------------
 (2) _lcdPrint                                             5     3      2    2221
                                              8 COMRAM     5     3      2
                            _lcdData
 ---------------------------------------------------------------------------------
 (3) _lcdData                                              2     2      0    1447
                                              6 COMRAM     2     2      0
                          _Delay40us
                       _digitalWrite
 ---------------------------------------------------------------------------------
 (3) _digitalWrite                                         6     2      4    1356
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (3) _Delay40us                                            1     1      0      46
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _itoa                                                 4     0      4    2235
                                             12 COMRAM     4     0      4
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (3) ___lwmod                                              5     1      4     767
                                              0 COMRAM     5     1      4
 ---------------------------------------------------------------------------------
 (3) ___lwdiv                                              7     3      4     770
                                              5 COMRAM     7     3      4
                            ___lwmod (ARG)
 ---------------------------------------------------------------------------------
 (2) _adcRead                                              4     2      2     297
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (2) ___xxtofl                                            14    10      4     550
                                              4 COMRAM    14    10      4
                            _adcRead (ARG)
 ---------------------------------------------------------------------------------
 (2) ___fltol                                             10     6      4     457
                                             43 COMRAM    10     6      4
                            ___flmul (ARG)
                           ___xxtofl (ARG)
                            _adcRead (ARG)
 ---------------------------------------------------------------------------------
 (2) ___flmul                                             25    17      8    2504
                                             18 COMRAM    25    17      8
                           ___xxtofl (ARG)
                            _adcRead (ARG)
 ---------------------------------------------------------------------------------
 (1) _adcInit                                              0     0      0    1048
                            _pinMode
 ---------------------------------------------------------------------------------
 (2) _pinMode                                              6     2      4    1048
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _adcInit
     _pinMode
   _celsius
     ___flmul
       ___xxtofl (ARG)
         _adcRead (ARG)
       _adcRead (ARG)
     ___fltol
       ___flmul (ARG)
         ___xxtofl (ARG)
           _adcRead (ARG)
         _adcRead (ARG)
       ___xxtofl (ARG)
         _adcRead (ARG)
       _adcRead (ARG)
     ___xxtofl
       _adcRead (ARG)
     _adcRead
     _itoa
       ___lwdiv
         ___lwmod (ARG)
       ___lwmod
     _lcdData
       _Delay40us
       _digitalWrite
     _lcdPrint
       _lcdData
         _Delay40us
         _digitalWrite
     _lcdSetCursor
       _lcdCommand
         _Delay2ms
           _Delay40us
         _Delay40us
         _digitalWrite
   _fahr
     ___awdiv
       ___wmul (ARG)
     ___flmul
       ___xxtofl (ARG)
         _adcRead (ARG)
       _adcRead (ARG)
     ___fltol
       ___flmul (ARG)
         ___xxtofl (ARG)
           _adcRead (ARG)
         _adcRead (ARG)
       ___xxtofl (ARG)
         _adcRead (ARG)
       _adcRead (ARG)
     ___wmul
     ___xxtofl
       _adcRead (ARG)
     _adcRead
     _itoa
       ___lwdiv
         ___lwmod (ARG)
       ___lwmod
     _lcdData
       _Delay40us
       _digitalWrite
     _lcdPrint
       _lcdData
         _Delay40us
         _digitalWrite
     _lcdSetCursor
       _lcdCommand
         _Delay2ms
           _Delay40us
         _Delay40us
         _digitalWrite
   _kelvin
     ___flmul
       ___xxtofl (ARG)
         _adcRead (ARG)
       _adcRead (ARG)
     ___fltol
       ___flmul (ARG)
         ___xxtofl (ARG)
           _adcRead (ARG)
         _adcRead (ARG)
       ___xxtofl (ARG)
         _adcRead (ARG)
       _adcRead (ARG)
     ___xxtofl
       _adcRead (ARG)
     _adcRead
     _itoa
       ___lwdiv
         ___lwmod (ARG)
       ___lwmod
     _lcdData
       _Delay40us
       _digitalWrite
     _lcdPrint
       _lcdData
         _Delay40us
         _digitalWrite
     _lcdSetCursor
       _lcdCommand
         _Delay2ms
           _Delay40us
         _Delay40us
         _digitalWrite
   _kpDebounce
   _kpInit
   _lcdInit
     _Delay2ms
       _Delay40us
     _lcdCommand
       _Delay2ms
         _Delay40us
       _Delay40us
       _digitalWrite
     _pinMode
   _readButton
     _kpRead

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             5FF      0       0      17        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK5           100      0       0      16        0.0%
BANK5              100      0       0      14        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            80      0       0       4        0.0%
BANK0               80      0       0       5        0.0%
BITCOMRAM           7F      0       0       0        0.0%
COMRAM              7F     3F      50       1       63.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      50      15        0.0%
DATA                 0      0      50       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.30 build 20200825195618 
Symbol Table                                                                                   Wed Dec 02 12:18:33 2020

                     l60 14AA                       l54 15C8                       l63 16D0  
                     l72 192A                       l57 1386                       l67 18F8  
                     l69 192A             ___awdiv@sign 000C      ___wmul@multiplicand 0003  
                    l124 0CB8                      l212 1D46                      l222 1BC6  
                    l207 1D5E                      l219 19A8                      l171 1D68  
                    l252 1D04                      l228 1C16                      l236 1CA0  
                    l158 0F06                      l262 1D2A                      l190 122C  
                    l191 1234                      l239 1A9A                      l256 1C3C  
                    l258 1C4A                      l194 1D72                      l259 1C66  
                    l189 1214                      l493 189A                      l559 17D6  
                    l920 10BA                      l760 1B0E                      l753 1B06  
                    l770 1B72                      l931 1052                      l763 1B6A  
                    l924 0FF6                      l917 0F5E                      l880 0A6A  
                    l883 08FC                      l876 0706                      l893 0A2C  
                    l885 0974                      l886 0962                      u984 10DE  
                    u985 10DA                      u994 10FE                      u995 10FA  
                    _str 0048                      wreg 000FE8             ___flmul@aexp 0024  
           ___flmul@bexp 0025             ___flmul@sign 001F             ___flmul@temp 002A  
           ___flmul@prod 0026             ___fltol@exp1 0035                     l2001 082E  
                   l2011 08C4                     l2003 083A                     l2021 091A  
                   l2013 08E2                     l2005 0856                     l2101 1892  
                   l2031 0984                     l2023 091E                     l2015 08EC  
                   l2007 0880                     l2111 16FC                     l2041 09E6  
                   l2033 0990                     l2025 092C                     l2017 08FA  
                   l2009 08B6                     l2121 174A                     l2113 1726  
                   l2105 16D2                     l2201 1A24                     l2051 0A4E  
                   l2043 09FA                     l2035 099E                     l2027 095A  
                   l2019 090C                     l2131 1776                     l2115 1728  
                   l2107 16E8                     l2211 1A5C                     l2203 1A4C  
                   l2053 0A50                     l2045 0A14                     l2037 09C8  
                   l2141 17A6                     l2117 1738                     l2061 17D8  
                   l2301 1368                     l1501 11DA                     l2221 1A72  
                   l2213 1A60                     l2205 1A50                     l2047 0A30  
                   l2055 0A56                     l2039 09CC                     l2143 17B6  
                   l2127 1762                     l2119 173C                     l2151 0F1A  
                   l2071 1804                     l2063 17DC                     l2303 1374  
                   l2311 13A8                     l1511 1224                     l1503 11EA  
                   l2231 1A8E                     l2223 1A78                     l2215 1A64  
                   l2207 1A54                     l2057 0A5A                     l2049 0A40  
                   l2145 17C6                     l2137 178A                     l2129 176C  
                   l2161 0F98                     l2153 0F28                     l2081 1832  
                   l2073 180C                     l2065 17EA                     l2305 137A  
                   l2321 1474                     l2313 1400                     l1513 1230  
                   l1505 1202                     l2233 1A94                     l2225 1A7C  
                   l2217 1A6A                     l2209 1A58                     l2241 18D4  
                   l2139 1796                     l2171 0FEC                     l2163 0FA0  
                   l2155 0F6E                     l2251 14C0                     l2091 186C  
                   l2083 183A                     l2075 1810                     l2067 17F2  
                   l2331 1492                     l2323 147A                     l2315 1440  
                   l2307 1388                     l1507 1208                     l1419 1D6A  
                   l2227 1A82                     l2219 1A6E                     l2243 18F0  
                   l2235 189C                     l2181 1062                     l2173 1028  
                   l2165 0FAC                     l2157 0F84                     l2149 0F0A  
                   l2261 158C                     l2253 14CC                     l2093 186E  
                   l2085 1848                     l2077 1818                     l2069 17F6  
                   l2333 149E                     l2325 1480                     l2317 144C  
                   l2309 139C                     l1509 120C                     l1461 10BC  
                   l2229 1A88                     l2245 1906                     l2237 18BE  
                   l2341 19C2                     l2191 10AA                     l2183 1066  
                   l2175 1034                     l2167 0FDE                     l1711 1D48  
                   l2271 15AA                     l2263 1592                     l2255 1524  
                   l2095 1874                     l2087 184E                     l2079 182A  
                   l2327 1486                     l2319 1460                     l1471 10C8  
                   l1463 10C0                     l2247 1920                     l2239 18C6  
                   l2351 19E4                     l2343 19C8                     l2335 19AA  
                   l2185 108A                     l2177 1042                     l2169 0FE0  
                   l1721 0A6C                     l1801 1976                     l2273 15B6  
                   l2265 1598                     l2257 1564                     l2249 14AC  
                   l2089 1864                     l2097 187A                     l2281 1256  
                   l2329 148C                     l1481 1116                     l1473 110A  
                   l1465 10C4                     l2345 19D0                     l2337 19B6  
                   l2195 1CD6                     l2187 109A                     l2179 1060  
                   l1811 1A9C                     l1731 0AF8                     l1723 0A88  
                   l1803 197A                     l2275 15BC                     l2267 159E  
                   l2259 1578                     l2099 188A                     l2291 134A  
                   l2283 12AE                     l1491 1162                     l1483 1132  
                   l2347 19D6                     l2355 19EC                     l2339 19BA  
                   l1901 0DA2                     l2197 1CFE                     l2189 10A8  
                   l1821 1AD4                     l1813 1AA4                     l1717 1D4C  
                   l1741 0B8A                     l1733 0B12                     l1725 0A9A  
                   l1805 198C                     l2269 15A4                     l2293 1350  
                   l2285 12EE                     l2277 1236                     l1493 1192  
                   l2349 19DE                     l1911 0E36                     l1903 0DBE  
                   l2199 1D00                     l1831 1B00                     l1823 1ADA  
                   l1815 1AB6                     l1719 1D4E                     l1751 0C22  
                   l1743 0BAA                     l1735 0B32                     l1727 0ABA  
                   l1807 199C                     l2295 1356                     l2287 1322  
                   l2279 124A                     l1495 11C6                     l1479 1112  
                   l2367 1A02                     l1921 0EC0                     l1913 0E48  
                   l1905 0DD0                     l1825 1AF0                     l1817 1ABE  
                   l1841 1B40                     l1833 1B10                     l1753 0C44  
                   l1745 0BCC                     l1737 0B54                     l1729 0ADC  
                   l1761 1D2C                     l1809 19A4                     l2297 135C  
                   l2289 1336                     l1497 11C8                     l1489 1136  
                   l1923 0EE4                     l1915 0E6C                     l1907 0DF4  
                   l1931 0642                     l1827 1AF8                     l1819 1AC6  
                   l1843 1B56                     l1835 1B22                     l1755 0C60  
                   l1747 0BE8                     l1739 0B70                     l1771 1D36  
                   l1851 1C7A                     l2299 1362                     l1499 11D8  
                   l1917 0E92                     l1909 0E1A                     l1941 067E  
                   l1933 064E                     l1829 1AFA                     l1845 1B5E  
                   l1837 1B2A                     l1757 0C7A                     l1749 0C02  
                   l1781 1B96                     l1773 1B76                     l1861 1BEC  
                   l1853 1C84                     l1925 1D06                     l1919 0EAE  
                   l1951 06B0                     l1943 068E                     l1935 065C  
                   l1871 1C50                     l1847 1B64                     l1839 1B32  
                   l1759 0C9A                     l1783 1BAA                     l1775 1B7A  
                   l1863 1BEE                     l1767 1D30                     l1791 1932  
                   l1855 1C96                     l1927 1D22                     l1961 06F0  
                   l1953 06BE                     l1945 0694                     l1937 065E  
                   l1873 1C56                     l1865 1C18                     l1881 16C0  
                   l1785 1BBE                     l1777 1B7E                     l1857 1BC8  
                   l1769 1D34                     l1793 1936                     l1849 1C68  
                   l1891 0D08                     l1971 073A                     l1963 06F6  
                   l1955 06C0                     l1947 06A4                     l1939 066E  
                   l1875 1C5E                     l1867 1C32                     l1787 1BC2  
                   l1779 1B92                     l1859 1BD0                     l1795 194A  
                   l1883 1D60                     l1893 0D2A                     l1885 0CBA  
                   l1981 078A                     l1973 0746                     l1965 0716  
                   l1957 06D0                     l1949 06AA                     l1869 1C3A  
                   l1797 194E                     l1789 192E                     l1895 0D46  
                   l1887 0CD6                     l1991 07CC                     l1983 0796  
                   l1975 0750                     l1967 0726                     l1959 06E0  
                   l1879 15CA                     l1799 1962                     l1897 0D58  
                   l1889 0CE8                     l1993 07D8                     l1985 07A2  
                   l1977 0766                     l1899 0D7C                     l1995 07E8  
                   l1987 07B0                     l1979 0772                     l1997 0802  
                   l1989 07BC                     l1999 0812                     STR_1 0612  
                   STR_2 0610                     STR_3 0639                     STR_4 0623  
                   STR_5 0610                     STR_6 063D                     STR_7 0601  
                   STR_8 0610                     STR_9 0634                     u1000 1132  
                   u1001 112E                     u1020 1162                     u1021 115E  
                   u1014 1148                     u1015 1144                     u2000 17EA  
                   u2001 17E6                     u2010 1804                     u1050 11D8  
                   u1034 1180                     u2011 1800                     u1051 11D4  
                   u1035 117A                     u2100 1786                     u2020 182A  
                   u1060 11EA                     u1044 11B0                     u2101 1782  
                   u2021 1826                     u1061 11E6                     u1045 11AA  
                   u2110 17A6                     u1310 0AF8                     u2030 1848  
                   u1070 1202                     u2111 17A2                     u1311 0AF4  
                   u2031 1844                     u1071 11FE                     u2120 17B6  
                   u2200 1060                     u1400 0C02                     u1320 0B12  
                   u1304 0ACC                     u2040 1864                     u1080 1224  
                   u2121 17B2                     u2201 105C                     u1401 0BFE  
                   u1321 0B0E                     u1305 0AC8                     u2041 1860  
                   u1081 1220                     u2210 109A                     u2130 0F1A  
                   u2050 188A                     u2211 1096                     u2131 0F16  
                   u2051 1886                     u2060 16E8                     u2220 10A8  
                   u2140 0F28                     u1500 1AB6                     u1260 1D5E  
                   u2061 16E4                     u2221 10A4                     u2141 0F24  
                   u1501 1AB2                     u1261 1D5A                     u2070 171C  
                   u2150 0F84                     u1510 1AD4                     u1430 0C60  
                   u1414 0C14                     u1350 0B70                     u1334 0B24  
                   u1270 0A88                     u2230 18BE                     u2151 0F80  
                   u1511 1AD0                     u1431 0C5C                     u1415 0C10  
                   u1351 0B6C                     u1335 0B20                     u1271 0A84  
                   u2231 18BA                     u2080 174A                     u2160 0FDA  
                   u1600 1C4A                     u1520 1AF0                     u1440 0C7A  
                   u1424 0C34                     u1360 0B8A                     u1344 0B44  
                   u1280 0A9A                     u2240 18D4                     u2081 1746  
                   u2161 0FD6                     u1601 1C46                     u1521 1AEC  
                   u1441 0C76                     u1425 0C30                     u1361 0B86  
                   u1345 0B40                     u1281 0A96                     u2241 18D0  
                   u1610 0CD6                     u2090 175E                     u2170 1024  
                   u1530 1B22                     u2250 18F0                     u1611 0CD2  
                   u2091 175A                     u2075 1712                     u2171 1020  
                   u1531 1B1E                     u2251 18EC                     u1700 0DD0  
                   u1620 0CE8                     u2180 1042                     u1540 1B40  
                   u2260 1906                     u1701 0DCC                     u1621 0CE4  
                   u2181 103E                     u1541 1B3C                     u2261 1902  
                   u2190 1052                     u1550 1B56                     u1454 0C8C  
                   u1390 0BE8                     u1374 0B9C                     u1294 0AAC  
                   u1470 1D46                     u2270 1920                     u2191 104E  
                   u1551 1B52                     u1455 0C88                     u1391 0BE4  
                   u1375 0B98                     u1295 0AA8                     u1471 1D42  
                   u2271 191C                     u1464 0CAC                     u1384 0BBC  
                   u1480 198C                     u1560 1C7A                     u1465 0CA8  
                   u1385 0BB8                     u1481 1988                     u1561 1C76  
                   u1730 0E36                     u1714 0DE6                     u1650 0D46  
                   u1634 0CFA                     u1810 065C                     u1490 199C  
                   u1570 1C96                     u1731 0E32                     u1715 0DE2  
                   u1651 0D42                     u1635 0CF6                     u1811 0658  
                   u1491 1998                     u1571 1C92                     u1804 0EFA  
                   u1740 0E48                     u1724 0E0A                     u1660 0D58  
                   u1644 0D1A                     u1900 08FA                     u1820 066E  
                   u1580 1C16                     u1805 0EF6                     u1741 0E44  
                   u1725 0E06                     u1661 0D54                     u1645 0D16  
                   u1901 08F6                     u1821 066A                     u1581 1C12  
                   u1910 091A                     u1830 067E                     u1590 1C32  
                   u1911 0916                     u1831 067A                     u1591 1C2E  
                   u1920 092C                     u1840 06BE                     u1921 0928  
                   u1841 06BA                     u1770 0EAE                     u1754 0E5E  
                   u1690 0DBE                     u1674 0D6E                     u1930 095A  
                   u1850 06D0                     u1771 0EAA                     u1755 0E5A  
                   u1691 0DBA                     u1675 0D6A                     u1931 0956  
                   u1851 06CC                     u1780 0EC0                     u1764 0E82  
                   u1684 0D92                     u1940 0970                     u1860 06E0  
                   u1781 0EBC                     u1765 0E7E                     u1685 0D8E  
                   u1941 096C                     u1861 06DC                     u1950 0984  
                   u1870 0716                     u1951 0980                     u1871 0712  
                   u1960 099E                     u1880 0726                     u1961 099A  
                   u1881 0722                     u1794 0ED6                     u1970 09E6  
                   u1890 08A0                     u1795 0ED2                     u1971 09E2  
                   u1980 0A14                     u1981 0A10                     u1990 0A4E  
                   u1991 0A4A                     u1895 0896                     _fahr 1236  
                   _main 19AA                     _grau 0050                     _itoa 15CA  
                   fsr2h 000FDA                     indf2 000FDF                     fsr2l 000FD9  
                   prodh 000FF4                     prodl 000FF3                     start 0000  
           ___param_bank 000000                    ?_fahr 0001            ___fltol@sign1 0034  
                  ?_main 0001          __end_of_adcInit 1D06          __end_of_adcRead 1C68  
                  ?_itoa 000D          __end_of___awdiv 189C          __end_of___flmul 0A6C  
        __end_of___fltol 17D8          ___awdiv@divisor 0009          __end_of___lwdiv 1B10  
        __end_of___lwmod 1B74          ___awdiv@counter 000B                    _PORTA 000F80  
                  _PORTB 000F81                    _PORTC 000F82                    _PORTD 000F83  
                  _PORTE 000F84                    _TRISA 000F92                    _TRISB 000F93  
                  _TRISC 000F94                    _TRISD 000F95                    _TRISE 000F96  
        __end_of_lcdData 1BC8          __end_of_celsius 15CA          __end_of_lcdInit 1A9C  
                  _tecla 0047          __end_of_pinMode 0F08                    _valor 0044  
                  tablat 000FF5                    status 000FD8         __end_of_Delay2ms 1D48  
   __end_of_digitalWrite 0CBA          __initialization 1CA2             __end_of_fahr 1388  
           __end_of_main 1A24             __end_of_itoa 16D2       __size_of_Delay40us 0018  
                 ??_fahr 0036                   ??_main 003E                   ??_itoa 0011  
          __activetblptr 000002     __end_of_lcdSetCursor 1CA2                   _ADCON0 000FC2  
                 _ADCON2 000FC0                   _ADRESH 000FC4                   _ADRESL 000FC3  
       ___awdiv@dividend 0007         __end_of___xxtofl 10BC         __end_of_lcdPrint 1C18  
                 ___wmul 1D06                ??_adcInit 0007                ??_adcRead 0003  
              ??___awdiv 000B                ??___flmul 001B                ??___fltol 0030  
              ??___lwdiv 000A                ??___lwmod 0005                   _kpInit 1D6A  
                 _kpRead 1D60                   _kelvin 1388                   clear_0 1CC6  
       ___awdiv@quotient 000D                ??_lcdData 0007                ??_celsius 0036  
              ??_lcdInit 0009             __pdataCOMRAM 004E                ??_pinMode 0005  
           __mediumconst 0000                   tblptrh 000FF7                   tblptrl 000FF6  
                 tblptru 000FF8        __end_of_Delay40us 1D60             ___xxtofl@arg 000F  
           ___xxtofl@exp 000E             ___xxtofl@val 0005               __accesstop 0080  
__end_of__initialization 1CCC            ___rparam_used 000001               ___fltol@f1 002C  
            pinMode@type 0003           __pcstackCOMRAM 0001                ?_Delay2ms 0001  
  __size_of_digitalWrite 024E               _lcdCommand 192C                  ?___wmul 0001  
                ?_kpInit 0001                  ?_kpRead 0001    __size_of_lcdSetCursor 003A  
                ?_kelvin 0001               _kpDebounce 10BC             kelvin@tmpKel 003C  
              ?___xxtofl 0005               ??_Delay2ms 0002             _digitalWrite 0A6C  
              ?_lcdPrint 0009               _kelvin$901 0036             _lcdSetCursor 1C68  
        lcdSetCursor@col 000B                  __Hparam 0000                  __Lparam 0000  
        kpDebounce@old_D 0006          kpDebounce@tempo 0046                  _adcInit 1CD6  
                _adcRead 1C18                  ___awdiv 17D8               _readButton 189C  
                ___flmul 0642                  ___fltol 16D2          __size_of___wmul 0026  
                ___lwdiv 1A9C                  ___lwmod 1B10             __psmallconst 0600  
        __size_of_kpInit 000A          __size_of_kpRead 000A                  __pcinit 1CA2  
        __size_of_kelvin 0124                  _lcdData 1B74                  __ramtop 0600  
                _celsius 14AC                  _lcdInit 1A24                  __ptext0 19AA  
                __ptext1 189C                  __ptext2 1D60                  __ptext3 1A24  
                __ptext4 1D6A                  __ptext5 10BC                  __ptext6 1388  
                __ptext7 1236                  __ptext8 1D06                  __ptext9 17D8  
                _menuNum 004E                  fahr@tmp 003A               ??___xxtofl 0009  
                _pinMode 0CBA               ??_lcdPrint 000B                Delay2ms@i 0002  
    kpDebounce@valorNovo 0042     end_of_initialization 1CCC                  itoa@val 000D  
          __Lmediumconst 0000                  itoa@str 000F               celsius@tmp 003A  
            ?_lcdCommand 0001                  postinc0 000FEE              ?_kpDebounce 0001  
          ___xxtofl@sign 000D              ___flmul@grs 0020                _Delay40us 1D48  
            ?_readButton 0001           adcRead@ADvalor 0003           __end_of___wmul 1D2C  
          __pidataCOMRAM 1D74           __end_of_kpInit 1D74           __end_of_kpRead 1D6A  
         __end_of_kelvin 14AC      start_initialization 1CA2        __size_of_Delay2ms 001C  
    __size_of_lcdCommand 007E      __size_of_kpDebounce 017A               ?_Delay40us 0001  
         adcRead@channel 0001                 ??___wmul 0005                 ??_kpInit 0001  
               ??_kpRead 0003                 ??_kelvin 0036                ___flmul@a 0017  
              ___flmul@b 0013              __pbssCOMRAM 0040               pinMode@pin 0001  
      __size_of___xxtofl 01B4      __size_of_readButton 0090        __size_of_lcdPrint 0050  
            _celsius$899 0036         ___lwdiv@dividend 0006                 ?_adcInit 0001  
               ?_adcRead 0001                 ?___awdiv 0007                 ?___flmul 0013  
               ?___fltol 002C                 ?___lwdiv 0006                 ?___lwmod 0001  
               ?_lcdData 0001                 ?_celsius 0001                 ?_lcdInit 0001  
          lcdCommand@cmd 0008              __smallconst 0600                 ?_pinMode 0001  
       ___lwdiv@quotient 000A              ??_Delay40us 0001           ___wmul@product 0005  
           ??_lcdCommand 0007                lcdPrint@i 000D             ??_kpDebounce 0001  
      ___wmul@multiplier 0001          lcdCommand@old_D 0007    kpDebounce@valorAntigo 0040  
               _Delay2ms 1D2C       __end_of_lcdCommand 19AA             lcdData@old_D 0008  
           lcdData@valor 0007       __end_of_kpDebounce 1236         lcdSetCursor@line 0009  
              kelvin@tmp 003A                 __Hrparam 0000                 __Lrparam 0000  
           ??_readButton 0003         __size_of_adcInit 0030         __size_of_adcRead 0050  
       __size_of___awdiv 00C4         __size_of___flmul 042A         __size_of___fltol 0106  
       __size_of___lwdiv 0074         __size_of___lwmod 0064                 _fahr$900 0036  
       __size_of_lcdData 0054         __size_of_celsius 011E         __size_of_lcdInit 0078  
            fahr@tmpFahr 003C                 ___xxtofl 0F08         __size_of_pinMode 024E  
        ___lwdiv@divisor 0008          ___lwdiv@counter 000C                 __ptext10 14AC  
               __ptext11 1C68                 __ptext20 1A9C                 __ptext12 192C  
               __ptext21 1C18                 __ptext13 1D2C                 __ptext22 0F08  
               __ptext14 1BC8                 __ptext23 16D2                 __ptext15 1B74  
               __ptext24 0642                 __ptext16 0A6C                 __ptext25 1CD6  
               __ptext17 1D48                 __ptext26 0CBA                 __ptext18 15CA  
               __ptext19 1B10                 _lcdPrint 1BC8       __end_of_readButton 192C  
          __size_of_fahr 0152            __size_of_main 007A            __size_of_itoa 0108  
             Delay40us@i 0001            ?_digitalWrite 0001        digitalWrite@value 0003  
       ___lwmod@dividend 0001            ?_lcdSetCursor 0009          ___lwmod@divisor 0003  
            kpDebounce@i 000A              kpDebounce@j 0009              kpDebounce@k 0007  
        ___lwmod@counter 0005           ??_digitalWrite 0005          digitalWrite@pin 0001  
            lcdPrint@str 0009           ??_lcdSetCursor 000D  
